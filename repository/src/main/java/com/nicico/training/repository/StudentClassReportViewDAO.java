package com.nicico.training.repository;

import com.nicico.training.model.*;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface StudentClassReportViewDAO extends JpaRepository<StudentClassReportView, Long>, JpaSpecificationExecutor<StudentClassReportView> {

    @Query(value = "SELECT DISTINCT  VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.CLASS_STUDENT_SCORES_STATE FROM VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE WHERE VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.CLASS_STUDENT_SCORES_STATE is not null order by VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.CLASS_STUDENT_SCORES_STATE", nativeQuery = true)
    List<String> findAllScoreStateFromViewSCRV();

    @Query(value = "SELECT DISTINCT  VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_COMPANY_NAME FROM VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE WHERE VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_COMPANY_NAME is not null order by VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_COMPANY_NAME", nativeQuery = true)
    List<String> findAllCompanySCRV();

    @Query(value = "SELECT DISTINCT  VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_CPP_AREA FROM VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE WHERE VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_CPP_AREA is not null order by VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_CPP_AREA", nativeQuery = true)
    List<String> findAllAreaSCRV();

    @Query(value = "SELECT DISTINCT  VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_COMPLEX_TITLE FROM VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE WHERE VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_COMPLEX_TITLE is not null order by VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_COMPLEX_TITLE", nativeQuery = true)
    List<String> findAllComplexSCRV();

    @Query(value = "SELECT DISTINCT  VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_CPP_ASSISTANT FROM VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE WHERE VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_CPP_ASSISTANT is not null order by VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_CPP_ASSISTANT", nativeQuery = true)
    List<String> findAllAssistantSCRV();

    @Query(value = "SELECT DISTINCT  VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_CPP_AFFAIRS FROM VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE WHERE VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_CPP_AFFAIRS is not null order by VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_CPP_AFFAIRS", nativeQuery = true)
    List<String> findAllAffairsSCRV();

    @Query(value = "SELECT DISTINCT p.COURSE_CODE,p.COURSE_TITLE_FA FROM VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE p", nativeQuery = true)
    List<ICourseSCRV> findAllCourseSCRV();

    @Query(value = "SELECT DISTINCT  VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_CPP_UNIT FROM VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE WHERE VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_CPP_UNIT is not null order by VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE.STUDENT_CPP_UNIT", nativeQuery = true)
    List<String> findAllUnitSCRV();

    @Query(value = "SELECT DISTINCT  p.STUDENT_CPP_SECTION FROM VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE p WHERE p.STUDENT_CPP_SECTION is not null order by p.STUDENT_CPP_SECTION", nativeQuery = true)
    List<String> findAllSectionSCRV();

    @Query(value = "SELECT DISTINCT  p.TERM_CODE FROM VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE p WHERE p.TERM_CODE is not null order by p.TERM_CODE", nativeQuery = true)
    List<String> findAllTermCodeSCRV();

    List<ICourseSCRV> findDistinctByCourseIdIsNotNull();
}
