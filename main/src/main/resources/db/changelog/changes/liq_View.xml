<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd">

    <changeSet author="NICICO" id="VIEW_PERSONNEL_COURSE_NA_REPORT-011">
        <createView viewName="VIEW_PERSONNEL_COURSE_NA_REPORT" replaceIfExists="true">
            <![CDATA[
WITH result AS (
        SELECT
            1 AS priority,
            MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
            course.id                   AS course_id,
            course.c_code               AS course_code,
            course.c_title_fa           AS course_title_fa,
            prs.personnel_no            AS personnel_personnel_no,
            dep.c_omor_title            AS personnel_cpp_affairs,
            dep.c_hoze_title            AS personnel_cpp_area,
            dep.c_moavenat_title        AS personnel_cpp_assistant,
            prs.ccp_code                AS personnel_cpp_code,
            dep.c_ghesmat_title         AS personnel_cpp_section,
            dep.c_title                 AS personnel_cpp_title,
            dep.c_vahed_title           AS personnel_cpp_unit,
            prs.company_name            AS personnel_company_name,
            dep.c_hoze_title            AS personnel_complex_title,
            prs.education_level_title   AS personnel_education_level_title,
            prs.first_name              AS personnel_first_name,
            prs.id                      AS personnel_id,
            prs.job_no                  AS personnel_job_no,
            prs.job_title               AS personnel_job_title,
            prs.last_name               AS personnel_last_name,
            prs.national_code           AS personnel_national_code,
            prs.emp_no                  AS personnel_emp_no,
            prs.post_code               AS personnel_post_code,
            prs.post_grade_code         AS personnel_post_grade_code,
            prs.post_grade_title        AS personnel_post_grade_title,
            prs.post_title              AS personnel_post_title,
            prs.f_post_id               AS personnel_post_id,
            p.f_post_grade_id           AS personnel_post_grade_id,
            prs.f_department_id         AS personnel_department_id
        FROM
           (
                SELECT
                    f_object,
                    f_skill,
                    f_parameter_value_needs_assessment_priority
                FROM
                    tbl_needs_assessment
                WHERE
                    c_object_type = 'Post'
                    AND e_deleted IS NULL
                    AND e_enabled IS NULL
            ) na
            INNER JOIN tbl_skill               skill ON na.f_skill = skill.id
            INNER JOIN tbl_course              course ON skill.f_course = course.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) p ON na.f_object = p.id
            INNER JOIN view_active_personnel   prs ON prs.f_post_id = p.id
            LEFT JOIN tbl_department          dep ON dep.id = prs.f_department_id
        GROUP BY
            prs.id,
            course.id,
            course.c_code,
            course.c_title_fa,
            prs.personnel_no,
            dep.c_omor_title,
            dep.c_hoze_title,
            dep.c_moavenat_title,
            prs.ccp_code,
            dep.c_ghesmat_title,
            dep.c_title,
            dep.c_vahed_title,
            prs.company_name,
            dep.c_hoze_title,
            prs.education_level_title,
            prs.first_name,
            prs.job_no,
            prs.job_title,
            prs.last_name,
            prs.national_code,
            prs.emp_no,
            prs.post_code,
            prs.post_grade_code,
            prs.post_grade_title,
            prs.post_title,
            prs.f_post_id,
            p.f_post_grade_id,
            prs.f_department_id
        UNION ALL
        SELECT
            2 AS priority,
            MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
            course.id                   AS course_id,
            course.c_code               AS course_code,
            course.c_title_fa           AS course_title_fa,
            prs.personnel_no            AS personnel_personnel_no,
            dep.c_omor_title            AS personnel_cpp_affairs,
            dep.c_hoze_title            AS personnel_cpp_area,
            dep.c_moavenat_title        AS personnel_cpp_assistant,
            prs.ccp_code                AS personnel_cpp_code,
            dep.c_ghesmat_title         AS personnel_cpp_section,
            dep.c_title                 AS personnel_cpp_title,
            dep.c_vahed_title           AS personnel_cpp_unit,
            prs.company_name            AS personnel_company_name,
            dep.c_hoze_title            AS personnel_complex_title,
            prs.education_level_title   AS personnel_education_level_title,
            prs.first_name              AS personnel_first_name,
            prs.id                      AS personnel_id,
            prs.job_no                  AS personnel_job_no,
            prs.job_title               AS personnel_job_title,
            prs.last_name               AS personnel_last_name,
            prs.national_code           AS personnel_national_code,
            prs.emp_no                  AS personnel_emp_no,
            prs.post_code               AS personnel_post_code,
            prs.post_grade_code         AS personnel_post_grade_code,
            prs.post_grade_title        AS personnel_post_grade_title,
            prs.post_title              AS personnel_post_title,
            prs.f_post_id               AS personnel_post_id,
            p.f_post_grade_id           AS personnel_post_grade_id,
            prs.f_department_id         AS personnel_department_id
        FROM
            (
                SELECT
                    tbl_needs_assessment.f_object,
                    tbl_needs_assessment.f_skill,
                    tbl_needs_assessment.f_parameter_value_needs_assessment_priority
                FROM
                    tbl_needs_assessment
                WHERE
                    tbl_needs_assessment.c_object_type = 'TrainingPost'
                    AND e_deleted IS NULL
                    AND e_enabled IS NULL
            ) na
            INNER JOIN tbl_skill                skill ON na.f_skill = skill.id
            INNER JOIN tbl_course               course ON skill.f_course = course.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_training_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) tp ON na.f_object = tp.id
            INNER JOIN tbl_post_training_post   ptp ON ptp.f_training_post_id = tp.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) p ON p.id = ptp.f_post_id
            INNER JOIN view_active_personnel    prs ON prs.f_post_id = p.id
            LEFT JOIN tbl_department           dep ON dep.id = prs.f_department_id
        GROUP BY
            prs.id,
            course.id,
            course.c_code,
            course.c_title_fa,
            prs.personnel_no,
            dep.c_omor_title,
            dep.c_hoze_title,
            dep.c_moavenat_title,
            prs.ccp_code,
            dep.c_ghesmat_title,
            dep.c_title,
            dep.c_vahed_title,
            prs.company_name,
            dep.c_hoze_title,
            prs.education_level_title,
            prs.first_name,
            prs.job_no,
            prs.job_title,
            prs.last_name,
            prs.national_code,
            prs.emp_no,
            prs.post_code,
            prs.post_grade_code,
            prs.post_grade_title,
            prs.post_title,
            prs.f_post_id,
            p.f_post_grade_id,
            prs.f_department_id
        UNION ALL
        SELECT
            3 AS priority,
            MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
            course.id                   AS course_id,
            course.c_code               AS course_code,
            course.c_title_fa           AS course_title_fa,
            prs.personnel_no            AS personnel_personnel_no,
            dep.c_omor_title            AS personnel_cpp_affairs,
            dep.c_hoze_title            AS personnel_cpp_area,
            dep.c_moavenat_title        AS personnel_cpp_assistant,
            prs.ccp_code                AS personnel_cpp_code,
            dep.c_ghesmat_title         AS personnel_cpp_section,
            dep.c_title                 AS personnel_cpp_title,
            dep.c_vahed_title           AS personnel_cpp_unit,
            prs.company_name            AS personnel_company_name,
            dep.c_hoze_title            AS personnel_complex_title,
            prs.education_level_title   AS personnel_education_level_title,
            prs.first_name              AS personnel_first_name,
            prs.id                      AS personnel_id,
            prs.job_no                  AS personnel_job_no,
            prs.job_title               AS personnel_job_title,
            prs.last_name               AS personnel_last_name,
            prs.national_code           AS personnel_national_code,
            prs.emp_no                  AS personnel_emp_no,
            prs.post_code               AS personnel_post_code,
            prs.post_grade_code         AS personnel_post_grade_code,
            prs.post_grade_title        AS personnel_post_grade_title,
            prs.post_title              AS personnel_post_title,
            prs.f_post_id               AS personnel_post_id,
            p.f_post_grade_id           AS personnel_post_grade_id,
            prs.f_department_id         AS personnel_department_id
        FROM
            (
                SELECT
                    f_object,
                    f_skill,
                    f_parameter_value_needs_assessment_priority
                FROM
                    tbl_needs_assessment
                WHERE
                    c_object_type = 'PostGroup'
                    AND e_deleted IS NULL
                    AND e_enabled IS NULL
            ) na
            INNER JOIN tbl_skill               skill ON na.f_skill = skill.id
            INNER JOIN tbl_course              course ON skill.f_course = course.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_post_group
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) pg ON na.f_object = pg.id
            INNER JOIN tbl_post_postgroup      ppg ON pg.id = ppg.f_postgroup_id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) p ON ppg.f_post_id = p.id
            INNER JOIN view_active_personnel   prs ON prs.f_post_id = p.id
            LEFT JOIN tbl_department          dep ON dep.id = prs.f_department_id
        GROUP BY
            prs.id,
            course.id,
            course.c_code,
            course.c_title_fa,
            prs.personnel_no,
            dep.c_omor_title,
            dep.c_hoze_title,
            dep.c_moavenat_title,
            prs.ccp_code,
            dep.c_ghesmat_title,
            dep.c_title,
            dep.c_vahed_title,
            prs.company_name,
            dep.c_hoze_title,
            prs.education_level_title,
            prs.first_name,
            prs.job_no,
            prs.job_title,
            prs.last_name,
            prs.national_code,
            prs.emp_no,
            prs.post_code,
            prs.post_grade_code,
            prs.post_grade_title,
            prs.post_title,
            prs.f_post_id,
            p.f_post_grade_id,
            prs.f_department_id
        UNION ALL
        SELECT
            4 AS priority,
            MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
            course.id                   AS course_id,
            course.c_code               AS course_code,
            course.c_title_fa           AS course_title_fa,
            prs.personnel_no            AS personnel_personnel_no,
            dep.c_omor_title            AS personnel_cpp_affairs,
            dep.c_hoze_title            AS personnel_cpp_area,
            dep.c_moavenat_title        AS personnel_cpp_assistant,
            prs.ccp_code                AS personnel_cpp_code,
            dep.c_ghesmat_title         AS personnel_cpp_section,
            dep.c_title                 AS personnel_cpp_title,
            dep.c_vahed_title           AS personnel_cpp_unit,
            prs.company_name            AS personnel_company_name,
            dep.c_hoze_title            AS personnel_complex_title,
            prs.education_level_title   AS personnel_education_level_title,
            prs.first_name              AS personnel_first_name,
            prs.id                      AS personnel_id,
            prs.job_no                  AS personnel_job_no,
            prs.job_title               AS personnel_job_title,
            prs.last_name               AS personnel_last_name,
            prs.national_code           AS personnel_national_code,
            prs.emp_no                  AS personnel_emp_no,
            prs.post_code               AS personnel_post_code,
            prs.post_grade_code         AS personnel_post_grade_code,
            prs.post_grade_title        AS personnel_post_grade_title,
            prs.post_title              AS personnel_post_title,
            prs.f_post_id               AS personnel_post_id,
            p.f_post_grade_id           AS personnel_post_grade_id,
            prs.f_department_id         AS personnel_department_id
        FROM
            (
                SELECT
                    f_object,
                    f_skill,
                    f_parameter_value_needs_assessment_priority
                FROM
                    tbl_needs_assessment
                WHERE
                    c_object_type = 'PostGroup'
                    AND e_deleted IS NULL
                    AND e_enabled IS NULL
            ) na
            INNER JOIN tbl_skill                      skill ON na.f_skill = skill.id
            INNER JOIN tbl_course                     course ON skill.f_course = course.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_post_group
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) pg ON na.f_object = pg.id
            INNER JOIN tbl_training_post_post_group   tppg ON tppg.f_post_group_id = pg.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_training_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) tp ON tppg.f_training_post_id = tp.id
            INNER JOIN tbl_post_training_post         ptp ON tp.id = ptp.f_training_post_id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) p ON ptp.f_post_id = p.id
            INNER JOIN view_active_personnel          prs ON prs.f_post_id = p.id
            LEFT JOIN tbl_department                 dep ON dep.id = prs.f_department_id
        GROUP BY
            prs.id,
            course.id,
            course.c_code,
            course.c_title_fa,
            prs.personnel_no,
            dep.c_omor_title,
            dep.c_hoze_title,
            dep.c_moavenat_title,
            prs.ccp_code,
            dep.c_ghesmat_title,
            dep.c_title,
            dep.c_vahed_title,
            prs.company_name,
            dep.c_hoze_title,
            prs.education_level_title,
            prs.first_name,
            prs.job_no,
            prs.job_title,
            prs.last_name,
            prs.national_code,
            prs.emp_no,
            prs.post_code,
            prs.post_grade_code,
            prs.post_grade_title,
            prs.post_title,
            prs.f_post_id,
            p.f_post_grade_id,
            prs.f_department_id
        UNION ALL
        SELECT
            5 AS priority,
            MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
            course.id                   AS course_id,
            course.c_code               AS course_code,
            course.c_title_fa           AS course_title_fa,
            prs.personnel_no            AS personnel_personnel_no,
            dep.c_omor_title            AS personnel_cpp_affairs,
            dep.c_hoze_title            AS personnel_cpp_area,
            dep.c_moavenat_title        AS personnel_cpp_assistant,
            prs.ccp_code                AS personnel_cpp_code,
            dep.c_ghesmat_title         AS personnel_cpp_section,
            dep.c_title                 AS personnel_cpp_title,
            dep.c_vahed_title           AS personnel_cpp_unit,
            prs.company_name            AS personnel_company_name,
            dep.c_hoze_title            AS personnel_complex_title,
            prs.education_level_title   AS personnel_education_level_title,
            prs.first_name              AS personnel_first_name,
            prs.id                      AS personnel_id,
            prs.job_no                  AS personnel_job_no,
            prs.job_title               AS personnel_job_title,
            prs.last_name               AS personnel_last_name,
            prs.national_code           AS personnel_national_code,
            prs.emp_no                  AS personnel_emp_no,
            prs.post_code               AS personnel_post_code,
            prs.post_grade_code         AS personnel_post_grade_code,
            prs.post_grade_title        AS personnel_post_grade_title,
            prs.post_title              AS personnel_post_title,
            prs.f_post_id               AS personnel_post_id,
            p.f_post_grade_id           AS personnel_post_grade_id,
            prs.f_department_id         AS personnel_department_id
        FROM
            (
                SELECT
                    f_object,
                    f_skill,
                    f_parameter_value_needs_assessment_priority
                FROM
                    tbl_needs_assessment
                WHERE
                    c_object_type = 'Job'
                    AND e_deleted IS NULL
                    AND e_enabled IS NULL
            ) na
            INNER JOIN tbl_skill                skill ON na.f_skill = skill.id
            INNER JOIN tbl_course               course ON skill.f_course = course.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_job
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) j ON na.f_object = j.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_training_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) tp ON tp.f_job_id = j.id
            INNER JOIN tbl_post_training_post   ptp ON tp.id = ptp.f_training_post_id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) p ON ptp.f_post_id = p.id
            INNER JOIN view_active_personnel    prs ON prs.f_post_id = p.id
            LEFT JOIN tbl_department           dep ON dep.id = prs.f_department_id
        GROUP BY
            prs.id,
            course.id,
            course.c_code,
            course.c_title_fa,
            prs.personnel_no,
            dep.c_omor_title,
            dep.c_hoze_title,
            dep.c_moavenat_title,
            prs.ccp_code,
            dep.c_ghesmat_title,
            dep.c_title,
            dep.c_vahed_title,
            prs.company_name,
            dep.c_hoze_title,
            prs.education_level_title,
            prs.first_name,
            prs.job_no,
            prs.job_title,
            prs.last_name,
            prs.national_code,
            prs.emp_no,
            prs.post_code,
            prs.post_grade_code,
            prs.post_grade_title,
            prs.post_title,
            prs.f_post_id,
            p.f_post_grade_id,
            prs.f_department_id
        UNION ALL
        SELECT
            6 AS priority,
            MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
            course.id                   AS course_id,
            course.c_code               AS course_code,
            course.c_title_fa           AS course_title_fa,
            prs.personnel_no            AS personnel_personnel_no,
            dep.c_omor_title            AS personnel_cpp_affairs,
            dep.c_hoze_title            AS personnel_cpp_area,
            dep.c_moavenat_title        AS personnel_cpp_assistant,
            prs.ccp_code                AS personnel_cpp_code,
            dep.c_ghesmat_title         AS personnel_cpp_section,
            dep.c_title                 AS personnel_cpp_title,
            dep.c_vahed_title           AS personnel_cpp_unit,
            prs.company_name            AS personnel_company_name,
            dep.c_hoze_title            AS personnel_complex_title,
            prs.education_level_title   AS personnel_education_level_title,
            prs.first_name              AS personnel_first_name,
            prs.id                      AS personnel_id,
            prs.job_no                  AS personnel_job_no,
            prs.job_title               AS personnel_job_title,
            prs.last_name               AS personnel_last_name,
            prs.national_code           AS personnel_national_code,
            prs.emp_no                  AS personnel_emp_no,
            prs.post_code               AS personnel_post_code,
            prs.post_grade_code         AS personnel_post_grade_code,
            prs.post_grade_title        AS personnel_post_grade_title,
            prs.post_title              AS personnel_post_title,
            prs.f_post_id               AS personnel_post_id,
            p.f_post_grade_id           AS personnel_post_grade_id,
            prs.f_department_id         AS personnel_department_id
        FROM
            (
                SELECT
                    f_object,
                    f_skill,
                    f_parameter_value_needs_assessment_priority
                FROM
                    tbl_needs_assessment
                WHERE
                    c_object_type = 'JobGroup'
                    AND e_deleted IS NULL
                    AND e_enabled IS NULL
            ) na
            INNER JOIN tbl_skill                skill ON na.f_skill = skill.id
            INNER JOIN tbl_course               course ON skill.f_course = course.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_job_group
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) jg ON na.f_object = jg.id
            INNER JOIN tbl_job_jobgroup         jjg ON jg.id = jjg.f_jobgroup_id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_job
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) j ON jjg.f_job_id = j.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_training_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) tp ON tp.f_job_id = j.id
            INNER JOIN tbl_post_training_post   ptp ON tp.id = ptp.f_training_post_id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) p ON ptp.f_post_id = p.id
            INNER JOIN view_active_personnel    prs ON prs.f_post_id = p.id
            LEFT JOIN tbl_department           dep ON dep.id = prs.f_department_id
        GROUP BY
            prs.id,
            course.id,
            course.c_code,
            course.c_title_fa,
            prs.personnel_no,
            dep.c_omor_title,
            dep.c_hoze_title,
            dep.c_moavenat_title,
            prs.ccp_code,
            dep.c_ghesmat_title,
            dep.c_title,
            dep.c_vahed_title,
            prs.company_name,
            dep.c_hoze_title,
            prs.education_level_title,
            prs.first_name,
            prs.job_no,
            prs.job_title,
            prs.last_name,
            prs.national_code,
            prs.emp_no,
            prs.post_code,
            prs.post_grade_code,
            prs.post_grade_title,
            prs.post_title,
            prs.f_post_id,
            p.f_post_grade_id,
            prs.f_department_id
        UNION ALL
        SELECT
            7 AS priority,
            MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
            course.id                   AS course_id,
            course.c_code               AS course_code,
            course.c_title_fa           AS course_title_fa,
            prs.personnel_no            AS personnel_personnel_no,
            dep.c_omor_title            AS personnel_cpp_affairs,
            dep.c_hoze_title            AS personnel_cpp_area,
            dep.c_moavenat_title        AS personnel_cpp_assistant,
            prs.ccp_code                AS personnel_cpp_code,
            dep.c_ghesmat_title         AS personnel_cpp_section,
            dep.c_title                 AS personnel_cpp_title,
            dep.c_vahed_title           AS personnel_cpp_unit,
            prs.company_name            AS personnel_company_name,
            dep.c_hoze_title            AS personnel_complex_title,
            prs.education_level_title   AS personnel_education_level_title,
            prs.first_name              AS personnel_first_name,
            prs.id                      AS personnel_id,
            prs.job_no                  AS personnel_job_no,
            prs.job_title               AS personnel_job_title,
            prs.last_name               AS personnel_last_name,
            prs.national_code           AS personnel_national_code,
            prs.emp_no                  AS personnel_emp_no,
            prs.post_code               AS personnel_post_code,
            prs.post_grade_code         AS personnel_post_grade_code,
            prs.post_grade_title        AS personnel_post_grade_title,
            prs.post_title              AS personnel_post_title,
            prs.f_post_id               AS personnel_post_id,
            p.f_post_grade_id           AS personnel_post_grade_id,
            prs.f_department_id         AS personnel_department_id
        FROM
            (
                SELECT
                    f_object,
                    f_skill,
                    f_parameter_value_needs_assessment_priority
                FROM
                    tbl_needs_assessment
                WHERE
                    c_object_type = 'PostGrade'
                    AND e_deleted IS NULL
                    AND e_enabled IS NULL
            ) na
            INNER JOIN tbl_skill                skill ON na.f_skill = skill.id
            INNER JOIN tbl_course               course ON skill.f_course = course.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_post_grade
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) pg ON na.f_object = pg.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_training_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) tp ON tp.f_post_grade_id = pg.id
            INNER JOIN tbl_post_training_post   ptp ON tp.id = ptp.f_training_post_id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) p ON ptp.f_post_id = p.id
            INNER JOIN view_active_personnel    prs ON prs.f_post_id = p.id
            LEFT JOIN tbl_department           dep ON dep.id = prs.f_department_id
        GROUP BY
            prs.id,
            course.id,
            course.c_code,
            course.c_title_fa,
            prs.personnel_no,
            dep.c_omor_title,
            dep.c_hoze_title,
            dep.c_moavenat_title,
            prs.ccp_code,
            dep.c_ghesmat_title,
            dep.c_title,
            dep.c_vahed_title,
            prs.company_name,
            dep.c_hoze_title,
            prs.education_level_title,
            prs.first_name,
            prs.job_no,
            prs.job_title,
            prs.last_name,
            prs.national_code,
            prs.emp_no,
            prs.post_code,
            prs.post_grade_code,
            prs.post_grade_title,
            prs.post_title,
            prs.f_post_id,
            p.f_post_grade_id,
            prs.f_department_id
------------------------
        UNION ALL
        SELECT
            8 AS priority,
            MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
            course.id                   AS course_id,
            course.c_code               AS course_code,
            course.c_title_fa           AS course_title_fa,
            prs.personnel_no            AS personnel_personnel_no,
            dep.c_omor_title            AS personnel_cpp_affairs,
            dep.c_hoze_title            AS personnel_cpp_area,
            dep.c_moavenat_title        AS personnel_cpp_assistant,
            prs.ccp_code                AS personnel_cpp_code,
            dep.c_ghesmat_title         AS personnel_cpp_section,
            dep.c_title                 AS personnel_cpp_title,
            dep.c_vahed_title           AS personnel_cpp_unit,
            prs.company_name            AS personnel_company_name,
            dep.c_hoze_title            AS personnel_complex_title,
            prs.education_level_title   AS personnel_education_level_title,
            prs.first_name              AS personnel_first_name,
            prs.id                      AS personnel_id,
            prs.job_no                  AS personnel_job_no,
            prs.job_title               AS personnel_job_title,
            prs.last_name               AS personnel_last_name,
            prs.national_code           AS personnel_national_code,
            prs.emp_no                  AS personnel_emp_no,
            prs.post_code               AS personnel_post_code,
            prs.post_grade_code         AS personnel_post_grade_code,
            prs.post_grade_title        AS personnel_post_grade_title,
            prs.post_title              AS personnel_post_title,
            prs.f_post_id               AS personnel_post_id,
            p.f_post_grade_id           AS personnel_post_grade_id,
            prs.f_department_id         AS personnel_department_id
        FROM
            (
                SELECT
                    f_object,
                    f_skill,
                    f_parameter_value_needs_assessment_priority
                FROM
                    tbl_needs_assessment
                WHERE
                    c_object_type = 'PostGradeGroup'
                    AND e_deleted IS NULL
                    AND e_enabled IS NULL
            ) na
            INNER JOIN tbl_skill                         skill ON na.f_skill = skill.id
            INNER JOIN tbl_course                        course ON skill.f_course = course.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_post_grade_group
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) pgg ON na.f_object = pgg.id
            INNER JOIN tbl_post_grade_post_grade_group   pgpgg ON pgg.id = pgpgg.f_post_grade_group_id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_post_grade
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) pg ON pgpgg.f_post_grade_id = pg.id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_training_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) tp ON tp.f_post_grade_id = pg.id
            INNER JOIN tbl_post_training_post            ptp ON tp.id = ptp.f_training_post_id
            INNER JOIN (
                SELECT
                    *
                FROM
                    tbl_post
                WHERE
                    e_deleted IS NULL
                    AND e_enabled IS NULL
            ) p ON ptp.f_post_id = p.id
            INNER JOIN view_active_personnel             prs ON prs.f_post_id = p.id
            LEFT JOIN tbl_department                    dep ON dep.id = prs.f_department_id
        GROUP BY
            prs.id,
            course.id,
            course.c_code,
            course.c_title_fa,
            prs.personnel_no,
            dep.c_omor_title,
            dep.c_hoze_title,
            dep.c_moavenat_title,
            prs.ccp_code,
            dep.c_ghesmat_title,
            dep.c_title,
            dep.c_vahed_title,
            prs.company_name,
            dep.c_hoze_title,
            prs.education_level_title,
            prs.first_name,
            prs.job_no,
            prs.job_title,
            prs.last_name,
            prs.national_code,
            prs.emp_no,
            prs.post_code,
            prs.post_grade_code,
            prs.post_grade_title,
            prs.post_title,
            prs.f_post_id,
            p.f_post_grade_id,
            prs.f_department_id
    )
    SELECT
        mod(MIN(10 * priority + na_priority_id - 111), 10) + 111 AS na_priority_id,
        course_id,
        course_code,
        course_title_fa,
        personnel_personnel_no,
        personnel_cpp_affairs,
        personnel_cpp_area,
        personnel_cpp_assistant,
        personnel_cpp_code,
        personnel_cpp_section,
        personnel_cpp_title,
        personnel_cpp_unit,
        personnel_company_name,
        personnel_complex_title,
        personnel_education_level_title,
        personnel_first_name,
        personnel_id,
        personnel_job_no,
        personnel_job_title,
        personnel_last_name,
        personnel_national_code,
        personnel_emp_no,
        personnel_post_code,
        personnel_post_grade_code,
        personnel_post_grade_title,
        personnel_post_title,
        personnel_post_id,
        personnel_post_grade_id,
        personnel_department_id
    FROM
        result r
    GROUP BY
        course_id,
        course_code,
        course_title_fa,
        personnel_personnel_no,
        personnel_cpp_affairs,
        personnel_cpp_area,
        personnel_cpp_assistant,
        personnel_cpp_code,
        personnel_cpp_section,
        personnel_cpp_title,
        personnel_cpp_unit,
        personnel_company_name,
        personnel_complex_title,
        personnel_education_level_title,
        personnel_first_name,
        personnel_id,
        personnel_job_no,
        personnel_job_title,
        personnel_last_name,
        personnel_national_code,
        personnel_emp_no,
        personnel_post_code,
        personnel_post_grade_code,
        personnel_post_grade_title,
        personnel_post_title,
        personnel_post_id,
        personnel_post_grade_id,
        personnel_department_id
			]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_NA_REPORT-002">
        <createView viewName="VIEW_NA_REPORT" replaceIfExists="true">
            <![CDATA[
        WITH result AS (
        SELECT
            1 AS priority,
            tbl_needs_assessment.id               AS na_id,
            na_priority.id                        AS na_priority_id,
            na_priority.c_title                   AS na_priority,
            na_domain.id                          AS na_domain_id,
            na_domain.c_title                     AS na_domain,
            tbl_competence.id                     AS competence_id,
            tbl_competence.c_title                AS competence_title,
            com_type.id                           AS competence_type_id,
            com_type.c_title                      AS competence_type,
            tbl_skill.id                          AS skill_id,
            tbl_skill.c_code                      AS skill_code,
            tbl_skill.c_title_fa                  AS skill_title_fa,
            tbl_course.id                         AS course_id,
            tbl_course.c_code                     AS course_code,
            tbl_course.c_title_fa                 AS course_title_fa,
            tbl_post.id                           AS post_id,
            tbl_post.c_affairs                    AS post_affairs,
            tbl_post.c_area                       AS post_area,
            tbl_post.c_assistance                 AS post_assistance,
            tbl_post.c_code                       AS post_code,
            tbl_post.c_cost_center_code           AS post_cost_center_code,
            tbl_post.c_cost_center_title_fa       AS post_cost_center_title,
            tbl_post.c_section                    AS post_section,
            tbl_post.c_title_fa                   AS post_title_fa,
            tbl_post.c_unit                       AS post_unit,
            tbl_personnel.personnel_no            AS personnel_personnel_no,
            tbl_personnel.active                  AS personnel_active,
            tbl_personnel.ccp_affairs             AS personnel_cpp_affairs,
            tbl_personnel.ccp_area                AS personnel_cpp_area,
            tbl_personnel.ccp_assistant           AS personnel_cpp_assistant,
            tbl_personnel.ccp_code                AS personnel_cpp_code,
            tbl_personnel.ccp_section             AS personnel_cpp_section,
            tbl_personnel.ccp_title               AS personnel_cpp_title,
            tbl_personnel.ccp_unit                AS personnel_cpp_unit,
            tbl_personnel.company_name            AS personnel_company_name,
            tbl_personnel.complex_title           AS personnel_complex_title,
            tbl_personnel.education_level_title   AS personnel_education_level_title,
            tbl_personnel.first_name              AS personnel_first_name,
            tbl_personnel.id                      AS personnel_id,
            tbl_personnel.job_no                  AS personnel_job_no,
            tbl_personnel.job_title               AS personnel_job_title,
            tbl_personnel.last_name               AS personnel_last_name,
            tbl_personnel.national_code           AS personnel_national_code,
            tbl_personnel.emp_no                  AS personnel_emp_no,
            tbl_personnel.post_code               AS personnel_post_code,
            tbl_personnel.post_grade_code         AS personnel_post_grade_code,
            tbl_personnel.post_grade_title        AS personnel_post_grade_title,
            tbl_personnel.post_title              AS personnel_post_title,
            NULL AS post_group_title_fa,
            NULL AS post_group_id,
            NULL AS job_id,
            NULL AS job_code,
            NULL AS job_title_fa,
            NULL AS job_group_id,
            NULL AS job_group_title_fa,
            NULL AS post_grade_id,
            NULL AS post_grade_code,
            NULL AS post_grade_title_fa,
            NULL AS post_grade_group_id,
            NULL AS post_grade_group_title_fa
        FROM
            tbl_needs_assessment
            INNER JOIN tbl_skill ON tbl_needs_assessment.f_skill = tbl_skill.id
            INNER JOIN tbl_course ON tbl_skill.f_course = tbl_course.id
            INNER JOIN tbl_post ON tbl_needs_assessment.f_object = tbl_post.id
                                   AND tbl_needs_assessment.c_object_type = 'Post'
            INNER JOIN tbl_competence ON tbl_needs_assessment.f_competence = tbl_competence.id
            INNER JOIN tbl_parameter_value   na_priority ON tbl_needs_assessment.f_parameter_value_needs_assessment_priority = na_priority
            .id
            INNER JOIN tbl_parameter_value   na_domain ON tbl_needs_assessment.f_parameter_value_needs_assessment_domain = na_domain.id
            LEFT JOIN tbl_personnel ON tbl_personnel.post_code = tbl_post.c_code
            INNER JOIN tbl_parameter_value   com_type ON tbl_competence.f_parameter_value = com_type.id
        UNION
        SELECT
            2 AS priority,
            tbl_needs_assessment.id               AS na_id,
            na_priority.id                        AS na_priority_id,
            na_priority.c_title                   AS na_priority,
            na_domain.id                          AS na_domain_id,
            na_domain.c_title                     AS na_domain,
            tbl_competence.id                     AS competence_id,
            tbl_competence.c_title                AS competence_title,
            com_type.id                           AS competence_type_id,
            com_type.c_title                      AS competence_type,
            tbl_skill.id                          AS skill_id,
            tbl_skill.c_code                      AS skill_code,
            tbl_skill.c_title_fa                  AS skill_title_fa,
            tbl_course.id                         AS course_id,
            tbl_course.c_code                     AS course_code,
            tbl_course.c_title_fa                 AS course_title_fa,
            tbl_post.id                           AS post_id,
            tbl_post.c_affairs                    AS post_affairs,
            tbl_post.c_area                       AS post_area,
            tbl_post.c_assistance                 AS post_assistance,
            tbl_post.c_code                       AS post_code,
            tbl_post.c_cost_center_code           AS post_cost_center_code,
            tbl_post.c_cost_center_title_fa       AS post_cost_center_title,
            tbl_post.c_section                    AS post_section,
            tbl_post.c_title_fa                   AS post_title_fa,
            tbl_post.c_unit                       AS post_unit,
            tbl_personnel.personnel_no            AS personnel_personnel_no,
            tbl_personnel.active                  AS personnel_active,
            tbl_personnel.ccp_affairs             AS personnel_cpp_affairs,
            tbl_personnel.ccp_area                AS personnel_cpp_area,
            tbl_personnel.ccp_assistant           AS personnel_cpp_assistant,
            tbl_personnel.ccp_code                AS personnel_cpp_code,
            tbl_personnel.ccp_section             AS personnel_cpp_section,
            tbl_personnel.ccp_title               AS personnel_cpp_title,
            tbl_personnel.ccp_unit                AS personnel_cpp_unit,
            tbl_personnel.company_name            AS personnel_company_name,
            tbl_personnel.complex_title           AS personnel_complex_title,
            tbl_personnel.education_level_title   AS personnel_education_level_title,
            tbl_personnel.first_name              AS personnel_first_name,
            tbl_personnel.id                      AS personnel_id,
            tbl_personnel.job_no                  AS personnel_job_no,
            tbl_personnel.job_title               AS personnel_job_title,
            tbl_personnel.last_name               AS personnel_last_name,
            tbl_personnel.national_code           AS personnel_national_code,
            tbl_personnel.emp_no                  AS personnel_emp_no,
            tbl_personnel.post_code               AS personnel_post_code,
            tbl_personnel.post_grade_code         AS personnel_post_grade_code,
            tbl_personnel.post_grade_title        AS personnel_post_grade_title,
            tbl_personnel.post_title              AS personnel_post_title,
            tbl_post_group.c_title_fa             AS post_group_title_fa,
            tbl_post_group.id                     AS post_group_id,
            NULL AS job_id,
            NULL AS job_code,
            NULL AS job_title_fa,
            NULL AS job_group_id,
            NULL AS job_group_title_fa,
            NULL AS post_grade_id,
            NULL AS post_grade_code,
            NULL AS post_grade_title_fa,
            NULL AS post_grade_group_id,
            NULL AS post_grade_group_title_fa
        FROM
            tbl_needs_assessment
            INNER JOIN tbl_skill ON tbl_needs_assessment.f_skill = tbl_skill.id
            INNER JOIN tbl_course ON tbl_skill.f_course = tbl_course.id
            INNER JOIN tbl_competence ON tbl_needs_assessment.f_competence = tbl_competence.id
            INNER JOIN tbl_parameter_value   na_priority ON tbl_needs_assessment.f_parameter_value_needs_assessment_priority = na_priority
            .id
            INNER JOIN tbl_parameter_value   na_domain ON tbl_needs_assessment.f_parameter_value_needs_assessment_domain = na_domain.id
            INNER JOIN tbl_parameter_value   com_type ON tbl_competence.f_parameter_value = com_type.id
            INNER JOIN tbl_post_group ON tbl_needs_assessment.f_object = tbl_post_group.id
                                         AND tbl_needs_assessment.c_object_type = 'PostGroup'
            LEFT JOIN tbl_post_postgroup ON tbl_post_group.id = tbl_post_postgroup.f_postgroup_id
            INNER JOIN tbl_post ON tbl_post_postgroup.f_post_id = tbl_post.id
            LEFT JOIN tbl_personnel ON tbl_personnel.post_code = tbl_post.c_code
        UNION
        SELECT
            3 AS priority,
            tbl_needs_assessment.id               AS na_id,
            na_priority.id                        AS na_priority_id,
            na_priority.c_title                   AS na_priority,
            na_domain.id                          AS na_domain_id,
            na_domain.c_title                     AS na_domain,
            tbl_competence.id                     AS competence_id,
            tbl_competence.c_title                AS competence_title,
            com_type.id                           AS competence_type_id,
            com_type.c_title                      AS competence_type,
            tbl_skill.id                          AS skill_id,
            tbl_skill.c_code                      AS skill_code,
            tbl_skill.c_title_fa                  AS skill_title_fa,
            tbl_course.id                         AS course_id,
            tbl_course.c_code                     AS course_code,
            tbl_course.c_title_fa                 AS course_title_fa,
            tbl_post.id                           AS post_id,
            tbl_post.c_affairs                    AS post_affairs,
            tbl_post.c_area                       AS post_area,
            tbl_post.c_assistance                 AS post_assistance,
            tbl_post.c_code                       AS post_code,
            tbl_post.c_cost_center_code           AS post_cost_center_code,
            tbl_post.c_cost_center_title_fa       AS post_cost_center_title,
            tbl_post.c_section                    AS post_section,
            tbl_post.c_title_fa                   AS post_title_fa,
            tbl_post.c_unit                       AS post_unit,
            tbl_personnel.personnel_no            AS personnel_personnel_no,
            tbl_personnel.active                  AS personnel_active,
            tbl_personnel.ccp_affairs             AS personnel_cpp_affairs,
            tbl_personnel.ccp_area                AS personnel_cpp_area,
            tbl_personnel.ccp_assistant           AS personnel_cpp_assistant,
            tbl_personnel.ccp_code                AS personnel_cpp_code,
            tbl_personnel.ccp_section             AS personnel_cpp_section,
            tbl_personnel.ccp_title               AS personnel_cpp_title,
            tbl_personnel.ccp_unit                AS personnel_cpp_unit,
            tbl_personnel.company_name            AS personnel_company_name,
            tbl_personnel.complex_title           AS personnel_complex_title,
            tbl_personnel.education_level_title   AS personnel_education_level_title,
            tbl_personnel.first_name              AS personnel_first_name,
            tbl_personnel.id                      AS personnel_id,
            tbl_personnel.job_no                  AS personnel_job_no,
            tbl_personnel.job_title               AS personnel_job_title,
            tbl_personnel.last_name               AS personnel_last_name,
            tbl_personnel.national_code           AS personnel_national_code,
            tbl_personnel.emp_no                  AS personnel_emp_no,
            tbl_personnel.post_code               AS personnel_post_code,
            tbl_personnel.post_grade_code         AS personnel_post_grade_code,
            tbl_personnel.post_grade_title        AS personnel_post_grade_title,
            tbl_personnel.post_title              AS personnel_post_title,
            NULL AS post_group_title_fa,
            NULL AS post_group_id,
            tbl_job.id                            AS job_id,
            tbl_job.c_code                        AS job_code,
            tbl_job.c_title_fa                    AS job_title_fa,
            NULL AS job_group_id,
            NULL AS job_group_title_fa,
            NULL AS post_grade_id,
            NULL AS post_grade_code,
            NULL AS post_grade_title_fa,
            NULL AS post_grade_group_id,
            NULL AS post_grade_group_title_fa
        FROM
            tbl_needs_assessment
            INNER JOIN tbl_skill ON tbl_needs_assessment.f_skill = tbl_skill.id
            INNER JOIN tbl_course ON tbl_skill.f_course = tbl_course.id
            INNER JOIN tbl_competence ON tbl_needs_assessment.f_competence = tbl_competence.id
            INNER JOIN tbl_parameter_value   na_priority ON tbl_needs_assessment.f_parameter_value_needs_assessment_priority = na_priority
            .id
            INNER JOIN tbl_parameter_value   na_domain ON tbl_needs_assessment.f_parameter_value_needs_assessment_domain = na_domain.id
            INNER JOIN tbl_parameter_value   com_type ON tbl_competence.f_parameter_value = com_type.id
            INNER JOIN tbl_job ON tbl_needs_assessment.f_object = tbl_job.id
                                  AND tbl_needs_assessment.c_object_type = 'Job'
            LEFT JOIN tbl_post ON tbl_job.id = tbl_post.f_job_id
            LEFT JOIN tbl_personnel ON tbl_personnel.post_code = tbl_post.c_code
        UNION
        SELECT
            4 AS priority,
            tbl_needs_assessment.id               AS na_id,
            na_priority.id                        AS na_priority_id,
            na_priority.c_title                   AS na_priority,
            na_domain.id                          AS na_domain_id,
            na_domain.c_title                     AS na_domain,
            tbl_competence.id                     AS competence_id,
            tbl_competence.c_title                AS competence_title,
            com_type.id                           AS competence_type_id,
            com_type.c_title                      AS competence_type,
            tbl_skill.id                          AS skill_id,
            tbl_skill.c_code                      AS skill_code,
            tbl_skill.c_title_fa                  AS skill_title_fa,
            tbl_course.id                         AS course_id,
            tbl_course.c_code                     AS course_code,
            tbl_course.c_title_fa                 AS course_title_fa,
            tbl_post.id                           AS post_id,
            tbl_post.c_affairs                    AS post_affairs,
            tbl_post.c_area                       AS post_area,
            tbl_post.c_assistance                 AS post_assistance,
            tbl_post.c_code                       AS post_code,
            tbl_post.c_cost_center_code           AS post_cost_center_code,
            tbl_post.c_cost_center_title_fa       AS post_cost_center_title,
            tbl_post.c_section                    AS post_section,
            tbl_post.c_title_fa                   AS post_title_fa,
            tbl_post.c_unit                       AS post_unit,
            tbl_personnel.personnel_no            AS personnel_personnel_no,
            tbl_personnel.active                  AS personnel_active,
            tbl_personnel.ccp_affairs             AS personnel_cpp_affairs,
            tbl_personnel.ccp_area                AS personnel_cpp_area,
            tbl_personnel.ccp_assistant           AS personnel_cpp_assistant,
            tbl_personnel.ccp_code                AS personnel_cpp_code,
            tbl_personnel.ccp_section             AS personnel_cpp_section,
            tbl_personnel.ccp_title               AS personnel_cpp_title,
            tbl_personnel.ccp_unit                AS personnel_cpp_unit,
            tbl_personnel.company_name            AS personnel_company_name,
            tbl_personnel.complex_title           AS personnel_complex_title,
            tbl_personnel.education_level_title   AS personnel_education_level_title,
            tbl_personnel.first_name              AS personnel_first_name,
            tbl_personnel.id                      AS personnel_id,
            tbl_personnel.job_no                  AS personnel_job_no,
            tbl_personnel.job_title               AS personnel_job_title,
            tbl_personnel.last_name               AS personnel_last_name,
            tbl_personnel.national_code           AS personnel_national_code,
            tbl_personnel.emp_no                  AS personnel_emp_no,
            tbl_personnel.post_code               AS personnel_post_code,
            tbl_personnel.post_grade_code         AS personnel_post_grade_code,
            tbl_personnel.post_grade_title        AS personnel_post_grade_title,
            tbl_personnel.post_title              AS personnel_post_title,
            NULL AS post_group_title_fa,
            NULL AS post_group_id,
            tbl_job.id                            AS job_id,
            tbl_job.c_code                        AS job_code,
            tbl_job.c_title_fa                    AS job_title_fa,
            tbl_job_group.id                      AS job_group_id,
            tbl_job_group.c_title_fa              AS job_group_title_fa,
            NULL AS post_grade_id,
            NULL AS post_grade_code,
            NULL AS post_grade_title_fa,
            NULL AS post_grade_group_id,
            NULL AS post_grade_group_title_fa
        FROM
            tbl_needs_assessment
            INNER JOIN tbl_skill ON tbl_needs_assessment.f_skill = tbl_skill.id
            INNER JOIN tbl_course ON tbl_skill.f_course = tbl_course.id
            INNER JOIN tbl_competence ON tbl_needs_assessment.f_competence = tbl_competence.id
            INNER JOIN tbl_parameter_value   na_priority ON tbl_needs_assessment.f_parameter_value_needs_assessment_priority = na_priority
            .id
            INNER JOIN tbl_parameter_value   na_domain ON tbl_needs_assessment.f_parameter_value_needs_assessment_domain = na_domain.id
            INNER JOIN tbl_parameter_value   com_type ON tbl_competence.f_parameter_value = com_type.id
            INNER JOIN tbl_job_group ON tbl_needs_assessment.f_object = tbl_job_group.id
                                        AND tbl_needs_assessment.c_object_type = 'JobGroup'
            LEFT JOIN tbl_job_jobgroup ON tbl_job_group.id = tbl_job_jobgroup.f_jobgroup_id
            INNER JOIN tbl_job ON tbl_job_jobgroup.f_job_id = tbl_job.id
            LEFT JOIN tbl_post ON tbl_job.id = tbl_post.f_job_id
            LEFT JOIN tbl_personnel ON tbl_personnel.post_code = tbl_post.c_code
        UNION
        SELECT
            5 AS priority,
            tbl_needs_assessment.id               AS na_id,
            na_priority.id                        AS na_priority_id,
            na_priority.c_title                   AS na_priority,
            na_domain.id                          AS na_domain_id,
            na_domain.c_title                     AS na_domain,
            tbl_competence.id                     AS competence_id,
            tbl_competence.c_title                AS competence_title,
            com_type.id                           AS competence_type_id,
            com_type.c_title                      AS competence_type,
            tbl_skill.id                          AS skill_id,
            tbl_skill.c_code                      AS skill_code,
            tbl_skill.c_title_fa                  AS skill_title_fa,
            tbl_course.id                         AS course_id,
            tbl_course.c_code                     AS course_code,
            tbl_course.c_title_fa                 AS course_title_fa,
            tbl_post.id                           AS post_id,
            tbl_post.c_affairs                    AS post_affairs,
            tbl_post.c_area                       AS post_area,
            tbl_post.c_assistance                 AS post_assistance,
            tbl_post.c_code                       AS post_code,
            tbl_post.c_cost_center_code           AS post_cost_center_code,
            tbl_post.c_cost_center_title_fa       AS post_cost_center_title,
            tbl_post.c_section                    AS post_section,
            tbl_post.c_title_fa                   AS post_title_fa,
            tbl_post.c_unit                       AS post_unit,
            tbl_personnel.personnel_no            AS personnel_personnel_no,
            tbl_personnel.active                  AS personnel_active,
            tbl_personnel.ccp_affairs             AS personnel_cpp_affairs,
            tbl_personnel.ccp_area                AS personnel_cpp_area,
            tbl_personnel.ccp_assistant           AS personnel_cpp_assistant,
            tbl_personnel.ccp_code                AS personnel_cpp_code,
            tbl_personnel.ccp_section             AS personnel_cpp_section,
            tbl_personnel.ccp_title               AS personnel_cpp_title,
            tbl_personnel.ccp_unit                AS personnel_cpp_unit,
            tbl_personnel.company_name            AS personnel_company_name,
            tbl_personnel.complex_title           AS personnel_complex_title,
            tbl_personnel.education_level_title   AS personnel_education_level_title,
            tbl_personnel.first_name              AS personnel_first_name,
            tbl_personnel.id                      AS personnel_id,
            tbl_personnel.job_no                  AS personnel_job_no,
            tbl_personnel.job_title               AS personnel_job_title,
            tbl_personnel.last_name               AS personnel_last_name,
            tbl_personnel.national_code           AS personnel_national_code,
            tbl_personnel.emp_no                  AS personnel_emp_no,
            tbl_personnel.post_code               AS personnel_post_code,
            tbl_personnel.post_grade_code         AS personnel_post_grade_code,
            tbl_personnel.post_grade_title        AS personnel_post_grade_title,
            tbl_personnel.post_title              AS personnel_post_title,
            NULL AS post_group_title_fa,
            NULL AS post_group_id,
            NULL AS job_id,
            NULL AS job_code,
            NULL AS job_title_fa,
            NULL AS job_group_id,
            NULL AS job_group_title_fa,
            tbl_post_grade.id                     AS post_grade_id,
            tbl_post_grade.c_code                 AS post_grade_code,
            tbl_post_grade.c_title_fa             AS post_grade_title_fa,
            NULL AS post_grade_group_id,
            NULL AS post_grade_group_title_fa
        FROM
            tbl_needs_assessment
            INNER JOIN tbl_skill ON tbl_needs_assessment.f_skill = tbl_skill.id
            INNER JOIN tbl_course ON tbl_skill.f_course = tbl_course.id
            INNER JOIN tbl_competence ON tbl_needs_assessment.f_competence = tbl_competence.id
            INNER JOIN tbl_parameter_value   na_priority ON tbl_needs_assessment.f_parameter_value_needs_assessment_priority = na_priority
            .id
            INNER JOIN tbl_parameter_value   na_domain ON tbl_needs_assessment.f_parameter_value_needs_assessment_domain = na_domain.id
            INNER JOIN tbl_parameter_value   com_type ON tbl_competence.f_parameter_value = com_type.id
            INNER JOIN tbl_post_grade ON tbl_needs_assessment.f_object = tbl_post_grade.id
                                         AND tbl_needs_assessment.c_object_type = 'PostGrade'
            LEFT JOIN tbl_post ON tbl_post_grade.id = tbl_post.f_post_grade_id
            LEFT JOIN tbl_personnel ON tbl_personnel.post_code = tbl_post.c_code
        UNION
        SELECT
            6 AS priority,
            tbl_needs_assessment.id               AS na_id,
            na_priority.id                        AS na_priority_id,
            na_priority.c_title                   AS na_priority,
            na_domain.id                          AS na_domain_id,
            na_domain.c_title                     AS na_domain,
            tbl_competence.id                     AS competence_id,
            tbl_competence.c_title                AS competence_title,
            com_type.id                           AS competence_type_id,
            com_type.c_title                      AS competence_type,
            tbl_skill.id                          AS skill_id,
            tbl_skill.c_code                      AS skill_code,
            tbl_skill.c_title_fa                  AS skill_title_fa,
            tbl_course.id                         AS course_id,
            tbl_course.c_code                     AS course_code,
            tbl_course.c_title_fa                 AS course_title_fa,
            tbl_post.id                           AS post_id,
            tbl_post.c_affairs                    AS post_affairs,
            tbl_post.c_area                       AS post_area,
            tbl_post.c_assistance                 AS post_assistance,
            tbl_post.c_code                       AS post_code,
            tbl_post.c_cost_center_code           AS post_cost_center_code,
            tbl_post.c_cost_center_title_fa       AS post_cost_center_title,
            tbl_post.c_section                    AS post_section,
            tbl_post.c_title_fa                   AS post_title_fa,
            tbl_post.c_unit                       AS post_unit,
            tbl_personnel.personnel_no            AS personnel_personnel_no,
            tbl_personnel.active                  AS personnel_active,
            tbl_personnel.ccp_affairs             AS personnel_cpp_affairs,
            tbl_personnel.ccp_area                AS personnel_cpp_area,
            tbl_personnel.ccp_assistant           AS personnel_cpp_assistant,
            tbl_personnel.ccp_code                AS personnel_cpp_code,
            tbl_personnel.ccp_section             AS personnel_cpp_section,
            tbl_personnel.ccp_title               AS personnel_cpp_title,
            tbl_personnel.ccp_unit                AS personnel_cpp_unit,
            tbl_personnel.company_name            AS personnel_company_name,
            tbl_personnel.complex_title           AS personnel_complex_title,
            tbl_personnel.education_level_title   AS personnel_education_level_title,
            tbl_personnel.first_name              AS personnel_first_name,
            tbl_personnel.id                      AS personnel_id,
            tbl_personnel.job_no                  AS personnel_job_no,
            tbl_personnel.job_title               AS personnel_job_title,
            tbl_personnel.last_name               AS personnel_last_name,
            tbl_personnel.national_code           AS personnel_national_code,
            tbl_personnel.emp_no                  AS personnel_emp_no,
            tbl_personnel.post_code               AS personnel_post_code,
            tbl_personnel.post_grade_code         AS personnel_post_grade_code,
            tbl_personnel.post_grade_title        AS personnel_post_grade_title,
            tbl_personnel.post_title              AS personnel_post_title,
            NULL AS post_group_title_fa,
            NULL AS post_group_id,
            NULL AS job_id,
            NULL AS job_code,
            NULL AS job_title_fa,
            NULL AS job_group_id,
            NULL AS job_group_title_fa,
            tbl_post_grade.id                     AS post_grade_id,
            tbl_post_grade.c_code                 AS post_grade_code,
            tbl_post_grade.c_title_fa             AS post_grade_title_fa,
            tbl_post_grade_group.id               AS post_grade_group_id,
            tbl_post_grade_group.c_title_fa       AS post_grade_group_title_fa
        FROM
            tbl_needs_assessment
            INNER JOIN tbl_skill ON tbl_needs_assessment.f_skill = tbl_skill.id
            INNER JOIN tbl_course ON tbl_skill.f_course = tbl_course.id
            INNER JOIN tbl_competence ON tbl_needs_assessment.f_competence = tbl_competence.id
            INNER JOIN tbl_parameter_value   na_priority ON tbl_needs_assessment.f_parameter_value_needs_assessment_priority = na_priority
            .id
            INNER JOIN tbl_parameter_value   na_domain ON tbl_needs_assessment.f_parameter_value_needs_assessment_domain = na_domain.id
            INNER JOIN tbl_parameter_value   com_type ON tbl_competence.f_parameter_value = com_type.id
            INNER JOIN tbl_post_grade_group ON tbl_needs_assessment.f_object = tbl_post_grade_group.id
                                               AND tbl_needs_assessment.c_object_type = 'PostGradeGroup'
            LEFT JOIN tbl_post_grade_post_grade_group ON tbl_post_grade_group.id = tbl_post_grade_post_grade_group.f_post_grade_group_id
            INNER JOIN tbl_post_grade ON tbl_post_grade_post_grade_group.f_post_grade_id = tbl_post_grade.id
            LEFT JOIN tbl_post ON tbl_post_grade.id = tbl_post.f_post_grade_id
            LEFT JOIN tbl_personnel ON tbl_personnel.post_code = tbl_post.c_code
        ORDER BY
            na_priority_id
    )
    SELECT
        "PRIORITY","NA_ID","NA_PRIORITY_ID","NA_PRIORITY","NA_DOMAIN_ID","NA_DOMAIN","COMPETENCE_ID","COMPETENCE_TITLE","COMPETENCE_TYPE_ID","COMPETENCE_TYPE","SKILL_ID","SKILL_CODE","SKILL_TITLE_FA","COURSE_ID","COURSE_CODE","COURSE_TITLE_FA","POST_ID","POST_AFFAIRS","POST_AREA","POST_ASSISTANCE","POST_CODE","POST_COST_CENTER_CODE","POST_COST_CENTER_TITLE","POST_SECTION","POST_TITLE_FA","POST_UNIT","PERSONNEL_PERSONNEL_NO","PERSONNEL_ACTIVE","PERSONNEL_CPP_AFFAIRS","PERSONNEL_CPP_AREA","PERSONNEL_CPP_ASSISTANT","PERSONNEL_CPP_CODE","PERSONNEL_CPP_SECTION","PERSONNEL_CPP_TITLE","PERSONNEL_CPP_UNIT","PERSONNEL_COMPANY_NAME","PERSONNEL_COMPLEX_TITLE","PERSONNEL_EDUCATION_LEVEL_TITLE","PERSONNEL_FIRST_NAME","PERSONNEL_ID","PERSONNEL_JOB_NO","PERSONNEL_JOB_TITLE","PERSONNEL_LAST_NAME","PERSONNEL_NATIONAL_CODE","PERSONNEL_EMP_NO","PERSONNEL_POST_CODE","PERSONNEL_POST_GRADE_CODE","PERSONNEL_POST_GRADE_TITLE","PERSONNEL_POST_TITLE","POST_GROUP_TITLE_FA","POST_GROUP_ID","JOB_ID","JOB_CODE","JOB_TITLE_FA","JOB_GROUP_ID","JOB_GROUP_TITLE_FA","POST_GRADE_ID","POST_GRADE_CODE","POST_GRADE_TITLE_FA","POST_GRADE_GROUP_ID","POST_GRADE_GROUP_TITLE_FA"
    FROM
        result r
    WHERE
        r.priority = (
            SELECT
                MIN(r1.priority)
            FROM
                result r1
            WHERE
                r.skill_id = r1.skill_id
                AND r.post_id = r1.post_id
        )
    			]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE-011">
        <createView viewName="VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE" replaceIfExists="true">
            <![CDATA[
                SELECT
                    1 AS is_personnel,
                    tbl_student.id                             AS student_id,
                    tbl_student.active                         AS student_active,
                    department.c_omor_title                    AS student_cpp_affairs,
                    department.c_hoze_title                    AS student_cpp_area,
                    department.c_moavenat_title                AS student_cpp_assistant,
                    tbl_student.ccp_code                       AS student_cpp_code,
                    department.c_ghesmat_title                 AS student_cpp_section,
                    tbl_student.ccp_title                      AS student_cpp_title,
                    department.c_vahed_title                   AS student_cpp_unit,
                    tbl_student.company_name                   AS student_company_name,
                    department.c_hoze_title                    AS student_complex_title,
                    tbl_student.education_level_title          AS student_education_level_title,
                    tbl_student.first_name                     AS student_first_name,
                    tbl_student.job_no                         AS student_job_no,
                    tbl_student.job_title                      AS student_job_title,
                    tbl_student.last_name                      AS student_last_name,
                    tbl_student.national_code                  AS student_national_code,
                    tbl_student.personnel_no                   AS student_personnel_no,
                    tbl_student.emp_no                         AS student_emp_no,
                    tbl_student.post_code                      AS student_post_code,
                    tbl_student.post_grade_code                AS student_post_grade_code,
                    tbl_student.post_grade_title               AS student_post_grade_title,
                    tbl_student.post_title                     AS student_post_title,
                    prs.id                                     AS personnel_id,
                    prs.active                                 AS personnel_active,
                    department.c_omor_title                    AS personnel_cpp_affairs,
                    department.c_hoze_title                    AS personnel_cpp_area,
                    department.c_moavenat_title                AS personnel_cpp_assistant,
                    prs.ccp_code                               AS personnel_cpp_code,
                    department.c_ghesmat_title                 AS personnel_cpp_section,
                    prs.ccp_title                              AS personnel_cpp_title,
                    department.c_vahed_title                   AS personnel_cpp_unit,
                    prs.company_name                           AS personnel_company_name,
                    department.c_hoze_title                    AS personnel_complex_title,
                    prs.education_level_title                  AS personnel_education_level_title,
                    prs.first_name                             AS personnel_first_name,
                    prs.job_no                                 AS personnel_job_no,
                    prs.job_title                              AS personnel_job_title,
                    prs.last_name                              AS personnel_last_name,
                    prs.national_code                          AS personnel_national_code,
                    prs.personnel_no                           AS personnel_personnel_no,
                    prs.emp_no                                 AS personnel_emp_no,
                    prs.post_code                              AS personnel_post_code,
                    prs.post_grade_code                        AS personnel_post_grade_code,
                    prs.post_grade_title                       AS personnel_post_grade_title,
                    prs.post_title                             AS personnel_post_title,
                    prs.f_post_id                              AS personnel_post_id,
                    prs.f_department_id                        AS personnel_department_id,
                    tbl_term.c_code                            AS term_code,
                    tbl_term.c_title_fa                        AS term_title_fa,
                    tbl_term.id                                AS term_id,
                    tbl_class_student.id                       AS class_student_id,
                    tbl_class_student.applicant_company_name   AS class_student_applicant_company_name,
                    tbl_class_student.failure_reason_id        AS class_student_failure_reason_id,
                    tbl_class_student.presence_type_id         AS class_student_presence_type_id,
                    tbl_class_student.score                    AS class_student_score,
                    tbl_class_student.scores_state_id          AS class_student_scores_state_id,
                    tbl_class.id                               AS class_id,
                    tbl_class.c_status                         AS class_status,
                    tbl_class.c_code                           AS class_code,
                    tbl_class.n_d_duration                     AS class_d_duration,
                    tbl_class.c_end_date                       AS class_end_date,
                    tbl_class.n_h_duration                     AS class_h_duration,
                    tbl_class.c_start_date                     AS class_start_date,
                    tbl_class.c_title_class                    AS class_title_class,
                    tbl_class.f_institute                      AS class_institute,
                    tbl_class.n_group                          AS class_group,
                    tbl_course.id                              AS course_id,
                    tbl_course.c_code                          AS course_code,
                    tbl_course.c_title_fa                      AS course_title_fa,
                    tbl_course.n_theory_duration               AS course_theory_duration,
                    tbl_course.e_technical_type                AS course_technical_type,
                    tbl_category.c_title_fa                    AS category_title_fa,
                    tbl_category.c_code                        AS category_code,
                    tbl_category.id                            AS category_id
                FROM
                    tbl_student
                    INNER JOIN tbl_class_student ON tbl_student.id = tbl_class_student.student_id
                    INNER JOIN view_active_personnel   prs ON tbl_student.national_code = prs.national_code
                    LEFT JOIN tbl_department          department ON department.id = prs.f_department_id
                    INNER JOIN tbl_class ON tbl_class_student.class_id = tbl_class.id
                    INNER JOIN tbl_term ON tbl_class.f_term = tbl_term.id
                    INNER JOIN tbl_course ON tbl_class.f_course = tbl_course.id
                    INNER JOIN tbl_category ON tbl_course.category_id = tbl_category.id
                UNION ALL
                SELECT
                    0 AS is_personnel,
                    tbl_student.id                                   AS student_id,
                    tbl_student.active                               AS student_active,
                    department.c_omor_title                          AS student_cpp_affairs,
                    department.c_hoze_title                          AS student_cpp_area,
                    department.c_moavenat_title                      AS student_cpp_assistant,
                    tbl_student.ccp_code                             AS student_cpp_code,
                    department.c_ghesmat_title                       AS student_cpp_section,
                    tbl_student.ccp_title                            AS student_cpp_title,
                    department.c_vahed_title                         AS student_cpp_unit,
                    tbl_student.company_name                         AS student_company_name,
                    department.c_hoze_title                          AS student_complex_title,
                    tbl_student.education_level_title                AS student_education_level_title,
                    tbl_student.first_name                           AS student_first_name,
                    tbl_student.job_no                               AS student_job_no,
                    tbl_student.job_title                            AS student_job_title,
                    tbl_student.last_name                            AS student_last_name,
                    tbl_student.national_code                        AS student_national_code,
                    tbl_student.personnel_no                         AS student_personnel_no,
                    tbl_student.emp_no                               AS student_emp_no,
                    tbl_student.post_code                            AS student_post_code,
                    tbl_student.post_grade_code                      AS student_post_grade_code,
                    tbl_student.post_grade_title                     AS student_post_grade_title,
                    tbl_student.post_title                           AS student_post_title,
                    tbl_personnel_registered.id                      AS personnel_id,
                    tbl_personnel_registered.active                  AS personnel_active,
                    department.c_omor_title                          AS personnel_cpp_affairs,
                    department.c_hoze_title                          AS personnel_cpp_area,
                    department.c_moavenat_title                      AS personnel_cpp_assistant,
                    tbl_personnel_registered.ccp_code                AS personnel_cpp_code,
                    department.c_ghesmat_title                       AS personnel_cpp_section,
                    tbl_personnel_registered.ccp_title               AS personnel_cpp_title,
                    department.c_vahed_title                         AS personnel_cpp_unit,
                    tbl_personnel_registered.company_name            AS personnel_company_name,
                    department.c_hoze_title                          AS personnel_complex_title,
                    tbl_personnel_registered.education_level_title   AS personnel_education_level_title,
                    tbl_personnel_registered.first_name              AS personnel_first_name,
                    tbl_personnel_registered.job_no                  AS personnel_job_no,
                    tbl_personnel_registered.job_title               AS personnel_job_title,
                    tbl_personnel_registered.last_name               AS personnel_last_name,
                    tbl_personnel_registered.national_code           AS personnel_national_code,
                    tbl_personnel_registered.personnel_no            AS personnel_personnel_no,
                    tbl_personnel_registered.emp_no                  AS personnel_emp_no,
                    tbl_personnel_registered.post_code               AS personnel_post_code,
                    tbl_personnel_registered.post_grade_code         AS personnel_post_grade_code,
                    tbl_personnel_registered.post_grade_title        AS personnel_post_grade_title,
                    tbl_personnel_registered.post_title              AS personnel_post_title,
                    tbl_personnel_registered.f_post_id               AS personnel_post_id,
                    tbl_personnel_registered.f_department_id         AS personnel_department_id,
                    tbl_term.c_code                                  AS term_code,
                    tbl_term.c_title_fa                              AS term_title_fa,
                    tbl_term.id                                      AS term_id,
                    tbl_class_student.id                             AS class_student_id,
                    tbl_class_student.applicant_company_name         AS class_student_applicant_company_name,
                    tbl_class_student.failure_reason_id              AS class_student_failure_reason_id,
                    tbl_class_student.presence_type_id               AS class_student_presence_type_id,
                    tbl_class_student.score                          AS class_student_score,
                    tbl_class_student.scores_state_id                AS class_student_scores_state_id,
                    tbl_class.id                                     AS class_id,
                    tbl_class.c_status                               AS class_status,
                    tbl_class.c_code                                 AS class_code,
                    tbl_class.n_d_duration                           AS class_d_duration,
                    tbl_class.c_end_date                             AS class_end_date,
                    tbl_class.n_h_duration                           AS class_h_duration,
                    tbl_class.c_start_date                           AS class_start_date,
                    tbl_class.c_title_class                          AS class_title_class,
                    tbl_class.f_institute                            AS class_institute,
                    tbl_class.n_group                                AS class_group,
                    tbl_course.id                                    AS course_id,
                    tbl_course.c_code                                AS course_code,
                    tbl_course.c_title_fa                            AS course_title_fa,
                    tbl_course.n_theory_duration                     AS course_theory_duration,
                    tbl_course.e_technical_type                      AS course_technical_type,
                    tbl_category.c_title_fa                          AS category_title_fa,
                    tbl_category.c_code                              AS category_code,
                    tbl_category.id                                  AS category_id
                FROM
                    tbl_student
                    INNER JOIN tbl_class_student ON tbl_student.id = tbl_class_student.student_id
                    INNER JOIN tbl_personnel_registered ON tbl_student.national_code = tbl_personnel_registered.national_code
                    LEFT JOIN tbl_department department ON department.id = tbl_personnel_registered.f_department_id
                    INNER JOIN tbl_class ON tbl_class_student.class_id = tbl_class.id
                    INNER JOIN tbl_term ON tbl_class.f_term = tbl_term.id
                    INNER JOIN tbl_course ON tbl_class.f_course = tbl_course.id
                    INNER JOIN tbl_category ON tbl_course.category_id = tbl_category.id
    			]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_PERSONNEL_COURSE_PASSED_NA_REPORT-013">
        <createView viewName="VIEW_PERSONNEL_COURSE_PASSED_NA_REPORT" replaceIfExists="true">
            <![CDATA[
                    SELECT
                            na."NA_PRIORITY_ID",
                            na."COURSE_ID",
                            na."COURSE_CODE",
                            na."COURSE_TITLE_FA",
                            na."PERSONNEL_PERSONNEL_NO",
                            na."PERSONNEL_CPP_AFFAIRS",
                            na."PERSONNEL_CPP_AREA",
                            na."PERSONNEL_CPP_ASSISTANT",
                            na."PERSONNEL_CPP_CODE",
                            na."PERSONNEL_CPP_SECTION",
                            na."PERSONNEL_CPP_TITLE",
                            na."PERSONNEL_CPP_UNIT",
                            na."PERSONNEL_COMPANY_NAME",
                            na."PERSONNEL_COMPLEX_TITLE",
                            na."PERSONNEL_EDUCATION_LEVEL_TITLE",
                            na."PERSONNEL_FIRST_NAME",
                            na."PERSONNEL_ID",
                            na."PERSONNEL_JOB_NO",
                            na."PERSONNEL_JOB_TITLE",
                            na."PERSONNEL_LAST_NAME",
                            na."PERSONNEL_NATIONAL_CODE",
                            na."PERSONNEL_EMP_NO",
                            na."PERSONNEL_POST_ID",
                            p.c_code        AS personnel_post_code,
                            pg.c_code       AS personnel_post_grade_code,
                            pg.c_title_fa   AS personnel_post_grade_title,
                            p.c_title_fa    AS personnel_post_title,
                            na."PERSONNEL_DEPARTMENT_ID",
                            CASE WHEN passed.class_student_scores_state_id IN (400,401) THEN 216 ELSE 399 END AS is_passed,
                            pg.id           AS personnel_post_grade_id
                        FROM
                            view_personnel_course_na_report               na
                            LEFT JOIN view_student_classstudent_class_term_course   passed ON na.personnel_id = passed.personnel_id
                                                                                            AND na.course_id = passed.course_id
                                                                                            AND class_student_scores_state_id IN (400,401)
                            LEFT JOIN tbl_post                                      p ON na.personnel_post_id = p.id
                            LEFT JOIN tbl_post_grade                                pg ON p.f_post_grade_id = pg.id
    			]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_PERSONNEL_COURSE_NOT_PASSED_REPORT-011">
        <createView viewName="VIEW_PERSONNEL_COURSE_NOT_PASSED_REPORT" replaceIfExists="true">
            <![CDATA[
      SELECT
        must_pass.course_id,
        must_pass.course_code,
        must_pass.course_title_fa,
        must_pass.category_id,
        must_pass.personnel_personnel_no,
        must_pass.personnel_first_name,
        must_pass.personnel_last_name,
        must_pass.personnel_national_code,
        department.c_omor_title       AS personnel_ccp_affairs,
        department.c_hoze_title       AS personnel_ccp_area,
        department.c_moavenat_title   AS personnel_ccp_assistant,
        department.c_code             AS personnel_cpp_code,
        department.c_ghesmat_title    AS personnel_ccp_section,
        department.c_title            AS personnel_cpp_title,
        department.c_vahed_title      AS personnel_ccp_unit,
        must_pass.personnel_company_name,
        department.c_hoze_title       AS personnel_complex_title,
        must_pass.personnel_education_level_title,
        must_pass.personnel_id,
        must_pass.personnel_job_no,
        must_pass.personnel_job_title,
        must_pass.personnel_emp_no,
        post.c_code as personnel_post_code,
        postGrade.c_code as personnel_post_grade_code,
        post.c_title_fa as personnel_post_title,
        passed.class_student_id       AS class_student_id,
        postGrade.id                         AS personnel_post_grade_id,
        postGrade.c_title_fa                 AS personnel_post_grade_title
    FROM
        view_sub_active_personnel_must_pass_course   must_pass
        LEFT JOIN tbl_department                               department ON department.id = must_pass.personnel_f_department_id
        LEFT JOIN view_sub_active_personnel_passed_course      passed ON passed.f_course = must_pass.course_id
                                                                    AND passed.national_code = must_pass.personnel_national_code
        LEFT JOIN tbl_post                                     post ON must_pass.personnel_f_post_id = post.id
        LEFT JOIN tbl_post_grade                               postGrade ON post.f_post_grade_id = postGrade.id
    WHERE
        passed.class_student_id IS NULL
    			]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_EVALUATION_STATICAL_REPORT-013">
        <createView viewName="VIEW_EVALUATION_STATICAL_REPORT" replaceIfExists="true">
            <![CDATA[
	 SELECT
        rowNum as id,
        term.C_TITLE_FA as term_TitleFa,
        personal.C_FIRST_NAME_FA as teacher_FirstName,
        personal.C_LAST_NAME_FA as teacher_LastName,
        CONCAT(CONCAT(personal.C_FIRST_NAME_FA,' '),personal.C_LAST_NAME_FA) as teacher_FullName,
        tclass.N_H_DURATION as tclass_n_duration,
        tclass.F_INSTITUTE_ORGANIZER as tclass_organizer,
        tclass.C_STATUS as tclass_status,
        tclass.F_PLANNER as tclass_planner,
        tclass.F_SUPERVISOR as tclass_supervisor,
        tclass.c_created_by as c_created_by ,
        tclass.d_created_date as d_created_date,
        tclass.e_deleted as e_deleted,
        tclass.e_enabled as e_enabled,
        tclass.c_last_modified_by as c_last_modified_by,
        tclass.d_last_modified_date as d_last_modified_date,
        tclass.n_version as n_version,
        tclass.ID as tclass_id,
        evaluationanalysis.ID as evaluationanalysis_id,
        unit.ID as unit_id,
        tclass.C_CODE as tclass_c_code,
        tclass.F_INSTITUTE as institute_id,
        tclass.F_TEACHER as teacher_id,
        tclass.F_TERM as term_id,
        tclass.C_START_DATE as tclass_c_start_date,
        tclass.C_END_DATE as tclass_c_end_date,
        tclass.C_EVALUATION as tclass_evaluation,
        tclass.c_teaching_type as tclass_teaching_type,
        SUBSTR(tclass.C_START_DATE,1,4) as tclass_year,
        course.C_CODE as course_c_code,
        course.CATEGORY_ID as course_category_id,
        course.SUBCATEGORY_ID as course_subcategory_id,
        course.C_TITLE_FA as course_c_title_fa,
        course.C_EVALUATION as course_c_evaluation,
        CASE WHEN students.counts IS NULL THEN 0 ELSE students.counts END AS tclass_students_count,
        evaluationanalysis.C_BEHAVIORAL_GRADE as evaluationanalysis_c_behavioral_grade,
        evaluationanalysis.B_BEHAVIORAL_PASS as evaluationanalysis_c_behavioral_pass,
        evaluationanalysis.C_EFFECTIVENESS_GRADE as evaluationanalysis_c_effectiveness_grade,
        evaluationanalysis.B_EFFECTIVENESS_PASS as evaluationanalysis_c_effectiveness_pass,
        evaluationanalysis.C_LEARNING_GRADE as evaluationanalysis_c_learning_grade,
        evaluationanalysis.B_LEARNING_PASS as evaluationanalysis_c_learning_pass,
        evaluationanalysis.C_REACTION_GRADE as evaluationanalysis_c_reaction_grade,
        evaluationanalysis.B_REACTION_PASS as evaluationanalysis_c_reaction_pass,
        evaluationanalysis.C_RESULTS_GRADE as evaluationanalysis_c_results_grade,
        evaluationanalysis.B_RESULTS_PASS as evaluationanalysis_c_results_pass,
        evaluationanalysis.C_TEACHER_GRADE as evaluationanalysis_c_teacher_grade,
        evaluationanalysis.B_TEACHER_PASS as evaluationanalysis_c_teacher_pass,
        CASE WHEN evaluationanalysis.C_REACTION_GRADE IS NULL THEN 0 ELSE 1 END as evaluationanalysis_b_reaction_status,
        CASE WHEN evaluationanalysis.C_BEHAVIORAL_GRADE IS NULL THEN 0 ELSE 1 END as evaluationanalysis_b_behavioral_status,
        CASE WHEN evaluationanalysis.C_LEARNING_GRADE IS NULL THEN 0 ELSE 1 END as evaluationanalysis_b_learning_status,
        CASE WHEN evaluationanalysis.C_RESULTS_GRADE IS NULL THEN 0 ELSE 1 END as evaluationanalysis_b_results_status,
        CASE WHEN evaluationanalysis.C_TEACHER_GRADE IS NULL THEN 0 ELSE 1 END as evaluationanalysis_b_teacher_status,
        CASE WHEN evaluationanalysis.C_EFFECTIVENESS_GRADE IS NULL THEN 0 ELSE 1 END as evaluationanalysis_b_effectiveness_status

        FROM TBL_CLASS tclass INNER JOIN TBL_COURSE course
        ON tclass.F_COURSE = course.ID
        LEFT JOIN TBL_TARGET_SOCIETY unit
        ON unit.F_CLASS_ID = tclass.ID
        LEFT JOIN (SELECT
            TBL_CLASS_STUDENT.CLASS_ID,
            count(TBL_CLASS_STUDENT.ID) as counts
        FROM
            TBL_CLASS_STUDENT
            GROUP BY TBL_CLASS_STUDENT.CLASS_ID) students ON students.CLASS_ID = tclass.ID
        LEFT JOIN TBL_EVALUATION_ANALYSIS evaluationanalysis
        ON evaluationanalysis.F_TCLASS = tclass.ID
        INNER JOIN TBL_TERM term ON tclass.F_TERM = term.ID
        INNER JOIN TBL_TEACHER teacher ON tclass.F_TEACHER = teacher.ID LEFT JOIN TBL_PERSONAL_INFO personal ON teacher.F_PERSONALITY = personal.ID
    			]]>
        </createView>
    </changeSet>


    <changeSet author="NICICO" id="VIEW_POST-007">
        <createView viewName="VIEW_POST" replaceIfExists="true">
            <![CDATA[
SELECT
    p.id,
    p.c_created_by,
    p.d_created_date,
    p.e_deleted,
    p.e_enabled,
    p.c_last_modified_by,
    p.d_last_modified_date,
    p.n_version,
    p.c_code,
    p.c_title_fa,
    p.c_affairs,
    p.c_area,
    p.c_assistance,
    p.c_cost_center_title_fa,
    p.c_cost_center_code,
    p.c_section,
    p.c_unit,
    p.f_post_grade_id,
    p.f_job_id,
    p.d_last_modified_date_na,
    p.c_modified_by_na,
    p.c_people_type,
    j.c_title_fa    AS job_c_title_fa,
    j.c_code        AS job_c_code,
    pg.c_title_fa   AS post_grade_c_title_fa,
    pg.c_code       AS post_grade_c_code,
    COUNT(DISTINCT na.f_competence) AS n_competence_count,
    COUNT(DISTINCT prs.id) AS n_personnel_count
FROM
    tbl_post p
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_needs_assessment
        WHERE
            c_object_type = 'Post'
            AND e_deleted IS NULL
            AND e_enabled IS NULL
    ) na ON p.id = na.f_object
    LEFT JOIN view_active_personnel prs ON p.id = prs.f_post_id
    INNER JOIN tbl_job j ON j.id = p.f_job_id
    INNER JOIN tbl_post_grade pg ON pg.id = p.f_post_grade_id
GROUP BY
    p.id,
    p.c_created_by,
    p.d_created_date,
    p.e_deleted,
    p.e_enabled,
    p.c_last_modified_by,
    p.d_last_modified_date,
    p.n_version,
    p.c_code,
    p.c_title_fa,
    p.c_affairs,
    p.c_area,
    p.c_assistance,
    p.c_cost_center_title_fa,
    p.c_cost_center_code,
    p.c_section,
    p.c_unit,
    p.f_post_grade_id,
    p.f_job_id,
    p.d_last_modified_date_na,
    p.c_modified_by_na,
    p.c_people_type,
    j.c_title_fa,
    j.c_code,
    pg.c_title_fa,
    pg.c_code
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_POST_GROUP-006">
        <createView viewName="VIEW_POST_GROUP" replaceIfExists="true">
            <![CDATA[
SELECT
    pg.id,
    pg.c_created_by,
    pg.d_created_date,
    pg.e_deleted,
    pg.e_enabled,
    pg.c_last_modified_by,
    pg.d_last_modified_date,
    pg.n_version,
    pg.c_description,
    pg.c_title_fa,
    pg.c_title_en,
    pg.c_code,
    pg.d_last_modified_date_na,
    pg.c_modified_by_na,
    count(DISTINCT na.f_competence) AS n_competence_count,
    COUNT(DISTINCT prs.id) AS n_personnel_count
FROM
    tbl_post_group pg
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_needs_assessment
        WHERE
            c_object_type = 'PostGroup'
                AND
            e_deleted IS NULL
                AND
            e_enabled IS NULL
    ) na
        ON pg.id = na.f_object
    LEFT JOIN (
        SELECT
            *
        FROM
            view_all_posts
        WHERE
            e_deleted IS NULL
    ) p
        ON p.groupid = pg.id
    LEFT JOIN view_active_personnel prs
        ON p.postid = prs.f_post_id
GROUP BY
    pg.id,
    pg.c_created_by,
    pg.d_created_date,
    pg.e_deleted,
    pg.e_enabled,
    pg.c_last_modified_by,
    pg.d_last_modified_date,
    pg.n_version,
    pg.c_description,
    pg.c_title_fa,
    pg.c_title_en,
    pg.c_code,
    pg.d_last_modified_date_na,
    pg.c_modified_by_na
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_JOB-006">
        <createView viewName="VIEW_JOB" replaceIfExists="true">
            <![CDATA[
SELECT
    j.id,
    j.c_created_by,
    j.e_deleted,
    j.d_created_date,
    j.e_enabled,
    j.c_last_modified_by,
    j.d_last_modified_date,
    j.c_code,
    j.n_version,
    j.c_title_fa,
    j.d_last_modified_date_na,
    j.c_modified_by_na,
    j.C_PEOPLE_TYPE,
    COUNT(DISTINCT na.f_competence) AS n_competence_count,
    COUNT(DISTINCT prs.id) AS n_personnel_count
FROM
    tbl_job                  j
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_needs_assessment
        WHERE
            tbl_needs_assessment.c_object_type = 'Job'
            AND e_deleted IS NULL
            AND e_enabled IS NULL
    ) na ON j.id = na.f_object
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_training_post
        WHERE
            e_deleted IS NULL
    )        tp ON tp.f_job_id = j.id
    LEFT JOIN tbl_post_training_post   ptp ON tp.id = ptp.f_training_post_id
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_post
        WHERE
            e_deleted IS NULL
    ) p ON p.id = ptp.f_post_id
    LEFT JOIN view_active_personnel    prs ON p.id = prs.f_post_id
GROUP BY
    j.id,
    j.c_created_by,
    j.e_deleted,
    j.d_created_date,
    j.e_enabled,
    j.c_last_modified_by,
    j.d_last_modified_date,
    j.c_code,
    j.n_version,
    j.c_title_fa,
    j.d_last_modified_date_na,
    j.c_modified_by_na,
    j.C_PEOPLE_TYPE
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_JOB_GROUP-006">
        <createView viewName="VIEW_JOB_GROUP" replaceIfExists="true">
            <![CDATA[
SELECT
    jg.id,
    jg.c_created_by,
    jg.d_created_date,
    jg.e_deleted,
    jg.e_enabled,
    jg.c_last_modified_by,
    jg.d_last_modified_date,
    jg.n_version,
    jg.c_description,
    jg.c_title_fa,
    jg.c_title_en,
    jg.c_code,
    jg.d_last_modified_date_na,
    jg.c_modified_by_na,
    COUNT(DISTINCT na.f_competence) AS n_competence_count,
    COUNT(DISTINCT prs.id) AS n_personnel_count
FROM
    tbl_job_group            jg
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_needs_assessment
        WHERE
            c_object_type = 'JobGroup'
            AND e_deleted IS NULL
            AND e_enabled IS NULL
    ) na ON jg.id = na.f_object
    LEFT JOIN tbl_job_jobgroup ON jg.id = tbl_job_jobgroup.f_jobgroup_id
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_job
        WHERE
            e_deleted IS NULL
    ) j ON tbl_job_jobgroup.f_job_id = j.id
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_training_post
        WHERE
            e_deleted IS NULL
    ) tp ON tp.f_job_id = j.id
    LEFT JOIN tbl_post_training_post   ptp ON tp.id = ptp.f_training_post_id
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_post
        WHERE
            e_deleted IS NULL
    ) p ON p.id = ptp.f_post_id
    LEFT JOIN view_active_personnel    prs ON p.id = prs.f_post_id
GROUP BY
    jg.id,
    jg.c_created_by,
    jg.d_created_date,
    jg.e_deleted,
    jg.e_enabled,
    jg.c_last_modified_by,
    jg.d_last_modified_date,
    jg.n_version,
    jg.c_description,
    jg.c_title_fa,
    jg.c_title_en,
    jg.c_code,
    jg.d_last_modified_date_na,
    jg.c_modified_by_na
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_POST_GRADE-007">
        <createView viewName="VIEW_POST_GRADE" replaceIfExists="true">
            <![CDATA[
SELECT
    pg.id,
    pg.c_created_by,
    pg.e_deleted,
    pg.d_created_date,
    pg.e_enabled,
    pg.c_last_modified_by,
    pg.d_last_modified_date,
    pg.c_code,
    pg.n_version,
    pg.c_title_fa,
    pg.d_last_modified_date_na,
    pg.c_modified_by_na,
    pg.c_people_type,
    COUNT(DISTINCT na.f_competence) AS n_competence_count,
    COUNT(DISTINCT prs.id) AS n_personnel_count
FROM
    tbl_post_grade           pg
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_needs_assessment
        WHERE
            c_object_type = 'PostGrade'
            AND e_deleted IS NULL
            AND e_enabled IS NULL
    ) na ON pg.id = na.f_object
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_training_post
        WHERE
            e_deleted IS NULL
    )        tp ON tp.f_post_grade_id = pg.id
    LEFT JOIN tbl_post_training_post   ptp ON tp.id = ptp.f_training_post_id
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_post
        WHERE
            e_deleted IS NULL
    ) p ON p.id = ptp.f_post_id
    LEFT JOIN view_active_personnel    prs ON p.id = prs.f_post_id
GROUP BY
    pg.id,
    pg.c_created_by,
    pg.e_deleted,
    pg.d_created_date,
    pg.e_enabled,
    pg.c_last_modified_by,
    pg.d_last_modified_date,
    pg.c_code,
    pg.n_version,
    pg.c_title_fa,
    pg.d_last_modified_date_na,
    pg.c_modified_by_na,
    pg.c_people_type
]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_POST_GRADE_GROUP-006">
        <createView viewName="VIEW_POST_GRADE_GROUP" replaceIfExists="true">
            <![CDATA[
SELECT
        pgg.id,
        pgg.c_created_by,
        pgg.d_created_date,
        pgg.e_deleted,
        pgg.e_enabled,
        pgg.c_last_modified_by,
        pgg.d_last_modified_date,
        pgg.n_version,
        pgg.c_description,
        pgg.c_title_fa,
        pgg.c_title_en,
        pgg.c_code,
        pgg.d_last_modified_date_na,
        pgg.c_modified_by_na,
        COUNT(DISTINCT na.f_competence) AS n_competence_count,
        COUNT(DISTINCT prs.id) AS n_personnel_count
    FROM
        tbl_post_grade_group              pgg
        LEFT JOIN (
            SELECT
                *
            FROM
                tbl_needs_assessment
            WHERE
                tbl_needs_assessment.c_object_type = 'PostGradeGroup'
                AND e_deleted IS NULL
                AND e_enabled IS NULL
        ) na ON pgg.id = na.f_object
        LEFT JOIN tbl_post_grade_post_grade_group   pgpg ON pgg.id = pgpg.f_post_grade_group_id
        LEFT JOIN (
            SELECT
                *
            FROM
                tbl_post_grade
            WHERE
                e_deleted IS NULL
        ) pg ON pg.id = pgpg.f_post_grade_id
        LEFT JOIN (
            SELECT
                *
            FROM
                tbl_training_post
            WHERE
                e_deleted IS NULL
        ) tp ON tp.f_post_grade_id = pg.id
        LEFT JOIN tbl_post_training_post ptp ON tp.id = ptp.f_training_post_id
        LEFT JOIN (
            SELECT
                *
            FROM
                tbl_post
            WHERE
                e_deleted IS NULL
        ) p ON p.id = ptp.f_post_id
        LEFT JOIN view_active_personnel             prs ON p.id = prs.f_post_id
    GROUP BY
        pgg.id,
        pgg.c_created_by,
        pgg.d_created_date,
        pgg.e_deleted,
        pgg.e_enabled,
        pgg.c_last_modified_by,
        pgg.d_last_modified_date,
        pgg.n_version,
        pgg.c_description,
        pgg.c_title_fa,
        pgg.c_title_en,
        pgg.c_code,
        pgg.d_last_modified_date_na,
        pgg.c_modified_by_na
            ]]>
        </createView>
    </changeSet>


    <changeSet author="NICICO" id="VIEW_ACTIVE_PERSONNEL-005">
        <createView viewName="VIEW_ACTIVE_PERSONNEL" replaceIfExists="true">
            <![CDATA[
        SELECT "P_TYPE","PERSONNEL_NO","ACTIVE","ADDRESS","AGE","BIRTH_CERTIFICATE_NO","BIRTH_DATE","BIRTH_PLACE","CCP_AFFAIRS","CCP_AREA","CCP_ASSISTANT","CCP_CODE","CCP_SECTION","CCP_TITLE","CCP_UNIT","COMPANY_NAME","COMPLEX_TITLE","CONTRACT_DESCRIPTION","CONTRACT_NO","DELETED","DEPARTMENT_CODE","DEPARTMENT_TITLE","EDUCATION_LEVEL_TITLE","EDUCATION_LICENSE_TYPE_TITLE","EDUCATION_FIELD_TITLE","EMAIL","EMPLOYMENT_DATE","EMPLOYMENT_STATUS_TITLE","EMPLOYMENT_STATUS_ID","EMPLOYMENT_TYPE_TITLE","FATHER_NAME","FIRST_NAME","GENDER_TITLE","ID","INSURANCE_CODE","JOB_NO","JOB_TITLE","LAST_NAME","MARITAL_STATUS_TITLE","MILITARY_STATUS_TITLE","MOBILE","NATIONAL_CODE","OPERATIONAL_UNIT_TITLE","EMP_NO","PHONE","POST_ASSIGNMENT_DATE","POST_CODE","POST_GRADE_CODE","POST_GRADE_TITLE","POST_TITLE","F_POST_ID","WORK_DAYS","WORK_MONTHS","WORK_PLACE_TITLE","WORK_TURN_TITLE","WORK_YEARS","F_DEPARTMENT_ID",FIRST_NAME||' '||LAST_NAME as C_FULL_NAME
        FROM
            tbl_personnel
        WHERE
             tbl_personnel.deleted=0
]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_SUB_ACTIVE_PERSONNEL_PASSED_COURSE-002">
        <createView viewName="VIEW_SUB_ACTIVE_PERSONNEL_PASSED_COURSE" replaceIfExists="true">
            <![CDATA[
SELECT DISTINCT
    cs.id as class_student_id,
    cs.student_id,
    cs.class_id,
    cl.f_course,
    cs.scores_state_id,
    s.national_code,
    s.personnel_no,
    s.emp_no,
    s.first_name,
    s.last_name
FROM
    tbl_class_student cs
    INNER JOIN tbl_student s ON s.id = cs.student_id
    INNER JOIN view_active_personnel p ON p.national_code = s.national_code
    INNER JOIN tbl_class cl ON cl.id = cs.class_id
WHERE
    cs.scores_state_id IN (
        400,
        401,
        410
    )
]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_SUB_ACTIVE_PERSONNEL_MUST_PASS_COURSE-005">
        <createView viewName="VIEW_SUB_ACTIVE_PERSONNEL_MUST_PASS_COURSE" replaceIfExists="true">
            <![CDATA[
  SELECT
        co.id                     AS course_id,
        co.c_code                 AS course_code,
        co.c_title_fa             AS course_title_fa,
        co.category_id            AS category_id,
        p.personnel_no            AS personnel_personnel_no,
        p.first_name              AS personnel_first_name,
        p.last_name               AS personnel_last_name,
        p.national_code           AS personnel_national_code,
        p.ccp_affairs             AS personnel_cpp_affairs,
        p.ccp_area                AS personnel_cpp_area,
        p.ccp_assistant           AS personnel_cpp_assistant,
        p.ccp_code                AS personnel_cpp_code,
        p.ccp_section             AS personnel_cpp_section,
        p.ccp_title               AS personnel_cpp_title,
        p.ccp_unit                AS personnel_cpp_unit,
        p.company_name            AS personnel_company_name,
        p.complex_title           AS personnel_complex_title,
        p.education_level_title   AS personnel_education_level_title,
        p.id                      AS personnel_id,
        p.job_no                  AS personnel_job_no,
        p.job_title               AS personnel_job_title,
        p.emp_no                  AS personnel_emp_no,
        p.post_code               AS personnel_post_code,
        p.post_grade_code         AS personnel_post_grade_code,
        p.post_grade_title        AS personnel_post_grade_title,
        p.post_title              AS personnel_post_title,
        p.f_department_id         AS personnel_f_department_id,
        p.f_post_id               AS personnel_f_post_id,
        p.employment_status_id    AS employment_status_id
    FROM
        tbl_course              co
        CROSS JOIN view_active_personnel   p
]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_PERSONNEL_COURSE_NOT_PASSED_REPORT_NEW-013">
        <createView viewName="VIEW_PERSONNEL_COURSE_NOT_PASSED_REPORT_NEW" replaceIfExists="true">
            <![CDATA[
     SELECT
        must_pass.course_id,
        must_pass.course_code,
        must_pass.course_title_fa,
        must_pass.category_id,
        must_pass.personnel_personnel_no,
        must_pass.personnel_first_name,
        must_pass.personnel_last_name,
        must_pass.personnel_national_code,
        department.c_omor_title       AS personnel_ccp_affairs,
        department.c_hoze_title       AS personnel_ccp_area,
        department.c_moavenat_title   AS personnel_ccp_assistant,
        department.c_code             AS personnel_cpp_code,
        department.c_ghesmat_title    AS personnel_ccp_section,
        department.c_title            AS personnel_cpp_title,
        department.c_vahed_title      AS personnel_ccp_unit,
        must_pass.personnel_company_name,
        department.c_hoze_title       AS personnel_complex_title,
        must_pass.personnel_education_level_title,
        must_pass.personnel_id,
        must_pass.personnel_job_no,
        must_pass.personnel_job_title,
        must_pass.personnel_emp_no,
        post.c_code                   AS personnel_post_code,
        postgrade.c_code              AS personnel_post_grade_code,
        post.c_title_fa               AS personnel_post_title,
        passed.class_student_id       AS class_student_id,
        postgrade.id                  AS personnel_post_grade_id,
        postgrade.c_title_fa          AS personnel_post_grade_title
    FROM
        view_sub_active_personnel_must_pass_course   must_pass
        LEFT JOIN tbl_department                               department ON department.id = must_pass.personnel_f_department_id
        LEFT JOIN view_sub_active_personnel_passed_course      passed ON passed.f_course = must_pass.course_id
                                                                    AND passed.national_code = must_pass.personnel_national_code
        LEFT JOIN tbl_post                                     post ON must_pass.personnel_f_post_id = post.id
        LEFT JOIN tbl_post_grade                               postgrade ON post.f_post_grade_id = postgrade.id
    WHERE
        passed.class_student_id IS NULL
        AND must_pass.employment_status_id IN (
            160,
            210,
            370,
            380
        )
]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_ATTENDANCE_PERFORMANCE-001">
        <createView viewName="VIEW_ATTENDANCE_PERFORMANCE" replaceIfExists="true">
            <![CDATA[
    SELECT
    ins.c_title_fa,
    ca.c_title_fa AS category_title,
    cl.f_institute_organizer,
    co.category_id,
    co.subcategory_id,
    at.c_state,
    cl.c_start_date,
    cl.c_end_date,
    cl.f_term,
    co.id AS course_id,
    se.c_session_end_hour,
    se.c_session_start_hour
FROM
    tbl_class cl
    INNER JOIN tbl_course co ON co.id = cl.f_course
    INNER JOIN tbl_institute ins ON ins.id = cl.f_institute_organizer
    INNER JOIN tbl_category ca ON ca.id = co.category_id
    INNER JOIN tbl_session se ON cl.id = se.f_class_id
    INNER JOIN tbl_attendance at ON se.id = at.f_session
    ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_CLASS_PERFORMANCE-001">
        <createView viewName="VIEW_CLASS_PERFORMANCE" replaceIfExists="true">
            <![CDATA[
    SELECT
            ins.c_title_fa,
            ca.c_title_fa AS category_title,
            cl.f_institute_organizer,
            co.category_id,
            (
                CASE
                    WHEN cl.c_workflow_ending_status_code = '2' THEN '4'
                    ELSE cl.c_status
                END
            ) status,
            cl.c_start_date,
            cl.c_end_date,
            cl.f_term,
            co.id as course_id,
            suca.id as subcategory_id
        FROM
            tbl_class cl
            INNER JOIN tbl_course co ON co.id = cl.f_course
            INNER JOIN tbl_institute ins ON ins.id = cl.f_institute_organizer
            INNER JOIN tbl_category ca ON ca.id = co.category_id
            INNER JOIN tbl_sub_category suca ON suca.id = co.subcategory_id
    ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_TEACHER_REPORT-005">
        <createView viewName="VIEW_TEACHER_REPORT" replaceIfExists="true">
            <![CDATA[
  SELECT
        rowNum as id,
        teacher.c_created_by as c_created_by ,
        teacher.d_created_date as d_created_date,
        teacher.e_deleted as e_deleted,
        teacher.e_enabled as e_enabled,
        teacher.c_last_modified_by as c_last_modified_by,
        teacher.d_last_modified_date as d_last_modified_date,
        teacher.n_version as n_version,
        teacher.id  as teacher_id ,
        personalinfo.C_FIRST_NAME_FA as personalinfo_first_name,
        personalinfo.C_LAST_NAME_FA as personalinfo_last_name,
        personalinfo.C_NATIONAL_CODE as personalinfo_national_code,
        contactinfo.C_MOBILE as contactinfo_mobile,
        CASE WHEN classess.counts IS NULL THEN 0 ELSE classess.counts END AS class_counts,
        teacher.B_ENABLED as teacher_enable_status,
        teacher.B_PERSONNEL as personnel_enable_status,
        teacher.C_TEACHER_CODE as teacher_code,
        teacher.C_PERSONNEL_CODE as teacher_personnel_cod,
        personalinfo.F_EDU_MAJOR as personalinfo_education_major,
        personalinfo.F_EDU_LEVEL as personalinfo_education_level,
        address.F_CITY as address_city,
        address.F_STATE as address_state,
        lastClassess.titleClass as lastclassTitle,
        lastClassess.reactionGrade as reactionGrade,
        CONCAT(CONCAT(',',tCategories.categories),',')  as teacher_categories,
        CONCAT(CONCAT(',',tSubCategories.subCategories),',')  as teacher_sub_categories,
        CONCAT(CONCAT(',',tTeachingCategories.tcategories),',')  as teaching_history_cats,
        CONCAT(CONCAT(',',tTeachingSubCategories.tsubCategories),',')  as teaching_history_subCats,
        CONCAT(CONCAT(',',tTerms.termIDs),',')  as teacher_term_ids,
        CONCAT(CONCAT(',',tTerms.termTitles),',')  as teacher_term_titles,
        educationMajor.C_TITLE_FA as PERSONALINFO_EDUCATION_MAJOR_TITLE

        FROM TBL_TEACHER teacher
        LEFT JOIN (SELECT
            TBL_CLASS.F_TEACHER,
            count(TBL_CLASS.ID) as counts
        FROM
            TBL_CLASS
            GROUP BY TBL_CLASS.F_TEACHER) classess ON classess.F_TEACHER = teacher.ID
            LEFT JOIN
            ( select s.tID as tId,s.cID as id,s.titleClass as titleClass,evaluation.C_REACTION_GRADE as reactionGrade from
(SELECT tID,
       startDate,
       cID,
       titleClass
FROM   (SELECT tID,
               startDate,
               cID,
               titleClass,
               Row_number() OVER(PARTITION BY tID ORDER BY cID) rn
        FROM   (SELECT
        tbl_class.c_title_class as titleClass,
    tblastcourse.f_teacher as tID,
    tbl_class.id as cID,
    tbl_class.c_start_date as startDate
FROM
    tbl_class
    INNER JOIN (
        SELECT
            MAX(tbl_class.c_start_date) AS max_c_start_date,
            tbl_class.f_teacher
        FROM
            tbl_class
        GROUP BY
            tbl_class.f_teacher
        HAVING
            tbl_class.f_teacher IS NOT NULL
    ) tblastcourse ON tblastcourse.f_teacher = tbl_class.f_teacher
                      AND tblastcourse.max_c_start_date = tbl_class.c_start_date)) t
WHERE  rn = 1) s left join  tbl_evaluation_analysis evaluation ON evaluation.F_TCLASS = s.cID)
            lastClassess
            ON lastClassess.tId = teacher.ID

        LEFT JOIN TBL_PERSONAL_INFO personalinfo
        ON personalinfo.ID = teacher.F_PERSONALITY
        LEFT JOIN tbl_education_major educationMajor
        ON personalinfo.F_EDU_MAJOR = educationMajor.ID
        LEFT JOIN TBL_CONTACT_INFO contactinfo
        ON contactinfo.ID = personalinfo.F_CONTACT_INFO
        LEFT JOIN TBL_ADDRESS address
        ON address.ID = contactinfo.F_HOME_ADDRESS

        LEFT JOIN (select f_teacher, LISTAGG(f_category, ',') within group (order by F_TEACHER) as categories
        from tbl_teacher_category
        group by f_teacher) tCategories on tCategories.f_teacher = teacher.ID

        LEFT JOIN (select f_teacher, LISTAGG(f_subcategory, ',') within group (order by F_TEACHER) as subCategories
        from tbl_teacher_subcategory
        group by f_teacher) tSubCategories on tSubCategories.f_teacher = teacher.ID

        LEFT JOIN ( select teacherId, LISTAGG(catId,',') within group (order by teacherId) as tcategories
      from (select distinct te.id as teacherId, co.category_id as catId from tbl_teacher te left join tbl_class tc on te.id = tc.f_teacher left join tbl_course co on co.id = tc.f_course)
        group by teacherId) tTeachingCategories on tTeachingCategories.teacherId = teacher.ID

        LEFT JOIN (select teacherId, LISTAGG(subcatId,',') within group (order by teacherId) as tsubCategories
      from (select distinct te.id as teacherId, co.subcategory_id as subcatId from tbl_teacher te left join tbl_class tc on te.id = tc.f_teacher left join tbl_course co on co.id = tc.f_course)
        group by teacherId) tTeachingSubCategories on tTeachingSubCategories.teacherId = teacher.ID

        LEFT JOIN (select teacherId, LISTAGG(termID,',') within group (order by teacherId) as termIDs,LISTAGG(termTitle,',') within group (order by teacherId) as termTitles
      from (select distinct te.id as teacherId, tm.id as termID, tm.c_title_fa as termTitle from tbl_teacher te left join tbl_class tc on te.id = tc.f_teacher left join tbl_term tm on tm.id = tc.f_term)
        group by teacherId) tTerms on tTerms.teacherId = teacher.ID
    			]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_ATTENDANCE_REPORT-007">
        <createView viewName="VIEW_ATTENDANCE_REPORT" replaceIfExists="true">
            <![CDATA[
  SELECT atten.personalnum,atten.personalnum2,atten.nationalcode,atten.name,atten.ccparea,atten.ccpaffairs,atten.peopleType,atten.classcode,atten.classname,atten.c_session_date,atten.c_state,
case
    when atten.time>=360 then
        FLOOR((atten.time+120)/60)||(CASE WHEN MOD(atten.time+120,60)<>0 THEN ':'|| MOD(atten.time+120,60) END)
    else
        FLOOR(atten.time/60)||(CASE WHEN MOD(atten.time,60)<>0 THEN ':'|| MOD(atten.time,60) END)
    end time
FROM
(
SELECT distinct
    std.personnel_no AS personalnum,
    std.emp_no  AS personalnum2,
    std.national_code AS nationalcode,
    std.first_name || ' ' || std.last_name AS name,
    dep.c_hoze_title  AS ccparea,
    dep.c_omor_title  AS ccpaffairs,
    personnel.personelType  AS peopleType,
    class.c_code AS classcode,
    class.c_title_class AS classname,
    csession.c_session_date,
    att.c_state as c_state,
    SUM((TO_NUMBER(SUBSTR(csession.c_session_end_hour,1,2))*60+TO_NUMBER(SUBSTR(csession.c_session_end_hour,4,2)))-(TO_NUMBER(SUBSTR(csession.c_session_start_hour,1,2))*60+TO_NUMBER(SUBSTR(csession.c_session_start_hour,4,2)))) AS time
 FROM
    tbl_attendance att
    INNER JOIN tbl_student std ON att.f_student = std.id
    INNER JOIN (
        SELECT
             CAST ("P_TYPE" AS VARCHAR2(50)) personelType,"PERSONNEL_NO",national_code,first_name,last_name,f_department_id from view_active_personnel
        union all
        SELECT
            CAST ('personnel_registered' AS VARCHAR2(50)) personelType,"PERSONNEL_NO",national_code,first_name,last_name,f_department_id
        FROM
            tbl_personnel_registered
    ) personnel ON std.national_code = personnel.national_code
    LEFT JOIN tbl_department dep ON dep.id = personnel.f_department_id
    INNER JOIN tbl_session csession ON att.f_session = csession.id
    INNER JOIN tbl_class class ON csession.f_class_id = class.id
  GROUP BY
    std.personnel_no,
    std.emp_no,
    std.national_code,
    std.first_name || ' ' || std.last_name,
    dep.c_hoze_title,
    dep.c_omor_title,
    personnel.personelType,
    class.c_code,
    class.c_title_class,
    csession.c_session_date,
    att.c_state
) atten
    ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW-CLASS-DETAIL-009">
        <createView viewName="view_class_detail" replaceIfExists="true">
            <![CDATA[
SELECT
        tclass.ID as id,
        tclass.c_created_by as c_created_by ,
        tclass.d_created_date as d_created_date,
        tclass.e_deleted as e_deleted,
        tclass.e_enabled as e_enabled,
        tclass.c_last_modified_by as c_last_modified_by,
        tclass.d_last_modified_date as d_last_modified_date,
        tclass.n_version as n_version,
        tclass.C_SCORING_METHOD as tclass_scoring_method,
        tclass.PRE_COURSE_TEST as tclass_has_pre_test,
        tclass.N_H_DURATION as tclass_n_duration,
        tclass.F_INSTITUTE_ORGANIZER as tclass_organizer,
        tclass.C_STATUS as tclass_status,
        tclass.F_PLANNER as tclass_planner,
        tclass.F_SUPERVISOR as tclass_supervisor,
        tclass.C_CODE as tclass_c_code,
        tclass.F_INSTITUTE as institute_id,
        tclass.F_TEACHER as teacher_id,
        tclass.F_TERM as term_id,
        tclass.C_START_DATE as tclass_c_start_date,
        tclass.C_WORKFLOW_ENDING_STATUS as tclass_ending_status,
        tclass.C_END_DATE as tclass_c_end_date,
        tclass.EVALUATION_REACTION_TEACHER as teacher_eval_status,
        tclass.EVALUATION_REACTION_TRAINING as training_eval_status,
        tclass.C_EVALUATION as C_EVALUATION,
        tclass.C_BEHAVIORAL_LEVEL as C_BEHAVIORAL_LEVEL,
        tclass.START_EVALUATION as START_EVALUATION,
        tclass.F_CANCEL_CLASS_REASON as CANCEL_REASON_ID,
        tclass.C_POSTPONE_START_DATE as POSTPONE_DATE,
        tclass.c_teaching_type as tclass_teaching_type,
        personalInfo.C_FIRST_NAME_FA as teacher_First_Name,
        personalInfo.C_LAST_NAME_FA as teacher_Last_Name,
        SUBSTR(tclass.C_START_DATE,1,4) as tclass_year,
        course.ID as course_id,
        course.C_CODE as course_c_code,
        course.CATEGORY_ID as course_category_id,
        course.SUBCATEGORY_ID as course_subcategory_id,
        course.C_TITLE_FA as course_c_title_fa,
        course.C_EVALUATION as course_c_evaluation,
        CASE WHEN students.counts IS NULL THEN 0 ELSE students.counts END AS tclass_students_count,
        term.C_TITLE_FA as term_TitleFa,
        institute.C_TITLE_FA as tclass_institute,
        altClasses.C_CODE as ALTERNATIVE_CLASS_CODE,
        CASE WHEN altClasses.ID IS NULL THEN 0 ELSE 1 END AS RE_HOLIDING_STATUS,
        CASE WHEN tclass.START_EVALUATION IS NULL THEN NULL ELSE
        TO_DATE(
         tclass.C_END_DATE,
         'yyyy/mm/dd',
         'nls_calendar=persian'
       )+30*tclass.START_EVALUATION END AS Behavioral_Due_Date,
        tclass.STUDENT_ONLINE_EVAL_STATUS as tclass_student_online_eval_status,
        tclass.TEACHER_ONLINE_EVAL_STATUS as tclass_teacher_online_eval_status

        FROM TBL_CLASS tclass LEFT JOIN TBL_COURSE course
        ON tclass.F_COURSE = course.ID
        LEFT JOIN (SELECT
            TBL_CLASS_STUDENT.CLASS_ID,
            count(TBL_CLASS_STUDENT.ID) as counts
        FROM
            TBL_CLASS_STUDENT
            GROUP BY TBL_CLASS_STUDENT.CLASS_ID) students ON students.CLASS_ID = tclass.ID
        LEFT JOIN TBL_TERM term ON tclass.F_TERM = term.ID
        LEFT JOIN TBL_INSTITUTE institute ON institute.id = tclass.F_INSTITUTE
        LEFT JOIN TBL_CLASS altClasses ON altClasses.id = tclass.F_ALTERNATIVE_CLASS
        LEFT JOIN TBL_TEACHER teacher ON teacher.id = tclass.F_TEACHER
        LEFT JOIN TBL_PERSONAL_INFO personalInfo ON teacher.F_PERSONALITY = personalInfo.Id

            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="view_statistics_unit_report-012">
        <createView viewName="view_statistics_unit_report" replaceIfExists="true">
            <![CDATA[
 SELECT DISTINCT
    csession.c_session_date                    AS session_session_date,
    class.id                                   AS class_id,
    std.id                                     AS student_id,
    SUM(
        CASE
            WHEN att.c_state IN(
                '1', '2'
            ) THEN
                round(to_number(to_date(csession.c_session_end_hour, 'HH24:MI') - to_date(csession.c_session_start_hour, 'HH24:MI'
                )) * 24, 1)
            ELSE
                0
        END
    ) AS presence_hour,
    SUM(
        CASE
            WHEN att.c_state IN(
                '1', '2'
            ) THEN
                round(to_number(to_date(csession.c_session_end_hour, 'HH24:MI') - to_date(csession.c_session_start_hour, 'HH24:MI'
                )) * 24 * 60)
            ELSE
                0
        END
    ) AS presence_minute,
    SUM(
        CASE
            WHEN att.c_state IN(
                '3', '4'
            ) THEN
                round(to_number(to_date(csession.c_session_end_hour, 'HH24:MI') - to_date(csession.c_session_start_hour, 'HH24:MI'
                )) * 24, 1)
            ELSE
                0
        END
    ) AS absence_hour,
    SUM(
        CASE
            WHEN att.c_state IN(
                '3', '4'
            ) THEN
                round(to_number(to_date(csession.c_session_end_hour, 'HH24:MI') - to_date(csession.c_session_start_hour, 'HH24:MI'
                )) * 24 * 60)
            ELSE
                0
        END
    ) AS absence_minute,
    class.c_code                               AS class_code,
    class.c_status                             AS class_status,
    class.c_start_date                         AS class_start_date,
    class.c_end_date                           AS class_end_date,
    class.c_teaching_type                      AS class_c_teaching_type,
    substr(class.c_start_date, 1, 4) AS class_year,
    class.f_planner                            AS tclass_planner,
    class.f_supervisor                         AS tclass_supervisor,
    course.c_code                              AS course_code,
    course.c_title_fa                          AS course_title_fa,
    class.n_h_duration                         AS course_duration,
    CASE
        WHEN course.e_theo_type = 1 THEN
            'تئوري'
        WHEN course.e_theo_type = 2 THEN
            'عملي'
        WHEN course.e_theo_type = 3 THEN
            'تئوري_عملي'
        ELSE
            NULL
    END AS course_theo_type,
    category.id                                AS coursecategory,
    subcategory.id                             AS coursesubcategory,
    std.emp_no                                 AS student_emp_no,
    std.personnel_no                           AS student_personnel_no,
    std.national_code                          AS student_national_code,
    std.first_name                             AS student_first_name,
    std.last_name                              AS student_last_name,
    department.c_moavenat_title                AS student_ccp_assistant,
    department.c_omor_title                    AS student_ccp_affairs,
    department.c_ghesmat_title                 AS student_ccp_section,
    department.c_vahed_title                   AS student_ccp_unit,
    class_std.applicant_company_name           AS class_student_applicant_company_name,
    department.c_hoze_title                    AS personnel_complex_title,
    personnel.work_place_title                 AS student_work_place_title,
    tbl_post_grade.c_title_fa                  AS student_post_grade_title,
    tbl_job.c_title_fa                         AS student_job_title,
    personal.c_first_name_fa                   AS teacher_firstname,
    personal.c_last_name_fa                    AS teacher_lastname,
    teacher.b_personnel                        AS course_teacher_status,
    teacher.id                                 AS course_teacher_id,
    institute.id                               AS institute_id,
    institute.c_title_fa                       AS institute_c_title_fa,
    term.id                                    AS term_id,
    evaluationanalysis.c_behavioral_grade      AS evaluationanalysis_c_behavioral_grade,
    evaluationanalysis.b_behavioral_pass       AS evaluationanalysis_c_behavioral_pass,
    CASE
        WHEN evaluationanalysis.c_behavioral_grade IS NULL THEN
            0
        ELSE
            1
    END AS evaluationanalysis_b_behavioral_status,
    evaluationanalysis.c_effectiveness_grade   AS evaluationanalysis_c_effectiveness_grade,
    evaluationanalysis.b_effectiveness_pass    AS evaluationanalysis_c_effectiveness_pass,
    CASE
        WHEN evaluationanalysis.c_effectiveness_grade IS NULL THEN
            0
        ELSE
            1
    END AS evaluationanalysis_b_effectiveness_status,
    evaluationanalysis.c_learning_grade        AS evaluationanalysis_c_learning_grade,
    evaluationanalysis.b_learning_pass         AS evaluationanalysis_c_learning_pass,
    CASE
        WHEN evaluationanalysis.c_learning_grade IS NULL THEN
            0
        ELSE
            1
    END AS evaluationanalysis_b_learning_status,
    evaluationanalysis.c_reaction_grade        AS evaluationanalysis_c_reaction_grade,
    evaluationanalysis.b_reaction_pass         AS evaluationanalysis_c_reaction_pass,
    CASE
        WHEN evaluationanalysis.c_reaction_grade IS NULL THEN
            0
        ELSE
            1
    END AS evaluationanalysis_b_reaction_status,
    evaluationanalysis.c_results_grade         AS evaluationanalysis_c_results_grade,
    evaluationanalysis.b_results_pass          AS evaluationanalysis_c_results_pass,
    CASE
        WHEN evaluationanalysis.c_results_grade IS NULL THEN
            0
        ELSE
            1
    END AS evaluationanalysis_b_results_status,
    evaluationanalysis.c_teacher_grade         AS evaluationanalysis_c_teacher_grade,
    evaluationanalysis.b_teacher_pass          AS evaluationanalysis_c_teacher_pass,
    CASE
        WHEN evaluationanalysis.c_teacher_grade IS NULL THEN
            0
        ELSE
            1
    END AS evaluationanalysis_b_teacher_status
FROM
    tbl_attendance            att
    INNER JOIN tbl_student               std ON att.f_student = std.id
    INNER JOIN (
        SELECT
            view_active_personnel.personnel_no,
            view_active_personnel.national_code,
            view_active_personnel.complex_title,
            view_active_personnel.work_place_title,
            view_active_personnel.post_grade_title,
            view_active_personnel.f_post_id,
            view_active_personnel.f_department_id
        FROM
            view_active_personnel
        UNION ALL
        SELECT
            tbl_personnel_registered.personnel_no,
            tbl_personnel_registered.national_code,
            tbl_personnel_registered.complex_title,
            tbl_personnel_registered.work_place_title,
            tbl_personnel_registered.post_grade_title,
            tbl_personnel_registered.f_post_id,
            tbl_personnel_registered.f_department_id
        FROM
            tbl_personnel_registered
    ) personnel ON std.national_code = personnel.national_code
    LEFT JOIN tbl_department            department ON department.id = personnel.f_department_id
    INNER JOIN tbl_session               csession ON att.f_session = csession.id
    INNER JOIN tbl_class                 class ON csession.f_class_id = class.id
    INNER JOIN tbl_institute             institute ON class.f_institute_organizer = institute.id
    INNER JOIN tbl_course                course ON class.f_course = course.id
    INNER JOIN tbl_term                  term ON class.f_term = term.id
    INNER JOIN tbl_category              category ON course.category_id = category.id
    INNER JOIN tbl_sub_category          subcategory ON course.subcategory_id = subcategory.id
    INNER JOIN tbl_teacher               teacher ON class.f_teacher = teacher.id
    LEFT JOIN tbl_personal_info         personal ON teacher.f_personality = personal.id
    INNER JOIN tbl_class_student         class_std ON class_std.student_id = std.id AND class_std.class_id = class.id
    LEFT JOIN tbl_post ON personnel.f_post_id = tbl_post.id
    LEFT JOIN tbl_job ON tbl_job.id = tbl_post.f_job_id
    LEFT JOIN tbl_post_grade ON tbl_post_grade.id = tbl_post.f_post_grade_id
    LEFT JOIN tbl_evaluation_analysis   evaluationanalysis ON evaluationanalysis.f_tclass = class.id
GROUP BY
    class.id,
    class.c_start_date,
    class.c_end_date,
    csession.c_session_date,
    std.id,
    std.emp_no,
    std.personnel_no,
    std.national_code,
    std.first_name,
    std.last_name,
    class_std.applicant_company_name,
    department.c_hoze_title,
    personnel.work_place_title,
    tbl_post_grade.c_title_fa,
    tbl_job.c_title_fa,
    department.c_moavenat_title,
    department.c_omor_title,
    department.c_ghesmat_title,
    department.c_vahed_title,
    class.c_code,
    course.id,
    course.c_code,
    course.c_title_fa,
    class.c_teaching_type,
    class.c_status,
    institute.c_title_fa,
    institute.id,
    course.category_id,
    course.e_run_type,
    course.e_theo_type,
    course.e_level_type,
    course.e_technical_type,
    category.id,
    subcategory.id,
    teacher.id,
    teacher.b_personnel,
    personal.c_first_name_fa,
    personal.c_last_name_fa,
    term.c_title_fa,
    term.id,
    class.f_planner,
    class.f_supervisor,
    class.n_h_duration,
    evaluationanalysis.c_behavioral_grade,
    evaluationanalysis.b_behavioral_pass,
    evaluationanalysis.c_effectiveness_grade,
    evaluationanalysis.b_effectiveness_pass,
    evaluationanalysis.c_learning_grade,
    evaluationanalysis.b_learning_pass,
    evaluationanalysis.c_reaction_grade,
    evaluationanalysis.b_reaction_pass,
    evaluationanalysis.c_results_grade,
    evaluationanalysis.b_results_pass,
    evaluationanalysis.c_teacher_grade,
    evaluationanalysis.b_teacher_pass
    ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="view_presence_report-009">
        <createView viewName="view_presence_report" replaceIfExists="true">
            <![CDATA[
  SELECT DISTINCT
    SUM(
        CASE
            WHEN att.c_state IN(
                '1', '2'
            ) THEN
                round(to_number(to_date(csession.c_session_end_hour, 'HH24:MI') - to_date(csession.c_session_start_hour, 'HH24:MI'
                )) * 24, 1)
            ELSE
                0
        END
    ) AS presence_hour,
    SUM(
        CASE
            WHEN att.c_state IN(
                '1', '2'
            ) THEN
                round(to_number(to_date(csession.c_session_end_hour, 'HH24:MI') - to_date(csession.c_session_start_hour, 'HH24:MI'
                )) * 24 * 60)
            ELSE
                0
        END
    ) AS presence_minute,
    SUM(
        CASE
            WHEN att.c_state IN(
                '3', '4'
            ) THEN
                round(to_number(to_date(csession.c_session_end_hour, 'HH24:MI') - to_date(csession.c_session_start_hour, 'HH24:MI'
                )) * 24, 1)
            ELSE
                0
        END
    ) AS absence_hour,
    SUM(
        CASE
            WHEN att.c_state IN(
                '3', '4'
            ) THEN
                round(to_number(to_date(csession.c_session_end_hour, 'HH24:MI') - to_date(csession.c_session_start_hour, 'HH24:MI'
                )) * 24 * 60)
            ELSE
                0
        END
    ) AS absence_minute,
    class.id                           AS class_id,
    class.c_code                       AS class_code,
    class.c_start_date                 AS class_start_date,
    class.c_end_date                   AS class_end_date,
    csession.c_session_date            AS session_session_date,
    std.id                             AS student_id,
    std.emp_no                         AS student_emp_no,
    std.personnel_no                   AS student_personnel_no,
    std.national_code                  AS student_national_code,
    std.first_name                     AS student_first_name,
    std.last_name                      AS student_last_name,
    class_std.applicant_company_name   AS class_student_applicant_company_name,
    department.c_hoze_title            AS personnel_complex_title,
    department.c_moavenat_title AS student_ccp_assistant,
    department.c_omor_title   AS student_ccp_affairs,
    department.c_ghesmat_title AS student_ccp_section,
    department.c_vahed_title AS student_ccp_unit,
    course.id                          AS course_id,
    course.c_code                      AS course_code,
    course.c_title_fa                  AS course_title_fa,
    course.category_id                 AS course_category_id,
    CASE
        WHEN course.e_run_type = 1  THEN
            'داخلی'
        WHEN course.e_run_type = 2  THEN
            'اعزام'
        WHEN course.e_run_type = 3  THEN
            'سمينار داخلي'
        WHEN course.e_run_type = 4  THEN
            'سمينار اعزام'
        WHEN course.e_run_type = 5  THEN
            'حين كار'
        WHEN course.e_run_type = 6  THEN
            'خارجی'
        WHEN course.e_run_type = 7  THEN
            'سمینار خارجی'
        WHEN course.e_run_type = 8  THEN
            'مجازي'
        WHEN course.e_run_type = 9  THEN
            'بازآموزي'
        WHEN course.e_run_type = 10 THEN
            'جعبه ابزار'
        ELSE
            NULL
    END AS course_run_type,
    CASE
        WHEN course.e_theo_type = 1 THEN
            'تئوري'
        WHEN course.e_theo_type = 2 THEN
            'عملي'
        WHEN course.e_theo_type = 3 THEN
            'تئوري_عملي'
        ELSE
            NULL
    END AS course_theo_type,
    CASE
        WHEN course.e_level_type = 1 THEN
            'كارشناسي'
        WHEN course.e_level_type = 2 THEN
            'تكنسيني'
        WHEN course.e_level_type = 3 THEN
            'كارگري'
        WHEN course.e_level_type = 4 THEN
            'عمومی'
        ELSE
            NULL
    END AS course_level_type,
    CASE
        WHEN course.e_technical_type = 1 THEN
            'عمومي'
        WHEN course.e_technical_type = 2 THEN
            'فني'
        WHEN course.e_technical_type = 3 THEN
            'مديريتي'
        ELSE
            NULL
    END AS course_technical_type,
    class.c_teaching_type              AS class_teaching_type,
    institute.id                       AS institute_id,
    institute.c_title_fa               AS institute_c_title_fa
FROM
    tbl_attendance      att
    INNER JOIN tbl_student         std ON att.f_student = std.id
    INNER JOIN (
        SELECT
                  view_active_personnel.personnel_no,
                  view_active_personnel.national_code,
                  view_active_personnel.complex_title,
                  view_active_personnel.work_place_title,
                  view_active_personnel.post_grade_title,
                  view_active_personnel.job_title,
                  view_active_personnel.f_department_id
            FROM
                 view_active_personnel
            UNION ALL
            SELECT
                tbl_personnel_registered.personnel_no,
                tbl_personnel_registered.national_code,
                tbl_personnel_registered.complex_title,
                tbl_personnel_registered.work_place_title,
                tbl_personnel_registered.post_grade_title,
                tbl_personnel_registered.job_title,
                tbl_personnel_registered.f_department_id
            FROM
                tbl_personnel_registered
        ) personnel ON std.national_code = personnel.national_code
          LEFT JOIN tbl_department department ON department.id=personnel.f_department_id
    INNER JOIN tbl_session         csession ON att.f_session = csession.id
    INNER JOIN tbl_class           class ON csession.f_class_id = class.id
    INNER JOIN tbl_institute       institute ON class.f_institute_organizer = institute.id
    INNER JOIN tbl_course          course ON class.f_course = course.id
    INNER JOIN tbl_class_student   class_std ON class_std.student_id = std.id
                                              AND class_std.class_id = class.id
GROUP BY
    class.id,
    class.c_start_date,
    class.c_end_date,
    csession.c_session_date,
    std.id,
    std.emp_no,
    std.personnel_no,
    std.national_code,
    std.first_name,
    std.last_name,
    class_std.applicant_company_name,
    department.c_hoze_title,
    department.c_moavenat_title,
    department.c_omor_title,
    department.c_ghesmat_title,
    department.c_vahed_title,
    class.c_code,
    course.id,
    course.c_code,
    course.c_title_fa,
    class.c_teaching_type,
    institute.c_title_fa,
    course.category_id,
    course.e_run_type,
    course.e_theo_type,
    course.e_level_type,
    course.e_technical_type,
    institute.id
    ]]>
        </createView>
    </changeSet>
    <changeSet author="NICICO" id="VIEW_TRAINING_POST-007">
        <createView viewName="VIEW_TRAINING_POST" replaceIfExists="true">
            <![CDATA[
SELECT
    tp.id,
    tp.c_created_by,
    tp.d_created_date,
    tp.e_deleted,
    tp.e_enabled,
    tp.c_last_modified_by,
    tp.d_last_modified_date,
    tp.n_version,
    tp.c_code,
    tp.c_title_fa,
    tp.c_affairs,
    tp.c_area,
    tp.c_assistance,
    tp.c_cost_center_title_fa,
    tp.c_cost_center_code,
    tp.c_section,
    tp.c_unit,
    tp.f_department_id,
    tp.f_post_grade_id,
    tp.f_job_id,
    tp.d_last_modified_date_na,
    tp.c_modified_by_na,
    tp.c_people_type,
    j.c_title_fa    AS job_c_title_fa,
    j.c_code        AS job_c_code,
    pg.c_title_fa   AS post_grade_c_title_fa,
    pg.c_code       AS post_grade_c_code,
    COUNT(DISTINCT na.f_competence) AS n_competence_count,
    COUNT(DISTINCT prs.id) AS n_personnel_count
FROM
    tbl_training_post                                             tp
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_needs_assessment
        WHERE
            c_object_type = 'TrainingPost'
            AND e_deleted IS NULL
            AND e_enabled IS NULL
    ) na ON tp.id = na.f_object
    LEFT JOIN tbl_post_training_post                                        ptp ON tp.id = ptp.f_training_post_id
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_post
        WHERE
            e_deleted IS NULL
            AND e_enabled IS NULL
    ) p ON p.id = ptp.f_post_id
    LEFT JOIN view_active_personnel                                         prs ON p.id = prs.f_post_id
    LEFT JOIN tbl_job                                                       j ON j.id = tp.f_job_id
    LEFT JOIN tbl_post_grade                                                pg ON pg.id = tp.f_post_grade_id
GROUP BY
    tp.id,
    tp.c_created_by,
    tp.d_created_date,
    tp.e_deleted,
    tp.e_enabled,
    tp.c_last_modified_by,
    tp.d_last_modified_date,
    tp.n_version,
    tp.c_code,
    tp.c_title_fa,
    tp.c_affairs,
    tp.c_area,
    tp.c_assistance,
    tp.c_cost_center_title_fa,
    tp.c_cost_center_code,
    tp.c_section,
    tp.c_unit,
    tp.f_department_id,
    tp.f_post_grade_id,
    tp.f_job_id,
    tp.d_last_modified_date_na,
    tp.c_modified_by_na,
    tp.c_people_type,
    j.c_title_fa,
    j.c_code,
    pg.c_title_fa,
    pg.c_code
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_PERSONNELS-003">
        <createView viewName="VIEW_PERSONNELS" replaceIfExists="true">
            <![CDATA[
   SELECT
                            tbl_personnel.personnel_no AS personnel_no ,
                            tbl_personnel.f_department_id AS department_id,
                            tbl_personnel.national_code AS national_code,
                            tbl_personnel.f_post_id
                        FROM
                            tbl_personnel
                        WHERE
                            tbl_personnel.deleted = 0
                        UNION ALL
                        SELECT
                            tbl_personnel_registered.personnel_no AS personnel_no ,
                            tbl_personnel_registered.f_department_id AS department_id ,
                            tbl_personnel_registered.national_code AS national_code,
                            tbl_personnel_registered.f_post_id
                        FROM
                            tbl_personnel_registered
                        WHERE
                            tbl_personnel_registered.deleted = 0
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_PERSONNEL_TRAINING_STATUS_REPORT-003">
        <createView viewName="VIEW_PERSONNEL_TRAINING_STATUS_REPORT" replaceIfExists="true">
            <![CDATA[
   SELECT
    ROWNUM AS id,
    r."NA_PRIORITY_ID",r."NA_IS_IN_NA",r."CLASS_STATUS",r."CLASS_STUDENT_SCORES_STATE_ID",r."CLASS_STUDENT_SCORE",r."CLASS_ID",r."PERSONNEL_IS_PERSONNEL",r."COURSE_ID",r."COURSE_CODE",r."COURSE_TITLE_FA",r."PERSONNEL_PERSONNEL_NO",r."PERSONNEL_FIRST_NAME",r."PERSONNEL_LAST_NAME",r."PERSONNEL_NATIONAL_CODE",r."PERSONNEL_CPP_AFFAIRS",r."PERSONNEL_CPP_AREA",r."PERSONNEL_CPP_ASSISTANT",r."PERSONNEL_CPP_CODE",r."PERSONNEL_CPP_SECTION",r."PERSONNEL_CPP_TITLE",r."PERSONNEL_CPP_UNIT",r."PERSONNEL_COMPANY_NAME",r."PERSONNEL_COMPLEX_TITLE",r."PERSONNEL_ID",r."PERSONNEL_JOB_NO",r."PERSONNEL_JOB_TITLE",r."PERSONNEL_EMP_NO",r."PERSONNEL_POST_CODE",r."PERSONNEL_POST_GRADE_CODE",r."PERSONNEL_POST_GRADE_TITLE",r."PERSONNEL_POST_TITLE",r."PERSONNEL_F_DEPARTMENT_ID",r."PERSONNEL_F_POST_ID"
FROM
    (
        SELECT
            na.na_priority_id,
            CASE
                WHEN na.na_priority_id IS NOT NULL THEN
                    1
                ELSE
                    0
            END AS na_is_in_na,
            t.c_status          AS class_status,
            t.scores_state_id   AS class_student_scores_state_id,
            t.score             AS class_student_score,
            t.class_id          AS class_id,
            1 AS personnel_is_personnel,
            prscrs."COURSE_ID",
            prscrs."COURSE_CODE",
            prscrs."COURSE_TITLE_FA",
            prscrs."PERSONNEL_PERSONNEL_NO",
            prscrs."PERSONNEL_FIRST_NAME",
            prscrs."PERSONNEL_LAST_NAME",
            prscrs."PERSONNEL_NATIONAL_CODE",
            prscrs."PERSONNEL_CPP_AFFAIRS",
            prscrs."PERSONNEL_CPP_AREA",
            prscrs."PERSONNEL_CPP_ASSISTANT",
            prscrs."PERSONNEL_CPP_CODE",
            prscrs."PERSONNEL_CPP_SECTION",
            prscrs."PERSONNEL_CPP_TITLE",
            prscrs."PERSONNEL_CPP_UNIT",
            prscrs."PERSONNEL_COMPANY_NAME",
            prscrs."PERSONNEL_COMPLEX_TITLE",
            prscrs."PERSONNEL_ID",
            prscrs."PERSONNEL_JOB_NO",
            prscrs."PERSONNEL_JOB_TITLE",
            prscrs."PERSONNEL_EMP_NO",
            prscrs."PERSONNEL_POST_CODE",
            prscrs."PERSONNEL_POST_GRADE_CODE",
            prscrs."PERSONNEL_POST_GRADE_TITLE",
            prscrs."PERSONNEL_POST_TITLE",
            prscrs."PERSONNEL_F_DEPARTMENT_ID",
            prscrs."PERSONNEL_F_POST_ID"
        FROM
            view_sub_active_personnel_must_pass_course   prscrs
            LEFT JOIN view_personnel_course_na_report              na ON prscrs.personnel_id = na.personnel_id
                                                            AND prscrs.course_id = na.course_id
            LEFT JOIN (
                SELECT
                    std.national_code,
                    cls.f_course,
                    cls.c_status,
                    cls.id AS class_id,
                    clsstd.scores_state_id,
                    clsstd.score
                FROM
                    tbl_student         std
                    INNER JOIN tbl_class_student   clsstd ON clsstd.student_id = std.id
                    INNER JOIN tbl_class           cls ON cls.id = clsstd.class_id
            ) t ON t.national_code = prscrs.personnel_national_code
                   AND t.f_course = prscrs.course_id
        UNION ALL
        SELECT
            NULL AS na_priority_id,
            0 na_is_in_na,
            t.c_status             AS class_status,
            t.scores_state_id      AS class_student_scores_state_id,
            t.score                AS class_student_score,
            t.class_id             AS class_id,
            0 AS personnel_is_personnel,
            crs.id                 AS "COURSE_ID",
            crs.c_code             AS "COURSE_CODE",
            crs.c_title_fa         AS "COURSE_TITLE_FA",
            reg.personnel_no       AS "PERSONNEL_PERSONNEL_NO",
            reg.first_name         AS "PERSONNEL_FIRST_NAME",
            reg.last_name          AS "PERSONNEL_LAST_NAME",
            reg.national_code      AS "PERSONNEL_NATIONAL_CODE",
            reg.ccp_affairs        AS "PERSONNEL_CPP_AFFAIRS",
            reg.ccp_area           AS "PERSONNEL_CPP_AREA",
            reg.ccp_assistant      AS "PERSONNEL_CPP_ASSISTANT",
            reg.ccp_code           AS "PERSONNEL_CPP_CODE",
            reg.ccp_section        AS "PERSONNEL_CPP_SECTION",
            reg.ccp_title          AS "PERSONNEL_CPP_TITLE",
            reg.ccp_unit           AS "PERSONNEL_CPP_UNIT",
            reg.company_name       AS "PERSONNEL_COMPANY_NAME",
            reg.complex_title      AS "PERSONNEL_COMPLEX_TITLE",
            reg.id                 AS "PERSONNEL_ID",
            reg.job_no             AS "PERSONNEL_JOB_NO",
            reg.job_title          AS "PERSONNEL_JOB_TITLE",
            reg.emp_no             AS "PERSONNEL_EMP_NO",
            reg.post_code          AS "PERSONNEL_POST_CODE",
            reg.post_grade_code    AS "PERSONNEL_POST_GRADE_CODE",
            reg.post_grade_title   AS "PERSONNEL_POST_GRADE_TITLE",
            reg.post_title         AS "PERSONNEL_POST_TITLE",
            reg.f_department_id    AS "PERSONNEL_F_DEPARTMENT_ID",
            reg.f_post_id          AS "PERSONNEL_F_POST_ID"
        FROM
            tbl_course                 crs
            CROSS JOIN tbl_personnel_registered   reg
            LEFT JOIN (
                SELECT
                    std.national_code,
                    cls.f_course,
                    cls.c_status,
                    cls.id AS class_id,
                    clsstd.scores_state_id,
                    clsstd.score
                FROM
                    tbl_student         std
                    INNER JOIN tbl_class_student   clsstd ON clsstd.student_id = std.id
                    INNER JOIN tbl_class           cls ON cls.id = clsstd.class_id
            ) t ON t.national_code = reg.national_code
                   AND t.f_course = crs.id
    ) r
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_CONTINUOUS_STATUS_REPORT-008">
        <createView viewName="VIEW_CONTINUOUS_STATUS_REPORT" replaceIfExists="true">
            <![CDATA[
 SELECT
        tbl_class.c_status                               AS class_status,
        view_active_personnel.id                         AS personnel_id,
        view_active_personnel.emp_no                     AS personnel_emp_no,
        view_active_personnel.personnel_no               AS personnel_personnel_no,
        view_active_personnel.national_code              AS personnel_national_code,
        view_active_personnel.first_name                 AS personnel_first_name,
        view_active_personnel.last_name                  AS personnel_last_name,
        tbl_post.c_title_fa                              AS personnel_post_title,
        tbl_class.id                                     AS class_id,
        tbl_class.c_code                                 AS class_code,
        tbl_course.id                                    AS course_id,
        tbl_course.c_code                                AS course_code,
        tbl_course.c_title_fa                            AS course_title_fa,
        tbl_class.c_start_date                           AS class_start_date,
        tbl_class.c_end_date                             AS class_end_date,
        tbl_class.n_h_duration                           AS class_h_duration,
        substr(tbl_class.c_start_date, 1, 4) AS class_year,
        tbl_term.c_code                                  AS term_code,
        tbl_term.c_title_fa                              AS term_title_fa,
        tbl_term.id                                      AS term_id,
        department.c_hoze_title                          AS personnel_complex_title,
        view_active_personnel.company_name               AS personnel_company_name,
        department.c_hoze_title                          AS personnel_ccp_area,
        department.c_moavenat_title                      AS personnel_ccp_assistant,
        department.c_omor_title                          AS personnel_ccp_affairs,
        department.c_vahed_title                         AS personnel_ccp_unit,
        department.c_ghesmat_title                       AS personnel_ccp_section,
        tbl_post_grade.c_title_fa                        AS personnel_post_grade_title,
        tbl_post_grade.id                                AS personnel_post_grade_id,
        CASE
            WHEN view_personnel_course_na_report.na_priority_id IS NOT NULL THEN
                'نیازسنجی'
            ELSE
                'غیر نیازسنجی'
        END AS coursetype,
        view_personnel_course_na_report.na_priority_id   AS na_priority_id
    FROM
        (
            SELECT
                *
            FROM
                tbl_class
            WHERE
                c_status IN (
                    1,
                    2
                )
        ) tbl_class
        INNER JOIN tbl_course ON tbl_course.id = tbl_class.f_course
        INNER JOIN tbl_term ON tbl_term.id = tbl_class.f_term
        INNER JOIN tbl_class_student ON tbl_class_student.class_id = tbl_class.id
        INNER JOIN tbl_student ON tbl_student.id = tbl_class_student.student_id
        INNER JOIN view_active_personnel ON view_active_personnel.national_code = tbl_student.national_code
        LEFT JOIN tbl_department department ON department.id = view_active_personnel.f_department_id
        LEFT JOIN view_personnel_course_na_report ON view_active_personnel.id = view_personnel_course_na_report.personnel_id
                                                     AND tbl_course.id = view_personnel_course_na_report.course_id
        LEFT JOIN tbl_post ON view_active_personnel.f_post_id = tbl_post.id
        LEFT JOIN tbl_post_grade ON tbl_post.f_post_grade_id = tbl_post_grade.id
UNION ALL

    SELECT
        tbl_class.c_status                       AS class_status,
        tbl_personnel_registered.id              AS personnel_id,
        tbl_personnel_registered.emp_no          AS personnel_emp_no,
        tbl_personnel_registered.personnel_no    AS personnel_personnel_no,
        tbl_personnel_registered.national_code   AS personnel_national_code,
        tbl_personnel_registered.first_name      AS personnel_first_name,
        tbl_personnel_registered.last_name       AS personnel_last_name,
        tbl_post.c_title_fa                      AS personnel_post_title,
        tbl_class.id                             AS class_id,
        tbl_class.c_code                         AS class_code,
        tbl_course.id                            AS course_id,
        tbl_course.c_code                        AS course_code,
        tbl_course.c_title_fa                    AS course_title_fa,
        tbl_class.c_start_date                   AS class_start_date,
        tbl_class.c_end_date                     AS class_end_date,
        tbl_class.n_h_duration                   AS class_h_duration,
        substr(tbl_class.c_start_date, 1, 4) AS class_year,
        tbl_term.c_code                          AS term_code,
        tbl_term.c_title_fa                      AS term_title_fa,
        tbl_term.id                              AS term_id,
        department.c_hoze_title                  AS personnel_complex_title,
        tbl_personnel_registered.company_name    AS personnel_company_name,
        department.c_hoze_title                  AS personnel_cccp_area,
        department.c_moavenat_title              AS personnel_ccp_assistant,
        department.c_omor_title                  AS ccp_affairs,
        department.c_vahed_title                 AS ccp_unit,
        department.c_ghesmat_title               AS personnel_ccp_section,
        tbl_post_grade.c_title_fa                AS personnel_post_grade_title,
        tbl_post_grade.id                        AS personnel_post_grade_id,
        NULL AS coursetype,
        NULL AS na_priority_id
    FROM
     (
            SELECT
                *
            FROM
                tbl_class
            WHERE
                c_status IN (
                    1,
                    2
                )
        ) tbl_class
        INNER JOIN tbl_course ON tbl_course.id = tbl_class.f_course
        INNER JOIN tbl_term ON tbl_term.id = tbl_class.f_term
        INNER JOIN tbl_class_student ON tbl_class_student.class_id = tbl_class.id
        INNER JOIN tbl_student ON tbl_student.id = tbl_class_student.student_id
        INNER JOIN tbl_personnel_registered ON tbl_personnel_registered.national_code = tbl_student.national_code
        LEFT JOIN tbl_department                               department ON department.id = tbl_personnel_registered.f_department_id
        LEFT JOIN tbl_post ON tbl_personnel_registered.f_post_id = tbl_post.id
        LEFT JOIN tbl_post_grade ON tbl_post.f_post_grade_id = tbl_post_grade.id
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_COURSES_PASSED_PERSONNEL_REPORT-002">
        <createView viewName="VIEW_COURSES_PASSED_PERSONNEL_REPORT" replaceIfExists="true">
            <![CDATA[
  SELECT
        tbl_class.c_status                               AS class_status,
        view_active_personnel.id                         AS personnel_id,
        view_active_personnel.emp_no                     AS personnel_emp_no,
        view_active_personnel.personnel_no               AS personnel_personnel_no,
        view_active_personnel.national_code              AS personnel_national_code,
        view_active_personnel.first_name                 AS personnel_first_name,
        view_active_personnel.last_name                  AS personnel_last_name,
        tbl_class.id                                     AS class_id,
        tbl_class.c_code                                 AS class_code,
        tbl_course.id                                    AS course_id,
        tbl_course.c_code                                AS course_code,
        tbl_course.c_title_fa                            AS course_title_fa,
        tbl_class.c_start_date                           AS class_start_date,
        tbl_class.c_end_date                             AS class_end_date,
        tbl_class.n_h_duration                           AS class_h_duration,
        substr(tbl_class.c_start_date, 1, 4) AS class_year,
        tbl_term.c_code                                  AS term_code,
        tbl_term.c_title_fa                              AS term_title_fa,
        tbl_term.id                                      AS term_id,
        department.c_hoze_title                          AS personnel_complex_title,
        view_active_personnel.company_name               AS personnel_company_name,
        department.c_hoze_title                          AS personnel_ccp_area,
        department.c_moavenat_title                      AS personnel_ccp_assistant,
        department.c_omor_title                          AS personnel_ccp_affairs,
        department.c_vahed_title                         AS personnel_ccp_unit,
        department.c_ghesmat_title                       AS personnel_ccp_section,
        CASE
            WHEN view_personnel_course_na_report.na_priority_id IS NOT NULL THEN
                'نیازسنجی'
            ELSE
                'غیر نیازسنجی'
        END AS coursetype,
        view_personnel_course_na_report.na_priority_id   AS na_priority_id,
        tbl_class_student.scores_state_id                AS class_student_scores_state_id,
        tbl_class_student.score                          AS class_student_score,
        pg.c_code                                        AS personnel_post_grade_code
    FROM
        (
            SELECT
                *
            FROM
                tbl_class_student
            WHERE
                scores_state_id IN (
                    400,
                    401
                )
        ) tbl_class_student
        INNER JOIN tbl_class ON tbl_class_student.class_id = tbl_class.id
        INNER JOIN tbl_student ON tbl_student.id = tbl_class_student.student_id
        INNER JOIN tbl_course ON tbl_course.id = tbl_class.f_course
        INNER JOIN tbl_term ON tbl_term.id = tbl_class.f_term
        INNER JOIN view_active_personnel ON view_active_personnel.national_code = tbl_student.national_code
        LEFT JOIN tbl_department   department ON department.id = view_active_personnel.f_department_id
        LEFT JOIN view_personnel_course_na_report ON view_active_personnel.id = view_personnel_course_na_report.personnel_id
                                                     AND tbl_course.id = view_personnel_course_na_report.course_id
        LEFT JOIN tbl_post         p ON view_personnel_course_na_report.personnel_post_id = p.id
        LEFT JOIN tbl_post_grade   pg ON p.f_post_grade_id = pg.id
    UNION ALL
    SELECT
        tbl_class.c_status                       AS class_status,
        tbl_personnel_registered.id              AS personnel_id,
        tbl_personnel_registered.emp_no          AS personnel_emp_no,
        tbl_personnel_registered.personnel_no    AS personnel_personnel_no,
        tbl_personnel_registered.national_code   AS personnel_national_code,
        tbl_personnel_registered.first_name      AS personnel_first_name,
        tbl_personnel_registered.last_name       AS personnel_last_name,
        tbl_class.id                             AS class_id,
        tbl_class.c_code                         AS class_code,
        tbl_course.id                            AS course_id,
        tbl_course.c_code                        AS course_code,
        tbl_course.c_title_fa                    AS course_title_fa,
        tbl_class.c_start_date                   AS class_start_date,
        tbl_class.c_end_date                     AS class_end_date,
        tbl_class.n_h_duration                   AS class_h_duration,
        substr(tbl_class.c_start_date, 1, 4) AS class_year,
        tbl_term.c_code                          AS term_code,
        tbl_term.c_title_fa                      AS term_title_fa,
        tbl_term.id                              AS term_id,
        department.c_hoze_title                  AS personnel_complex_title,
        tbl_personnel_registered.company_name    AS personnel_company_name,
        department.c_hoze_title                  AS personnel_cccp_area,
        department.c_moavenat_title              AS personnel_ccp_assistant,
        department.c_omor_title                  AS ccp_affairs,
        department.c_vahed_title                 AS ccp_unit,
        department.c_ghesmat_title               AS personnel_ccp_section,
        NULL AS coursetype,
        NULL AS na_priority_id,
        tbl_class_student.scores_state_id        AS classstudentscoresstateid,
        tbl_class_student.score                  AS class_student_score,
        pg.c_code                                AS postgradecode
    FROM
        (
            SELECT
                *
            FROM
                tbl_class_student
            WHERE
                scores_state_id IN (
                    400,
                    401
                )
        ) tbl_class_student
        INNER JOIN tbl_class ON tbl_class_student.class_id = tbl_class.id
        INNER JOIN tbl_student ON tbl_student.id = tbl_class_student.student_id
        INNER JOIN tbl_course ON tbl_course.id = tbl_class.f_course
        INNER JOIN tbl_term ON tbl_term.id = tbl_class.f_term
        INNER JOIN tbl_personnel_registered ON tbl_personnel_registered.national_code = tbl_student.national_code
        LEFT JOIN tbl_department   department ON department.id = tbl_personnel_registered.f_department_id
        LEFT JOIN tbl_post         p ON tbl_personnel_registered.f_post_id = p.id
        LEFT JOIN tbl_post_grade   pg ON p.f_post_grade_id = pg.id
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_TRAINING_OVER_TIME_REPORT-006">
        <createView viewName="VIEW_TRAINING_OVER_TIME_REPORT" replaceIfExists="true">
            <![CDATA[
 SELECT
        atten.personalnum,
        atten.personalnum2,
        atten.nationalcode,
        atten.name,
        atten.ccparea,
        atten.ccpaffairs,
        atten.peopletype,
        atten.classcode,
        atten.classname,
        atten.c_session_date,
        CASE
            WHEN atten.time >= 360 THEN
                floor((atten.time + 120) / 60)
                || (
                    CASE
                        WHEN mod(atten.time + 120, 60) <> 0 THEN
                            ':'
                            || mod(atten.time + 120, 60)
                    END
                )
            ELSE
                floor(atten.time / 60)
                || (
                    CASE
                        WHEN mod(atten.time, 60) <> 0 THEN
                            ':'
                            || mod(atten.time, 60)
                    END
                )
        END time
    FROM
        (
            SELECT DISTINCT
                std.personnel_no         AS personalnum,
                std.emp_no               AS personalnum2,
                std.national_code        AS nationalcode,
                std.first_name
                || ' '
                   || std.last_name AS name,
                dep.c_hoze_title         AS ccparea,
                dep.c_omor_title         AS ccpaffairs,
                personnel.personeltype   AS peopletype,
                class.c_code             AS classcode,
                class.c_title_class      AS classname,
                csession.c_session_date,
                SUM((to_number(substr(csession.c_session_end_hour, 1, 2)) * 60 + to_number(substr(csession.c_session_end_hour, 4,
                2))) -(to_number(substr(csession.c_session_start_hour, 1, 2)) * 60 + to_number(substr(csession.c_session_start_hour
                , 4, 2)))) AS time
            FROM
                tbl_attendance   att
                INNER JOIN tbl_student      std ON att.f_student = std.id
                INNER JOIN (
                    SELECT
                        CAST("P_TYPE" AS VARCHAR2(50)) personeltype,
                        "PERSONNEL_NO",
                        national_code,
                        first_name,
                        last_name,
                        f_department_id
                    FROM
                        view_active_personnel
                    UNION ALL
                    SELECT
                        CAST('personnel_registered' AS VARCHAR2(50)) personeltype,
                        "PERSONNEL_NO",
                        national_code,
                        first_name,
                        last_name,
                        f_department_id
                    FROM
                        tbl_personnel_registered
                ) personnel ON std.national_code = personnel.national_code
                LEFT JOIN tbl_department   dep ON dep.id = personnel.f_department_id
                INNER JOIN tbl_session      csession ON att.f_session = csession.id
                INNER JOIN tbl_class        class ON csession.f_class_id = class.id
            WHERE
                att.c_state = '2'
            GROUP BY
                std.personnel_no,
                std.emp_no,
                std.national_code,
                std.first_name
                || ' '
                   || std.last_name,
                dep.c_hoze_title,
                dep.c_omor_title,
                personnel.personeltype,
                class.c_code,
                class.c_title_class,
                csession.c_session_date
        ) atten
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_UNFINISHED_CLASSES_REPORT-001">
        <createView viewName="VIEW_UNFINISHED_CLASSES_REPORT" replaceIfExists="true">
            <![CDATA[
                        SELECT
                          c.id,
                          c.c_code                   AS class_code,
                          c.f_course,
                          co.c_code                  AS course_code,
                          co.c_title_fa,
                          c.n_h_duration             AS duration,
                          c.c_start_date,
                          c.c_end_date,
                          MIN(s.c_session_date
                              || ' - از '
                              || s.c_session_start_hour
                              || ' تا '
                              || s.c_session_end_hour
                              || ' ('
                              || s.c_day_name
                              || ')') AS first_session,
                          tbl_institute.c_title_fa   AS institutename,
                          COUNT(s.id) session_count,
                          (
                              CASE
                                  WHEN hs.held_sessions IS NOT NULL THEN
                                      hs.held_sessions
                                  ELSE
                                      0
                              END
                          ) AS held_sessions,
                          p.c_first_name_fa
                          || ' '
                          || p.c_last_name_fa AS teacher,
                          cs.student_id,
                          st.national_code,
                          st.first_name,
                          st.last_name
                      FROM
                          tbl_class           c
                          INNER JOIN tbl_course          co ON co.id = c.f_course
                          INNER JOIN tbl_session         s ON c.id = s.f_class_id
                          INNER JOIN tbl_institute ON tbl_institute.id = c.f_institute
                          LEFT JOIN (
                              SELECT
                                  se.f_class_id,
                                  COUNT(DISTINCT a.f_session) AS held_sessions
                              FROM
                                  tbl_attendance   a
                                  INNER JOIN tbl_session      se ON se.id = a.f_session
                              WHERE
                                  a.c_state <> 0
                              GROUP BY
                                  se.f_class_id
                          ) hs ON c.id = hs.f_class_id
                          INNER JOIN tbl_teacher         t ON t.id = c.f_teacher
                          INNER JOIN tbl_personal_info   p ON p.id = t.f_personality
                          INNER JOIN tbl_class_student   cs ON c.id = cs.class_id
                          INNER JOIN tbl_student         st ON st.id = cs.student_id
                      WHERE
                          c.c_status <> 3
                          AND c.c_status <> 4
                      GROUP BY
                          c.id,
                          c.c_code,
                          c.f_course,
                          co.c_code,
                          co.c_title_fa,
                          c.n_h_duration,
                          c.c_start_date,
                          c.c_end_date,
                          tbl_institute.c_title_fa,
                          cs.student_id,
                          hs.held_sessions,
                          p.c_first_name_fa,
                          p.c_last_name_fa,
                          st.national_code,
                          st.first_name,
                          st.last_name
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_ALL_POSTS-001">
        <createView viewName="VIEW_ALL_POSTS" replaceIfExists="true">
            <![CDATA[
 select ID postid,E_DELETED,E_ENABLED,N_VERSION,C_AFFAIRS,C_AREA,C_ASSISTANCE,C_CODE,C_COST_CENTER_CODE,C_COST_CENTER_TITLE_FA,C_SECTION,C_TITLE_FA,C_UNIT,C_PEOPLE_TYPE,jobTitle,postgradeTitle,groupid,type
from ((select post.*,job.C_TITLE_FA jobTitle,postgrade.C_TITLE_FA postgradeTitle,postgroups.f_postgroup_id groupid,'0' type from tbl_post post
	left join tbl_post_postgroup postgroups
	on post.id=postgroups.f_post_id
    left join tbl_job job
	on post.f_job_id=job.id
    left join tbl_post_grade postgrade
	on post.f_post_grade_id=postgrade.id)
    union all
 (select post.*,job.C_TITLE_FA jobTitle,postgrade.C_TITLE_FA postgradeTitle,trainingpostpostgroup.f_post_group_id groupid,'1' type from tbl_post post
	left join tbl_post_training_post post_trainingpost
	on post.id=post_trainingpost.f_post_id
	left join tbl_training_post trainingpost
	on post_trainingpost.f_training_post_id=trainingpost.id
	left join tbl_training_post_post_group trainingpostpostgroup
	on trainingpost.id=trainingpostpostgroup.f_training_post_id
    left join tbl_job job
	on post.f_job_id=job.id
    left join tbl_post_grade postgrade
	on post.f_post_grade_id=postgrade.id )
    ) posts
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_UNJUSTIFIED_ABSENCE_REPORT-001">
        <createView viewName="VIEW_UNJUSTIFIED_ABSENCE_REPORT" replaceIfExists="true">
            <![CDATA[
   SELECT DISTINCT
        tbl_session.c_session_date,
        tbl_student.last_name,
        tbl_student.first_name,
        tbl_class.c_title_class,
        tbl_class.c_start_date,
        tbl_class.c_end_date,
        tbl_class.c_code,
        tbl_session.c_session_end_hour,
        tbl_session.c_session_start_hour,
        tbl_student.id   AS student_id,
        tbl_class.id     AS class_id,
        tbl_session.id   AS session_id
    FROM
        tbl_attendance
        INNER JOIN tbl_session ON tbl_session.id = tbl_attendance.f_session
        INNER JOIN tbl_class ON tbl_class.id = tbl_session.f_class_id
        INNER JOIN tbl_student ON tbl_student.id = tbl_attendance.f_student
    WHERE
        tbl_attendance.c_state = '3'
    ORDER BY
        tbl_class.c_title_class,
        tbl_student.last_name,
        tbl_student.first_name
            ]]>
        </createView>
    </changeSet>
    <changeSet author="NICICO" id="VIEW_TRAINING_FILE_REPORT-003">
        <createView viewName="VIEW_TRAINING_FILE_REPORT" replaceIfExists="true">
            <![CDATA[
SELECT
    tbl_class.c_code AS class_code,
    tbl_course.c_code AS course_code,
    tbl_course.c_title_fa AS course_title,
    tbl_term.c_title_fa AS term_title,
    tbl_class.c_start_date AS class_start_date,
    tbl_class.c_end_date AS class_end_date,
    tbl_class.c_status AS class_status,
    tbl_class_student.id AS class_student_id,
    tbl_class_student.score,
    tbl_class_student.scores_state_id,
    tbl_student.post_code,
    tbl_student.post_title,
    tbl_student.emp_no,
    tbl_student.ccp_affairs,
    tbl_student.national_code,
    tbl_student.job_title,
    tbl_student.post_grade_title,
    tbl_class.id,
    tbl_personal_info.c_first_name_fa as first_name,
    tbl_personal_info.c_last_name_fa as last_name
FROM
    tbl_course
    INNER JOIN tbl_class ON tbl_course.id = tbl_class.f_course
    INNER JOIN tbl_teacher ON tbl_teacher.id = tbl_class.f_teacher
    INNER JOIN tbl_term ON tbl_term.id = tbl_class.f_term
    INNER JOIN tbl_class_student ON tbl_class.id = tbl_class_student.class_id
    INNER JOIN tbl_student ON tbl_student.id = tbl_class_student.student_id
    INNER JOIN tbl_personal_info ON tbl_personal_info.id = tbl_teacher.f_personality
            ]]>
        </createView>
    </changeSet>


    <changeSet author="NICICO" id="VIEW_ACTIVE_PERSONNEL_FOR_REGISTER_IN_CLASS-001">
        <createView viewName="VIEW_ACTIVE_PERSONNEL_FOR_REGISTER_IN_CLASS" replaceIfExists="true">
            <![CDATA[
SELECT
    course.id           AS course_id,
    course.c_code       AS course_code,
    course.c_title_fa   AS course_title_fa,
    nvl2(na.na_priority_id, 1, 0) AS is_in_na,
    passed.class_student_scores_state_id,
    prs."PERSONNEL_NO",prs."ADDRESS",prs."AGE",prs."BIRTH_CERTIFICATE_NO",prs."BIRTH_DATE",prs."BIRTH_PLACE",prs."CCP_AFFAIRS",prs."CCP_AREA",prs."CCP_ASSISTANT",prs."CCP_CODE",prs."CCP_SECTION",prs."CCP_TITLE",prs."CCP_UNIT",prs."COMPANY_NAME",prs."COMPLEX_TITLE",prs."CONTRACT_DESCRIPTION",prs."CONTRACT_NO",prs."DELETED",prs."DEPARTMENT_CODE",prs."DEPARTMENT_TITLE",prs."EDUCATION_LEVEL_TITLE",prs."EDUCATION_LICENSE_TYPE_TITLE",prs."EDUCATION_FIELD_TITLE",prs."EMAIL",prs."EMPLOYMENT_DATE",prs."EMPLOYMENT_STATUS_TITLE",prs."EMPLOYMENT_STATUS_ID",prs."EMPLOYMENT_TYPE_TITLE",prs."FATHER_NAME",prs."FIRST_NAME",prs."GENDER_TITLE",prs."ID",prs."INSURANCE_CODE",prs."JOB_NO",prs."JOB_TITLE",prs."LAST_NAME",prs."MARITAL_STATUS_TITLE",prs."MILITARY_STATUS_TITLE",prs."MOBILE",prs."NATIONAL_CODE",prs."OPERATIONAL_UNIT_TITLE",prs."EMP_NO",prs."PHONE",prs."POST_ASSIGNMENT_DATE",prs."POST_CODE",prs."POST_GRADE_CODE",prs."POST_GRADE_TITLE",prs."POST_TITLE",prs."F_POST_ID",prs."WORK_DAYS",prs."WORK_MONTHS",prs."WORK_PLACE_TITLE",prs."WORK_TURN_TITLE",prs."WORK_YEARS",prs."F_DEPARTMENT_ID"
FROM
    tbl_course                        course
    CROSS JOIN view_active_personnel             prs
    LEFT JOIN view_personnel_course_na_report   na ON na.course_id = course.id
                                                    AND na.personnel_id = prs.id
    LEFT JOIN (
        SELECT
            *
        FROM
            view_student_classstudent_class_term_course
        WHERE
            class_student_scores_state_id IN (400, 401, 410)
    ) passed ON passed.personnel_id = prs.id
                AND passed.course_id = course.id
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_PERSONNEL_COURSE_SKILL_NA_REPORT-002">
        <createView viewName="VIEW_PERSONNEL_COURSE_SKILL_NA_REPORT" replaceIfExists="true">
            <![CDATA[
                WITH result AS (
                SELECT
                    1 AS priority,
                    MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                    course.id                   AS course_id,
                    course.c_code               AS course_code,
                    course.c_title_fa           AS course_title_fa,
                    course.n_theory_duration    AS course_theory_duration,
                    course.e_technical_type     AS course_technical_type,
                    skill.id                    AS skill_id,
                    skill.c_code                AS skill_code,
                    skill.c_title_fa            AS skill_title_fa,
                    prs.personnel_no            AS personnel_personnel_no,
                    dep.c_omor_title            AS personnel_cpp_affairs,
                    dep.c_hoze_title            AS personnel_cpp_area,
                    dep.c_moavenat_title        AS personnel_cpp_assistant,
                    prs.ccp_code                AS personnel_cpp_code,
                    dep.c_ghesmat_title         AS personnel_cpp_section,
                    dep.c_title                 AS personnel_cpp_title,
                    dep.c_vahed_title           AS personnel_cpp_unit,
                    prs.company_name            AS personnel_company_name,
                    dep.c_hoze_title            AS personnel_complex_title,
                    prs.education_level_title   AS personnel_education_level_title,
                    prs.first_name              AS personnel_first_name,
                    prs.id                      AS personnel_id,
                    prs.job_no                  AS personnel_job_no,
                    prs.job_title               AS personnel_job_title,
                    prs.last_name               AS personnel_last_name,
                    prs.national_code           AS personnel_national_code,
                    prs.emp_no                  AS personnel_emp_no,
                    prs.post_code               AS personnel_post_code,
                    prs.post_grade_code         AS personnel_post_grade_code,
                    prs.post_grade_title        AS personnel_post_grade_title,
                    prs.post_title              AS personnel_post_title,
                    prs.f_post_id               AS personnel_post_id,
                    p.f_post_grade_id           AS personnel_post_grade_id,
                    prs.f_department_id         AS personnel_department_id
                FROM
                    (
                        SELECT
                            f_object,
                            f_skill,
                            f_parameter_value_needs_assessment_priority
                        FROM
                            tbl_needs_assessment
                        WHERE
                            c_object_type = 'Post'
                            AND e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) na
                    INNER JOIN tbl_skill               skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course              course ON skill.f_course = course.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) p ON na.f_object = p.id
                    INNER JOIN view_active_personnel   prs ON prs.f_post_id = p.id
                    LEFT JOIN tbl_department          dep ON dep.id = prs.f_department_id
                GROUP BY
                    prs.id,
                    course.id,
                    course.c_code,
                    course.c_title_fa,
                    course.n_theory_duration,
                    course.e_technical_type,
                    skill.id,
                    skill.c_code,
                    skill.c_title_fa,
                    prs.personnel_no,
                    dep.c_omor_title,
                    dep.c_hoze_title,
                    dep.c_moavenat_title,
                    prs.ccp_code,
                    dep.c_ghesmat_title,
                    dep.c_title,
                    dep.c_vahed_title,
                    prs.company_name,
                    dep.c_hoze_title,
                    prs.education_level_title,
                    prs.first_name,
                    prs.job_no,
                    prs.job_title,
                    prs.last_name,
                    prs.national_code,
                    prs.emp_no,
                    prs.post_code,
                    prs.post_grade_code,
                    prs.post_grade_title,
                    prs.post_title,
                    prs.f_post_id,
                    p.f_post_grade_id,
                    prs.f_department_id
                UNION ALL
                SELECT
                    2 AS priority,
                    MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                    course.id                   AS course_id,
                    course.c_code               AS course_code,
                    course.c_title_fa           AS course_title_fa,
                    course.n_theory_duration    AS course_theory_duration,
                    course.e_technical_type     AS course_technical_type,
                    skill.id                    AS skill_id,
                    skill.c_code                AS skill_code,
                    skill.c_title_fa            AS skill_title_fa,
                    prs.personnel_no            AS personnel_personnel_no,
                    dep.c_omor_title            AS personnel_cpp_affairs,
                    dep.c_hoze_title            AS personnel_cpp_area,
                    dep.c_moavenat_title        AS personnel_cpp_assistant,
                    prs.ccp_code                AS personnel_cpp_code,
                    dep.c_ghesmat_title         AS personnel_cpp_section,
                    dep.c_title                 AS personnel_cpp_title,
                    dep.c_vahed_title           AS personnel_cpp_unit,
                    prs.company_name            AS personnel_company_name,
                    dep.c_hoze_title            AS personnel_complex_title,
                    prs.education_level_title   AS personnel_education_level_title,
                    prs.first_name              AS personnel_first_name,
                    prs.id                      AS personnel_id,
                    prs.job_no                  AS personnel_job_no,
                    prs.job_title               AS personnel_job_title,
                    prs.last_name               AS personnel_last_name,
                    prs.national_code           AS personnel_national_code,
                    prs.emp_no                  AS personnel_emp_no,
                    prs.post_code               AS personnel_post_code,
                    prs.post_grade_code         AS personnel_post_grade_code,
                    prs.post_grade_title        AS personnel_post_grade_title,
                    prs.post_title              AS personnel_post_title,
                    prs.f_post_id               AS personnel_post_id,
                    p.f_post_grade_id           AS personnel_post_grade_id,
                    prs.f_department_id         AS personnel_department_id
                FROM
                    (
                        SELECT
                            tbl_needs_assessment.f_object,
                            tbl_needs_assessment.f_skill,
                            tbl_needs_assessment.f_parameter_value_needs_assessment_priority
                        FROM
                            tbl_needs_assessment
                        WHERE
                            tbl_needs_assessment.c_object_type = 'TrainingPost'
                            AND e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) na
                    INNER JOIN tbl_skill                skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course               course ON skill.f_course = course.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_training_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) tp ON na.f_object = tp.id
                    INNER JOIN tbl_post_training_post   ptp ON ptp.f_training_post_id = tp.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) p ON p.id = ptp.f_post_id
                    INNER JOIN view_active_personnel    prs ON prs.f_post_id = p.id
                    LEFT JOIN tbl_department           dep ON dep.id = prs.f_department_id
                GROUP BY
                    prs.id,
                    course.id,
                    course.c_code,
                    course.c_title_fa,
                    course.n_theory_duration,
                    course.e_technical_type,
                    skill.id,
                    skill.c_code,
                    skill.c_title_fa,
                    prs.personnel_no,
                    dep.c_omor_title,
                    dep.c_hoze_title,
                    dep.c_moavenat_title,
                    prs.ccp_code,
                    dep.c_ghesmat_title,
                    dep.c_title,
                    dep.c_vahed_title,
                    prs.company_name,
                    dep.c_hoze_title,
                    prs.education_level_title,
                    prs.first_name,
                    prs.job_no,
                    prs.job_title,
                    prs.last_name,
                    prs.national_code,
                    prs.emp_no,
                    prs.post_code,
                    prs.post_grade_code,
                    prs.post_grade_title,
                    prs.post_title,
                    prs.f_post_id,
                    p.f_post_grade_id,
                    prs.f_department_id
                UNION ALL
                SELECT
                    3 AS priority,
                    MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                    course.id                   AS course_id,
                    course.c_code               AS course_code,
                    course.c_title_fa           AS course_title_fa,
                    course.n_theory_duration    AS course_theory_duration,
                    course.e_technical_type     AS course_technical_type,
                    skill.id                    AS skill_id,
                    skill.c_code                AS skill_code,
                    skill.c_title_fa            AS skill_title_fa,
                    prs.personnel_no            AS personnel_personnel_no,
                    dep.c_omor_title            AS personnel_cpp_affairs,
                    dep.c_hoze_title            AS personnel_cpp_area,
                    dep.c_moavenat_title        AS personnel_cpp_assistant,
                    prs.ccp_code                AS personnel_cpp_code,
                    dep.c_ghesmat_title         AS personnel_cpp_section,
                    dep.c_title                 AS personnel_cpp_title,
                    dep.c_vahed_title           AS personnel_cpp_unit,
                    prs.company_name            AS personnel_company_name,
                    dep.c_hoze_title            AS personnel_complex_title,
                    prs.education_level_title   AS personnel_education_level_title,
                    prs.first_name              AS personnel_first_name,
                    prs.id                      AS personnel_id,
                    prs.job_no                  AS personnel_job_no,
                    prs.job_title               AS personnel_job_title,
                    prs.last_name               AS personnel_last_name,
                    prs.national_code           AS personnel_national_code,
                    prs.emp_no                  AS personnel_emp_no,
                    prs.post_code               AS personnel_post_code,
                    prs.post_grade_code         AS personnel_post_grade_code,
                    prs.post_grade_title        AS personnel_post_grade_title,
                    prs.post_title              AS personnel_post_title,
                    prs.f_post_id               AS personnel_post_id,
                    p.f_post_grade_id           AS personnel_post_grade_id,
                    prs.f_department_id         AS personnel_department_id
                FROM
                    (
                        SELECT
                            f_object,
                            f_skill,
                            f_parameter_value_needs_assessment_priority
                        FROM
                            tbl_needs_assessment
                        WHERE
                            c_object_type = 'PostGroup'
                            AND e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) na
                    INNER JOIN tbl_skill               skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course              course ON skill.f_course = course.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post_group
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) pg ON na.f_object = pg.id
                    INNER JOIN tbl_post_postgroup      ppg ON pg.id = ppg.f_postgroup_id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) p ON ppg.f_post_id = p.id
                    INNER JOIN view_active_personnel   prs ON prs.f_post_id = p.id
                    LEFT JOIN tbl_department          dep ON dep.id = prs.f_department_id
                GROUP BY
                    prs.id,
                    course.id,
                    course.c_code,
                    course.c_title_fa,
                    course.n_theory_duration,
                    course.e_technical_type,
                    skill.id,
                    skill.c_code,
                    skill.c_title_fa,
                    prs.personnel_no,
                    dep.c_omor_title,
                    dep.c_hoze_title,
                    dep.c_moavenat_title,
                    prs.ccp_code,
                    dep.c_ghesmat_title,
                    dep.c_title,
                    dep.c_vahed_title,
                    prs.company_name,
                    dep.c_hoze_title,
                    prs.education_level_title,
                    prs.first_name,
                    prs.job_no,
                    prs.job_title,
                    prs.last_name,
                    prs.national_code,
                    prs.emp_no,
                    prs.post_code,
                    prs.post_grade_code,
                    prs.post_grade_title,
                    prs.post_title,
                    prs.f_post_id,
                    p.f_post_grade_id,
                    prs.f_department_id
                UNION ALL
                SELECT
                    4 AS priority,
                    MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                    course.id                   AS course_id,
                    course.c_code               AS course_code,
                    course.c_title_fa           AS course_title_fa,
                    course.n_theory_duration    AS course_theory_duration,
                    course.e_technical_type     AS course_technical_type,
                    skill.id                    AS skill_id,
                    skill.c_code                AS skill_code,
                    skill.c_title_fa            AS skill_title_fa,
                    prs.personnel_no            AS personnel_personnel_no,
                    dep.c_omor_title            AS personnel_cpp_affairs,
                    dep.c_hoze_title            AS personnel_cpp_area,
                    dep.c_moavenat_title        AS personnel_cpp_assistant,
                    prs.ccp_code                AS personnel_cpp_code,
                    dep.c_ghesmat_title         AS personnel_cpp_section,
                    dep.c_title                 AS personnel_cpp_title,
                    dep.c_vahed_title           AS personnel_cpp_unit,
                    prs.company_name            AS personnel_company_name,
                    dep.c_hoze_title            AS personnel_complex_title,
                    prs.education_level_title   AS personnel_education_level_title,
                    prs.first_name              AS personnel_first_name,
                    prs.id                      AS personnel_id,
                    prs.job_no                  AS personnel_job_no,
                    prs.job_title               AS personnel_job_title,
                    prs.last_name               AS personnel_last_name,
                    prs.national_code           AS personnel_national_code,
                    prs.emp_no                  AS personnel_emp_no,
                    prs.post_code               AS personnel_post_code,
                    prs.post_grade_code         AS personnel_post_grade_code,
                    prs.post_grade_title        AS personnel_post_grade_title,
                    prs.post_title              AS personnel_post_title,
                    prs.f_post_id               AS personnel_post_id,
                    p.f_post_grade_id           AS personnel_post_grade_id,
                    prs.f_department_id         AS personnel_department_id
                FROM
                    (
                        SELECT
                            f_object,
                            f_skill,
                            f_parameter_value_needs_assessment_priority
                        FROM
                            tbl_needs_assessment
                        WHERE
                            c_object_type = 'PostGroup'
                            AND e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) na
                    INNER JOIN tbl_skill                      skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course                     course ON skill.f_course = course.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post_group
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) pg ON na.f_object = pg.id
                    INNER JOIN tbl_training_post_post_group   tppg ON tppg.f_post_group_id = pg.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_training_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) tp ON tppg.f_training_post_id = tp.id
                    INNER JOIN tbl_post_training_post         ptp ON tp.id = ptp.f_training_post_id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) p ON ptp.f_post_id = p.id
                    INNER JOIN view_active_personnel          prs ON prs.f_post_id = p.id
                    LEFT JOIN tbl_department                 dep ON dep.id = prs.f_department_id
                GROUP BY
                    prs.id,
                    course.id,
                    course.c_code,
                    course.c_title_fa,
                    course.n_theory_duration,
                    course.e_technical_type,
                    skill.id,
                    skill.c_code,
                    skill.c_title_fa,
                    prs.personnel_no,
                    dep.c_omor_title,
                    dep.c_hoze_title,
                    dep.c_moavenat_title,
                    prs.ccp_code,
                    dep.c_ghesmat_title,
                    dep.c_title,
                    dep.c_vahed_title,
                    prs.company_name,
                    dep.c_hoze_title,
                    prs.education_level_title,
                    prs.first_name,
                    prs.job_no,
                    prs.job_title,
                    prs.last_name,
                    prs.national_code,
                    prs.emp_no,
                    prs.post_code,
                    prs.post_grade_code,
                    prs.post_grade_title,
                    prs.post_title,
                    prs.f_post_id,
                    p.f_post_grade_id,
                    prs.f_department_id
                UNION ALL
                SELECT
                    5 AS priority,
                    MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                    course.id                   AS course_id,
                    course.c_code               AS course_code,
                    course.c_title_fa           AS course_title_fa,
                    course.n_theory_duration    AS course_theory_duration,
                    course.e_technical_type     AS course_technical_type,
                    skill.id                    AS skill_id,
                    skill.c_code                AS skill_code,
                    skill.c_title_fa            AS skill_title_fa,
                    prs.personnel_no            AS personnel_personnel_no,
                    dep.c_omor_title            AS personnel_cpp_affairs,
                    dep.c_hoze_title            AS personnel_cpp_area,
                    dep.c_moavenat_title        AS personnel_cpp_assistant,
                    prs.ccp_code                AS personnel_cpp_code,
                    dep.c_ghesmat_title         AS personnel_cpp_section,
                    dep.c_title                 AS personnel_cpp_title,
                    dep.c_vahed_title           AS personnel_cpp_unit,
                    prs.company_name            AS personnel_company_name,
                    dep.c_hoze_title            AS personnel_complex_title,
                    prs.education_level_title   AS personnel_education_level_title,
                    prs.first_name              AS personnel_first_name,
                    prs.id                      AS personnel_id,
                    prs.job_no                  AS personnel_job_no,
                    prs.job_title               AS personnel_job_title,
                    prs.last_name               AS personnel_last_name,
                    prs.national_code           AS personnel_national_code,
                    prs.emp_no                  AS personnel_emp_no,
                    prs.post_code               AS personnel_post_code,
                    prs.post_grade_code         AS personnel_post_grade_code,
                    prs.post_grade_title        AS personnel_post_grade_title,
                    prs.post_title              AS personnel_post_title,
                    prs.f_post_id               AS personnel_post_id,
                    p.f_post_grade_id           AS personnel_post_grade_id,
                    prs.f_department_id         AS personnel_department_id
                FROM
                    (
                        SELECT
                            f_object,
                            f_skill,
                            f_parameter_value_needs_assessment_priority
                        FROM
                            tbl_needs_assessment
                        WHERE
                            c_object_type = 'Job'
                            AND e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) na
                    INNER JOIN tbl_skill                skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course               course ON skill.f_course = course.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_job
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) j ON na.f_object = j.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_training_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) tp ON tp.f_job_id = j.id
                    INNER JOIN tbl_post_training_post   ptp ON tp.id = ptp.f_training_post_id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) p ON ptp.f_post_id = p.id
                    INNER JOIN view_active_personnel    prs ON prs.f_post_id = p.id
                    LEFT JOIN tbl_department           dep ON dep.id = prs.f_department_id
                GROUP BY
                    prs.id,
                    course.id,
                    course.c_code,
                    course.c_title_fa,
                    course.n_theory_duration,
                    course.e_technical_type,
                    skill.id,
                    skill.c_code,
                    skill.c_title_fa,
                    prs.personnel_no,
                    dep.c_omor_title,
                    dep.c_hoze_title,
                    dep.c_moavenat_title,
                    prs.ccp_code,
                    dep.c_ghesmat_title,
                    dep.c_title,
                    dep.c_vahed_title,
                    prs.company_name,
                    dep.c_hoze_title,
                    prs.education_level_title,
                    prs.first_name,
                    prs.job_no,
                    prs.job_title,
                    prs.last_name,
                    prs.national_code,
                    prs.emp_no,
                    prs.post_code,
                    prs.post_grade_code,
                    prs.post_grade_title,
                    prs.post_title,
                    prs.f_post_id,
                    p.f_post_grade_id,
                    prs.f_department_id
                UNION ALL
                SELECT
                    6 AS priority,
                    MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                    course.id                   AS course_id,
                    course.c_code               AS course_code,
                    course.c_title_fa           AS course_title_fa,
                    course.n_theory_duration    AS course_theory_duration,
                    course.e_technical_type     AS course_technical_type,
                    skill.id                    AS skill_id,
                    skill.c_code                AS skill_code,
                    skill.c_title_fa            AS skill_title_fa,
                    prs.personnel_no            AS personnel_personnel_no,
                    dep.c_omor_title            AS personnel_cpp_affairs,
                    dep.c_hoze_title            AS personnel_cpp_area,
                    dep.c_moavenat_title        AS personnel_cpp_assistant,
                    prs.ccp_code                AS personnel_cpp_code,
                    dep.c_ghesmat_title         AS personnel_cpp_section,
                    dep.c_title                 AS personnel_cpp_title,
                    dep.c_vahed_title           AS personnel_cpp_unit,
                    prs.company_name            AS personnel_company_name,
                    dep.c_hoze_title            AS personnel_complex_title,
                    prs.education_level_title   AS personnel_education_level_title,
                    prs.first_name              AS personnel_first_name,
                    prs.id                      AS personnel_id,
                    prs.job_no                  AS personnel_job_no,
                    prs.job_title               AS personnel_job_title,
                    prs.last_name               AS personnel_last_name,
                    prs.national_code           AS personnel_national_code,
                    prs.emp_no                  AS personnel_emp_no,
                    prs.post_code               AS personnel_post_code,
                    prs.post_grade_code         AS personnel_post_grade_code,
                    prs.post_grade_title        AS personnel_post_grade_title,
                    prs.post_title              AS personnel_post_title,
                    prs.f_post_id               AS personnel_post_id,
                    p.f_post_grade_id           AS personnel_post_grade_id,
                    prs.f_department_id         AS personnel_department_id
                FROM
                    (
                        SELECT
                            f_object,
                            f_skill,
                            f_parameter_value_needs_assessment_priority
                        FROM
                            tbl_needs_assessment
                        WHERE
                            c_object_type = 'JobGroup'
                            AND e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) na
                    INNER JOIN tbl_skill                skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course               course ON skill.f_course = course.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_job_group
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) jg ON na.f_object = jg.id
                    INNER JOIN tbl_job_jobgroup         jjg ON jg.id = jjg.f_jobgroup_id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_job
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) j ON jjg.f_job_id = j.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_training_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) tp ON tp.f_job_id = j.id
                    INNER JOIN tbl_post_training_post   ptp ON tp.id = ptp.f_training_post_id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) p ON ptp.f_post_id = p.id
                    INNER JOIN view_active_personnel    prs ON prs.f_post_id = p.id
                    LEFT JOIN tbl_department           dep ON dep.id = prs.f_department_id
                GROUP BY
                    prs.id,
                    course.id,
                    course.c_code,
                    course.c_title_fa,
                    course.n_theory_duration,
                    course.e_technical_type,
                    skill.id,
                    skill.c_code,
                    skill.c_title_fa,
                    prs.personnel_no,
                    dep.c_omor_title,
                    dep.c_hoze_title,
                    dep.c_moavenat_title,
                    prs.ccp_code,
                    dep.c_ghesmat_title,
                    dep.c_title,
                    dep.c_vahed_title,
                    prs.company_name,
                    dep.c_hoze_title,
                    prs.education_level_title,
                    prs.first_name,
                    prs.job_no,
                    prs.job_title,
                    prs.last_name,
                    prs.national_code,
                    prs.emp_no,
                    prs.post_code,
                    prs.post_grade_code,
                    prs.post_grade_title,
                    prs.post_title,
                    prs.f_post_id,
                    p.f_post_grade_id,
                    prs.f_department_id
                UNION ALL
                SELECT
                    7 AS priority,
                    MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                    course.id                   AS course_id,
                    course.c_code               AS course_code,
                    course.c_title_fa           AS course_title_fa,
                    course.n_theory_duration    AS course_theory_duration,
                    course.e_technical_type     AS course_technical_type,
                    skill.id                    AS skill_id,
                    skill.c_code                AS skill_code,
                    skill.c_title_fa            AS skill_title_fa,
                    prs.personnel_no            AS personnel_personnel_no,
                    dep.c_omor_title            AS personnel_cpp_affairs,
                    dep.c_hoze_title            AS personnel_cpp_area,
                    dep.c_moavenat_title        AS personnel_cpp_assistant,
                    prs.ccp_code                AS personnel_cpp_code,
                    dep.c_ghesmat_title         AS personnel_cpp_section,
                    dep.c_title                 AS personnel_cpp_title,
                    dep.c_vahed_title           AS personnel_cpp_unit,
                    prs.company_name            AS personnel_company_name,
                    dep.c_hoze_title            AS personnel_complex_title,
                    prs.education_level_title   AS personnel_education_level_title,
                    prs.first_name              AS personnel_first_name,
                    prs.id                      AS personnel_id,
                    prs.job_no                  AS personnel_job_no,
                    prs.job_title               AS personnel_job_title,
                    prs.last_name               AS personnel_last_name,
                    prs.national_code           AS personnel_national_code,
                    prs.emp_no                  AS personnel_emp_no,
                    prs.post_code               AS personnel_post_code,
                    prs.post_grade_code         AS personnel_post_grade_code,
                    prs.post_grade_title        AS personnel_post_grade_title,
                    prs.post_title              AS personnel_post_title,
                    prs.f_post_id               AS personnel_post_id,
                    p.f_post_grade_id           AS personnel_post_grade_id,
                    prs.f_department_id         AS personnel_department_id
                FROM
                    (
                        SELECT
                            f_object,
                            f_skill,
                            f_parameter_value_needs_assessment_priority
                        FROM
                            tbl_needs_assessment
                        WHERE
                            c_object_type = 'PostGrade'
                            AND e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) na
                    INNER JOIN tbl_skill                skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course               course ON skill.f_course = course.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post_grade
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) pg ON na.f_object = pg.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_training_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) tp ON tp.f_post_grade_id = pg.id
                    INNER JOIN tbl_post_training_post   ptp ON tp.id = ptp.f_training_post_id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) p ON ptp.f_post_id = p.id
                    INNER JOIN view_active_personnel    prs ON prs.f_post_id = p.id
                    LEFT JOIN tbl_department           dep ON dep.id = prs.f_department_id
                GROUP BY
                    prs.id,
                    course.id,
                    course.c_code,
                    course.c_title_fa,
                    course.n_theory_duration,
                    course.e_technical_type,
                    skill.id,
                    skill.c_code,
                    skill.c_title_fa,
                    prs.personnel_no,
                    dep.c_omor_title,
                    dep.c_hoze_title,
                    dep.c_moavenat_title,
                    prs.ccp_code,
                    dep.c_ghesmat_title,
                    dep.c_title,
                    dep.c_vahed_title,
                    prs.company_name,
                    dep.c_hoze_title,
                    prs.education_level_title,
                    prs.first_name,
                    prs.job_no,
                    prs.job_title,
                    prs.last_name,
                    prs.national_code,
                    prs.emp_no,
                    prs.post_code,
                    prs.post_grade_code,
                    prs.post_grade_title,
                    prs.post_title,
                    prs.f_post_id,
                    p.f_post_grade_id,
                    prs.f_department_id
                UNION ALL
                SELECT
                    8 AS priority,
                    MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                    course.id                   AS course_id,
                    course.c_code               AS course_code,
                    course.c_title_fa           AS course_title_fa,
                    course.n_theory_duration    AS course_theory_duration,
                    course.e_technical_type     AS course_technical_type,
                    skill.id                    AS skill_id,
                    skill.c_code                AS skill_code,
                    skill.c_title_fa            AS skill_title_fa,
                    prs.personnel_no            AS personnel_personnel_no,
                    dep.c_omor_title            AS personnel_cpp_affairs,
                    dep.c_hoze_title            AS personnel_cpp_area,
                    dep.c_moavenat_title        AS personnel_cpp_assistant,
                    prs.ccp_code                AS personnel_cpp_code,
                    dep.c_ghesmat_title         AS personnel_cpp_section,
                    dep.c_title                 AS personnel_cpp_title,
                    dep.c_vahed_title           AS personnel_cpp_unit,
                    prs.company_name            AS personnel_company_name,
                    dep.c_hoze_title            AS personnel_complex_title,
                    prs.education_level_title   AS personnel_education_level_title,
                    prs.first_name              AS personnel_first_name,
                    prs.id                      AS personnel_id,
                    prs.job_no                  AS personnel_job_no,
                    prs.job_title               AS personnel_job_title,
                    prs.last_name               AS personnel_last_name,
                    prs.national_code           AS personnel_national_code,
                    prs.emp_no                  AS personnel_emp_no,
                    prs.post_code               AS personnel_post_code,
                    prs.post_grade_code         AS personnel_post_grade_code,
                    prs.post_grade_title        AS personnel_post_grade_title,
                    prs.post_title              AS personnel_post_title,
                    prs.f_post_id               AS personnel_post_id,
                    p.f_post_grade_id           AS personnel_post_grade_id,
                    prs.f_department_id         AS personnel_department_id
                FROM
                    (
                        SELECT
                            f_object,
                            f_skill,
                            f_parameter_value_needs_assessment_priority
                        FROM
                            tbl_needs_assessment
                        WHERE
                            c_object_type = 'PostGradeGroup'
                            AND e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) na
                    INNER JOIN tbl_skill                         skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course                        course ON skill.f_course = course.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post_grade_group
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) pgg ON na.f_object = pgg.id
                    INNER JOIN tbl_post_grade_post_grade_group   pgpgg ON pgg.id = pgpgg.f_post_grade_group_id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post_grade
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) pg ON pgpgg.f_post_grade_id = pg.id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_training_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) tp ON tp.f_post_grade_id = pg.id
                    INNER JOIN tbl_post_training_post            ptp ON tp.id = ptp.f_training_post_id
                    INNER JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post
                        WHERE
                            e_deleted IS NULL
                            AND e_enabled IS NULL
                    ) p ON ptp.f_post_id = p.id
                    INNER JOIN view_active_personnel             prs ON prs.f_post_id = p.id
                    LEFT JOIN tbl_department                    dep ON dep.id = prs.f_department_id
                GROUP BY
                    prs.id,
                    course.id,
                    course.c_code,
                    course.c_title_fa,
                    course.n_theory_duration,
                    course.e_technical_type,
                    skill.id,
                    skill.c_code,
                    skill.c_title_fa,
                    prs.personnel_no,
                    dep.c_omor_title,
                    dep.c_hoze_title,
                    dep.c_moavenat_title,
                    prs.ccp_code,
                    dep.c_ghesmat_title,
                    dep.c_title,
                    dep.c_vahed_title,
                    prs.company_name,
                    dep.c_hoze_title,
                    prs.education_level_title,
                    prs.first_name,
                    prs.job_no,
                    prs.job_title,
                    prs.last_name,
                    prs.national_code,
                    prs.emp_no,
                    prs.post_code,
                    prs.post_grade_code,
                    prs.post_grade_title,
                    prs.post_title,
                    prs.f_post_id,
                    p.f_post_grade_id,
                    prs.f_department_id
            )
            SELECT
                mod(MIN(10 * priority + na_priority_id - 111), 10) + 111 AS na_priority_id,
                course_id,
                course_code,
                course_title_fa,
                course_theory_duration,
                course_technical_type,
                skill_id,
                skill_code,
                skill_title_fa,
                personnel_personnel_no,
                personnel_cpp_affairs,
                personnel_cpp_area,
                personnel_cpp_assistant,
                personnel_cpp_code,
                personnel_cpp_section,
                personnel_cpp_title,
                personnel_cpp_unit,
                personnel_company_name,
                personnel_complex_title,
                personnel_education_level_title,
                personnel_first_name,
                personnel_id,
                personnel_job_no,
                personnel_job_title,
                personnel_last_name,
                personnel_national_code,
                personnel_emp_no,
                personnel_post_code,
                personnel_post_grade_code,
                personnel_post_grade_title,
                personnel_post_title,
                personnel_post_id,
                personnel_post_grade_id,
                personnel_department_id
            FROM
                result r
            GROUP BY
                course_id,
                course_code,
                course_title_fa,
                course_theory_duration,
                course_technical_type,
                skill_id,
                skill_code,
                skill_title_fa,
                personnel_personnel_no,
                personnel_cpp_affairs,
                personnel_cpp_area,
                personnel_cpp_assistant,
                personnel_cpp_code,
                personnel_cpp_section,
                personnel_cpp_title,
                personnel_cpp_unit,
                personnel_company_name,
                personnel_complex_title,
                personnel_education_level_title,
                personnel_first_name,
                personnel_id,
                personnel_job_no,
                personnel_job_title,
                personnel_last_name,
                personnel_national_code,
                personnel_emp_no,
                personnel_post_code,
                personnel_post_grade_code,
                personnel_post_grade_title,
                personnel_post_title,
                personnel_post_id,
                personnel_post_grade_id,
                personnel_department_id
    			]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_TRAINING_FILE_NA_REPORT-004">
        <createView viewName="VIEW_TRAINING_FILE_NA_REPORT" replaceIfExists="true">
            <![CDATA[
                SELECT
                    ROWNUM AS id,
                    nvl(passed.personnel_id, na.personnel_id) AS personnel_id,
                    nvl(passed.course_id, na.course_id) AS course_id,
                    nvl(passed.course_code, na.course_code) AS course_code,
                    nvl(passed.course_title_fa, na.course_title_fa) AS course_title_fa,
                    nvl(passed.course_theory_duration, na.course_theory_duration) AS course_theory_duration,
                    nvl(passed.course_technical_type, na.course_technical_type) AS course_technical_type,
                    na.skill_id,
                    na.skill_code,
                    na.skill_title_fa,
                    nvl2(na.na_priority_id, 1, 0) is_in_na,
                    na.na_priority_id,
                    na_priority.c_title    AS na_priority_title,
                    passed.class_id,
                    passed.class_code,
                    passed.class_start_date,
                    passed.class_end_date,
                    passed.class_student_score,
                    passed.class_student_scores_state_id,
                    score_state.c_title    AS class_student_scores_state_title,
                    institute.c_title_fa   AS class_location
                FROM
                    view_student_classstudent_class_term_course   passed
                    FULL JOIN view_personnel_course_skill_na_report         na ON na.personnel_id = passed.personnel_id
                                                                                      AND na.course_id = passed.course_id
                    LEFT JOIN tbl_institute                                 institute ON institute.id = passed.class_institute
                    LEFT JOIN tbl_parameter_value                                       na_priority ON na_priority.id = na.na_priority_id
                    LEFT JOIN tbl_parameter_value                                       score_state ON score_state.id = passed.class_student_scores_state_id
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_PERSONNEL_DURATION_NA_REPORT-003">
        <createView viewName="VIEW_PERSONNEL_DURATION_NA_REPORT" replaceIfExists="true">
            <![CDATA[
                SELECT
                    prs.id AS personnel_id,
                    NVL(SUM(CASE WHEN na_passed.na_priority_id = 111 THEN course.n_theory_duration ELSE 0 END),0) AS essential,
                    NVL(SUM(CASE WHEN na_passed.na_priority_id = 111 and na_passed.is_passed = 216 THEN course.n_theory_duration ELSE 0 END),0) AS essential_passed,
                    NVL(SUM(CASE WHEN na_passed.na_priority_id = 112 THEN course.n_theory_duration ELSE 0 END),0) AS improving,
                    NVL(SUM(CASE WHEN na_passed.na_priority_id = 112 and na_passed.is_passed = 216 THEN course.n_theory_duration ELSE 0 END),0) AS improving_passed,
                    NVL(SUM(CASE WHEN na_passed.na_priority_id = 113 THEN course.n_theory_duration ELSE 0 END),0) AS developmental,
                    NVL(SUM(CASE WHEN na_passed.na_priority_id = 113 and na_passed.is_passed = 216 THEN course.n_theory_duration ELSE 0 END),0) AS developmental_passed,
                    NVL(SUM(course.n_theory_duration),0) AS duration,
                    NVL(SUM(CASE WHEN na_passed.is_passed = 216 THEN course.n_theory_duration ELSE 0 END),0) AS passed
                FROM
                    VIEW_ACTIVE_PERSONNEL prs
                    LEFT JOIN view_personnel_course_passed_na_report   na_passed on na_passed.personnel_id = prs.id
                    LEFT JOIN tbl_course                    course ON course.id = na_passed.course_id
                GROUP BY
                    prs.id
            ]]>
        </createView>
    </changeSet>


    <changeSet author="NICICO" id="VIEW_STUDENTS_IN_CANCELED_CLASS_REPORT-001">
        <createView viewName="VIEW_STUDENTS_IN_CANCELED_CLASS_REPORT" replaceIfExists="true">
            <![CDATA[
SELECT
    DISTINCT
    std.emp_no             AS personalnum2,
    std.personnel_no       AS personalnum,
    personnel.first_name
    || ' '
    || personnel.last_name AS name,
    personnel.personeltype,
    personnel.national_code,
    dep.c_ghesmat_title    AS ccp_section,
    dep.c_vahed_title      AS ccp_unit,
    dep.c_omor_title       AS ccp_affairs,
    dep.c_moavenat_title   AS ccp_assistant,
    dep.c_hoze_title       AS complex_title,
    cls.c_code             AS class_code,
    crs.c_title_fa         AS class_title,
    cls.c_end_date         AS end_date,
    cls.c_start_date       AS start_date

FROM
    tbl_course  crs
    INNER JOIN (
        SELECT
            *
        FROM
            tbl_class
        WHERE
            tbl_class.c_status = '4'
    )   cls ON crs.id = cls.f_course
    INNER JOIN tbl_class_student    cls_std ON cls.id = cls_std.class_id
    INNER JOIN tbl_student  std ON std.id = cls_std.student_id
    INNER JOIN (
        SELECT
            CAST(view_active_personnel.p_type AS VARCHAR2(50)) personeltype,
            view_active_personnel.personnel_no,
            view_active_personnel.national_code,
            view_active_personnel.first_name,
            view_active_personnel.last_name,
            view_active_personnel.f_department_id
        FROM
            view_active_personnel
        UNION ALL
        SELECT
            CAST('personnel_registered' AS VARCHAR2(50)) personeltype,
            tbl_personnel_registered.personnel_no,
            tbl_personnel_registered.national_code,
            tbl_personnel_registered.first_name,
            tbl_personnel_registered.last_name,
            tbl_personnel_registered.f_department_id
        FROM
            tbl_personnel_registered
    ) personnel ON std.national_code = personnel.national_code
    LEFT JOIN tbl_department    dep ON dep.id = personnel.f_department_id
            ]]>
        </createView>
    </changeSet>


    <changeSet author="poursalehi_mos" id="VIEW_SKILL_NA-001">
        <createView viewName="VIEW_SKILL_NA" replaceIfExists="true">
            <![CDATA[
                SELECT
                    na.id                  AS id,
                    'Post' AS object_type,
                    p.id                   AS object_id,
                    p.c_code               AS object_code,
                    p.c_title_fa           AS object_name,
                    p.c_people_type        AS object_people_type,
                    p.e_enabled            AS object_enabled,
                    skill.id               AS skill_id,
                    skill.c_code           AS skill_code,
                    skill.c_title_fa       AS skill_title_fa,
                    course.id              AS course_id,
                    course.c_code          AS course_code,
                    course.c_title_fa      AS course_title_fa,
                    dep.c_omor_title       AS post_cpp_affairs,
                    dep.c_hoze_title       AS post_cpp_area,
                    dep.c_moavenat_title   AS post_cpp_assistant,
                    dep.c_ghesmat_title    AS post_cpp_section,
                    dep.c_title            AS post_cpp_title,
                    dep.c_vahed_title      AS post_cpp_unit,
                    dep.c_hoze_title       AS post_complex_title,
                    dep.id                 AS post_department_id
                FROM
                    tbl_needs_assessment   na
                    INNER JOIN tbl_skill              skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course             course ON skill.f_course = course.id
                    INNER JOIN tbl_post               p ON na.f_object = p.id
                                             AND na.c_object_type = 'Post'
                    LEFT JOIN tbl_department         dep ON dep.id = p.f_department_id
                WHERE
                    na.e_deleted IS NULL
                    AND na.e_enabled IS NULL
                    AND p.e_deleted IS NULL
                UNION ALL
                SELECT
                    na.id                  AS id,
                    'TrainingPost' AS object_type,
                    p.id                   AS object_id,
                    p.c_code               AS object_code,
                    p.c_title_fa           AS object_name,
                    p.c_people_type        AS object_people_type,
                    p.e_enabled            AS object_enabled,
                    skill.id               AS skill_id,
                    skill.c_code           AS skill_code,
                    skill.c_title_fa       AS skill_title_fa,
                    course.id              AS course_id,
                    course.c_code          AS course_code,
                    course.c_title_fa      AS course_title_fa,
                    dep.c_omor_title       AS post_cpp_affairs,
                    dep.c_hoze_title       AS post_cpp_area,
                    dep.c_moavenat_title   AS post_cpp_assistant,
                    dep.c_ghesmat_title    AS post_cpp_section,
                    dep.c_title            AS post_cpp_title,
                    dep.c_vahed_title      AS post_cpp_unit,
                    dep.c_hoze_title       AS post_complex_title,
                    dep.id                 AS post_department_id
                FROM
                    tbl_needs_assessment   na
                    INNER JOIN tbl_skill              skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course             course ON skill.f_course = course.id
                    INNER JOIN tbl_training_post      p ON na.f_object = p.id
                                                      AND na.c_object_type = 'TrainingPost'
                    LEFT JOIN tbl_department         dep ON dep.id = p.f_department_id
                WHERE
                    na.e_deleted IS NULL
                    AND na.e_enabled IS NULL
                    AND p.e_deleted IS NULL
                UNION ALL
                SELECT
                    na.id               AS id,
                    'PostGroup' AS object_type,
                    p.id                AS object_id,
                    p.c_code            AS object_code,
                    p.c_title_fa        AS object_name,
                    NULL AS object_people_type,
                    p.e_enabled         AS object_enabled,
                    skill.id            AS skill_id,
                    skill.c_code        AS skill_code,
                    skill.c_title_fa    AS skill_title_fa,
                    course.id           AS course_id,
                    course.c_code       AS course_code,
                    course.c_title_fa   AS course_title_fa,
                    NULL AS post_cpp_affairs,
                    NULL AS post_cpp_area,
                    NULL AS post_cpp_assistant,
                    NULL AS post_cpp_section,
                    NULL AS post_cpp_title,
                    NULL AS post_cpp_unit,
                    NULL AS post_complex_title,
                    NULL AS post_department_id
                FROM
                    tbl_needs_assessment   na
                    INNER JOIN tbl_skill              skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course             course ON skill.f_course = course.id
                    INNER JOIN tbl_post_group         p ON na.f_object = p.id
                                                   AND na.c_object_type = 'PostGroup'
                WHERE
                    na.e_deleted IS NULL
                    AND na.e_enabled IS NULL
                    AND p.e_deleted IS NULL
                UNION ALL
                SELECT
                    na.id               AS id,
                    'Job' AS object_type,
                    p.id                AS object_id,
                    p.c_code            AS object_code,
                    p.c_title_fa        AS object_name,
                    p.c_people_type     AS object_people_type,
                    p.e_enabled         AS object_enabled,
                    skill.id            AS skill_id,
                    skill.c_code        AS skill_code,
                    skill.c_title_fa    AS skill_title_fa,
                    course.id           AS course_id,
                    course.c_code       AS course_code,
                    course.c_title_fa   AS course_title_fa,
                    NULL AS post_cpp_affairs,
                    NULL AS post_cpp_area,
                    NULL AS post_cpp_assistant,
                    NULL AS post_cpp_section,
                    NULL AS post_cpp_title,
                    NULL AS post_cpp_unit,
                    NULL AS post_complex_title,
                    NULL AS post_department_id
                FROM
                    tbl_needs_assessment   na
                    INNER JOIN tbl_skill              skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course             course ON skill.f_course = course.id
                    INNER JOIN tbl_job                p ON na.f_object = p.id
                                            AND na.c_object_type = 'Job'
                WHERE
                    na.e_deleted IS NULL
                    AND na.e_enabled IS NULL
                    AND p.e_deleted IS NULL
                UNION ALL
                SELECT
                    na.id               AS id,
                    'JobGroup' AS object_people_type,
                    p.id                AS object_id,
                    p.c_code            AS object_code,
                    p.c_title_fa        AS object_name,
                    NULL AS people_type,
                    p.e_enabled         AS object_enabled,
                    skill.id            AS skill_id,
                    skill.c_code        AS skill_code,
                    skill.c_title_fa    AS skill_title_fa,
                    course.id           AS course_id,
                    course.c_code       AS course_code,
                    course.c_title_fa   AS course_title_fa,
                    NULL AS post_cpp_affairs,
                    NULL AS post_cpp_area,
                    NULL AS post_cpp_assistant,
                    NULL AS post_cpp_section,
                    NULL AS post_cpp_title,
                    NULL AS post_cpp_unit,
                    NULL AS post_complex_title,
                    NULL AS post_department_id
                FROM
                    tbl_needs_assessment   na
                    INNER JOIN tbl_skill              skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course             course ON skill.f_course = course.id
                    INNER JOIN tbl_job_group          p ON na.f_object = p.id
                                                  AND na.c_object_type = 'JobGroup'
                WHERE
                    na.e_deleted IS NULL
                    AND na.e_enabled IS NULL
                    AND p.e_deleted IS NULL
                UNION ALL
                SELECT
                    na.id               AS id,
                    'PostGrade' AS object_type,
                    p.id                AS object_id,
                    p.c_code            AS object_code,
                    p.c_title_fa        AS object_name,
                    p.c_people_type     AS object_people_type,
                    p.e_enabled         AS object_enabled,
                    skill.id            AS skill_id,
                    skill.c_code        AS skill_code,
                    skill.c_title_fa    AS skill_title_fa,
                    course.id           AS course_id,
                    course.c_code       AS course_code,
                    course.c_title_fa   AS course_title_fa,
                    NULL AS post_cpp_affairs,
                    NULL AS post_cpp_area,
                    NULL AS post_cpp_assistant,
                    NULL AS post_cpp_section,
                    NULL AS post_cpp_title,
                    NULL AS post_cpp_unit,
                    NULL AS post_complex_title,
                    NULL AS post_department_id
                FROM
                    tbl_needs_assessment   na
                    INNER JOIN tbl_skill              skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course             course ON skill.f_course = course.id
                    INNER JOIN tbl_post_grade         p ON na.f_object = p.id
                                                   AND na.c_object_type = 'PostGrade'
                WHERE
                    na.e_deleted IS NULL
                    AND na.e_enabled IS NULL
                    AND p.e_deleted IS NULL
                UNION ALL
                SELECT
                    na.id               AS id,
                    'PostGradeGroup' AS object_people_type,
                    p.id                AS object_id,
                    p.c_code            AS object_code,
                    p.c_title_fa        AS object_name,
                    NULL AS people_type,
                    p.e_enabled         AS object_enabled,
                    skill.id            AS skill_id,
                    skill.c_code        AS skill_code,
                    skill.c_title_fa    AS skill_title_fa,
                    course.id           AS course_id,
                    course.c_code       AS course_code,
                    course.c_title_fa   AS course_title_fa,
                    NULL AS post_cpp_affairs,
                    NULL AS post_cpp_area,
                    NULL AS post_cpp_assistant,
                    NULL AS post_cpp_section,
                    NULL AS post_cpp_title,
                    NULL AS post_cpp_unit,
                    NULL AS post_complex_title,
                    NULL AS post_department_id
                FROM
                    tbl_needs_assessment   na
                    INNER JOIN tbl_skill              skill ON na.f_skill = skill.id
                    INNER JOIN tbl_course             course ON skill.f_course = course.id
                    INNER JOIN tbl_post_grade_group   p ON na.f_object = p.id
                                                         AND na.c_object_type = 'PostGradeGroup'
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_COMPLEX-001">
        <createView viewName="VIEW_COMPLEX" replaceIfExists="true">
            <![CDATA[
                SELECT
                    "ID",
                    "C_CODE",
                    "N_VERSION",
                    "C_ALIGNMENT",
                    "C_CORRECTION",
                    "C_CREATED_BY",
                    "C_END_DATE",
                    "C_GHESMAT_CODE",
                    "C_GHESMAT_TITLE",
                    "C_HOZE_CODE",
                    "C_HOZE_TITLE",
                    "C_ISSUABLE",
                    "C_LAST_MODIFIED_BY",
                    "C_LEGACY_CHANGE_DATE",
                    "C_LEGACY_CREATE_DATE",
                    "C_MOAVENAT_CODE",
                    "C_MOAVENAT_TITLE",
                    "C_NATURE",
                    "C_NEW_CODE",
                    "C_OLD_CODE",
                    "C_OMOR_CODE",
                    "C_OMOR_TITLE",
                    "C_PARENT_CODE",
                    "C_PEOPLE_TYPE",
                    "C_START_DATE",
                    "C_TITLE",
                    "C_TITLE_L",
                    "C_TYPE",
                    "C_USER",
                    "C_VAHED_CODE",
                    "C_VAHED_TITLE",
                    "D_CREATED_DATE",
                    "D_LAST_MODIFIED_DATE",
                    "E_DELETED",
                    "E_ENABLED",
                    "F_PARENT",
                    "C_MOJTAME_CODE",
                    "C_MOJTAME_TITLE"
                FROM
                    tbl_department dp
                WHERE
                    dp.c_code LIKE '1%000000000'
                    AND length(dp.c_code) = 12
                    AND dp.e_deleted IS NULL
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_ASSISTANT-001">
        <createView viewName="VIEW_ASSISTANT" replaceIfExists="true">
            <![CDATA[
                SELECT
                    "ID",
                    "C_CODE",
                    "N_VERSION",
                    "C_ALIGNMENT",
                    "C_CORRECTION",
                    "C_CREATED_BY",
                    "C_END_DATE",
                    "C_GHESMAT_CODE",
                    "C_GHESMAT_TITLE",
                    "C_HOZE_CODE",
                    "C_HOZE_TITLE",
                    "C_ISSUABLE",
                    "C_LAST_MODIFIED_BY",
                    "C_LEGACY_CHANGE_DATE",
                    "C_LEGACY_CREATE_DATE",
                    "C_MOAVENAT_CODE",
                    "C_MOAVENAT_TITLE",
                    "C_NATURE",
                    "C_NEW_CODE",
                    "C_OLD_CODE",
                    "C_OMOR_CODE",
                    "C_OMOR_TITLE",
                    "C_PARENT_CODE",
                    "C_PEOPLE_TYPE",
                    "C_START_DATE",
                    "C_TITLE",
                    "C_TITLE_L",
                    "C_TYPE",
                    "C_USER",
                    "C_VAHED_CODE",
                    "C_VAHED_TITLE",
                    "D_CREATED_DATE",
                    "D_LAST_MODIFIED_DATE",
                    "E_DELETED",
                    "E_ENABLED",
                    "F_PARENT",
                    "C_MOJTAME_CODE",
                    "C_MOJTAME_TITLE"
                FROM
                    tbl_department dp
                WHERE
                    dp.c_code LIKE '1%0000000'
                    AND dp.c_code NOT LIKE '1%000000000'
                    AND length(dp.c_code) = 12
                    AND dp.e_deleted IS NULL
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_AFFAIRS-001">
        <createView viewName="VIEW_AFFAIRS" replaceIfExists="true">
            <![CDATA[
                SELECT
                    "ID",
                    "C_CODE",
                    "N_VERSION",
                    "C_ALIGNMENT",
                    "C_CORRECTION",
                    "C_CREATED_BY",
                    "C_END_DATE",
                    "C_GHESMAT_CODE",
                    "C_GHESMAT_TITLE",
                    "C_HOZE_CODE",
                    "C_HOZE_TITLE",
                    "C_ISSUABLE",
                    "C_LAST_MODIFIED_BY",
                    "C_LEGACY_CHANGE_DATE",
                    "C_LEGACY_CREATE_DATE",
                    "C_MOAVENAT_CODE",
                    "C_MOAVENAT_TITLE",
                    "C_NATURE",
                    "C_NEW_CODE",
                    "C_OLD_CODE",
                    "C_OMOR_CODE",
                    "C_OMOR_TITLE",
                    "C_PARENT_CODE",
                    "C_PEOPLE_TYPE",
                    "C_START_DATE",
                    "C_TITLE",
                    "C_TITLE_L",
                    "C_TYPE",
                    "C_USER",
                    "C_VAHED_CODE",
                    "C_VAHED_TITLE",
                    "D_CREATED_DATE",
                    "D_LAST_MODIFIED_DATE",
                    "E_DELETED",
                    "E_ENABLED",
                    "F_PARENT",
                    "C_MOJTAME_CODE",
                    "C_MOJTAME_TITLE"
                FROM
                    tbl_department dp
                WHERE
                    dp.c_code LIKE '1%00000'
                    AND dp.c_code NOT LIKE '1%0000000'
                    AND length(dp.c_code) = 12
                    AND dp.e_deleted IS NULL
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_SECTION-001">
        <createView viewName="VIEW_SECTION" replaceIfExists="true">
            <![CDATA[
                SELECT
                    "ID",
                    "C_CODE",
                    "N_VERSION",
                    "C_ALIGNMENT",
                    "C_CORRECTION",
                    "C_CREATED_BY",
                    "C_END_DATE",
                    "C_GHESMAT_CODE",
                    "C_GHESMAT_TITLE",
                    "C_HOZE_CODE",
                    "C_HOZE_TITLE",
                    "C_ISSUABLE",
                    "C_LAST_MODIFIED_BY",
                    "C_LEGACY_CHANGE_DATE",
                    "C_LEGACY_CREATE_DATE",
                    "C_MOAVENAT_CODE",
                    "C_MOAVENAT_TITLE",
                    "C_NATURE",
                    "C_NEW_CODE",
                    "C_OLD_CODE",
                    "C_OMOR_CODE",
                    "C_OMOR_TITLE",
                    "C_PARENT_CODE",
                    "C_PEOPLE_TYPE",
                    "C_START_DATE",
                    "C_TITLE",
                    "C_TITLE_L",
                    "C_TYPE",
                    "C_USER",
                    "C_VAHED_CODE",
                    "C_VAHED_TITLE",
                    "D_CREATED_DATE",
                    "D_LAST_MODIFIED_DATE",
                    "E_DELETED",
                    "E_ENABLED",
                    "F_PARENT",
                    "C_MOJTAME_CODE",
                    "C_MOJTAME_TITLE"
                FROM
                    tbl_department dp
                WHERE
                    dp.c_code LIKE '1%000'
                    AND dp.c_code NOT LIKE '1%00000'
                    AND length(dp.c_code) = 12
                    AND dp.e_deleted IS NULL
            ]]>
        </createView>
    </changeSet>

    <changeSet author="NICICO" id="VIEW_UNIT-001">
        <createView viewName="VIEW_UNIT" replaceIfExists="true">
            <![CDATA[
                SELECT
                    "ID",
                    "C_CODE",
                    "N_VERSION",
                    "C_ALIGNMENT",
                    "C_CORRECTION",
                    "C_CREATED_BY",
                    "C_END_DATE",
                    "C_GHESMAT_CODE",
                    "C_GHESMAT_TITLE",
                    "C_HOZE_CODE",
                    "C_HOZE_TITLE",
                    "C_ISSUABLE",
                    "C_LAST_MODIFIED_BY",
                    "C_LEGACY_CHANGE_DATE",
                    "C_LEGACY_CREATE_DATE",
                    "C_MOAVENAT_CODE",
                    "C_MOAVENAT_TITLE",
                    "C_NATURE",
                    "C_NEW_CODE",
                    "C_OLD_CODE",
                    "C_OMOR_CODE",
                    "C_OMOR_TITLE",
                    "C_PARENT_CODE",
                    "C_PEOPLE_TYPE",
                    "C_START_DATE",
                    "C_TITLE",
                    "C_TITLE_L",
                    "C_TYPE",
                    "C_USER",
                    "C_VAHED_CODE",
                    "C_VAHED_TITLE",
                    "D_CREATED_DATE",
                    "D_LAST_MODIFIED_DATE",
                    "E_DELETED",
                    "E_ENABLED",
                    "F_PARENT",
                    "C_MOJTAME_CODE",
                    "C_MOJTAME_TITLE"
                FROM
                    tbl_department dp
                WHERE
                    dp.c_code NOT LIKE '1%000'
                    AND length(dp.c_code) = 12
                    AND dp.e_deleted IS NULL
            ]]>
        </createView>
    </changeSet>
    <changeSet author="NICICO" id="1611752352587-617">
        <createView viewName="VIEW_TRAINING_OVER_TIME_REPORT" replaceIfExists="true">
            <![CDATA[
SELECT
        atten.personalnum,
        atten.personalnum2,
        atten.nationalcode,
        atten.name,
        atten.ccparea,
        atten.ccpaffairs,
        atten.peopletype,
        atten.classcode,
        atten.classname,
        atten.c_session_date,
        atten.planner_complex,
        atten.planner_name,
        atten.institute_name,
        CASE
            WHEN atten.time >= 360 THEN
                floor((atten.time + 120) / 60)
                || (
                    CASE
                        WHEN mod(atten.time + 120, 60) <> 0 THEN
                            ':'
                            || mod(atten.time + 120, 60)
                    END
                )
            ELSE
                floor(atten.time / 60)
                || (
                    CASE
                        WHEN mod(atten.time, 60) <> 0 THEN
                            ':'
                            || mod(atten.time, 60)
                    END
                )
        END time
    FROM
        (
            SELECT DISTINCT
                std.personnel_no         AS personalnum,
                std.emp_no               AS personalnum2,
                std.national_code        AS nationalcode,
                std.first_name
                || ' '
                   || std.last_name AS name,
                dep.c_hoze_title         AS ccparea,
                dep.c_omor_title         AS ccpaffairs,
                personnel.personeltype   AS peopletype,
                class.c_code             AS classcode,
                class.c_title_class      AS classname,
                csession.c_session_date,
                plnner_dep.c_hoze_title                                                    as planner_complex,
                CONCAT(CONCAT(personelPlanner.FIRST_NAME, ' '), personelPlanner.LAST_NAME) as planner_name,
                organizer_ins.C_TITLE_FA                                                   as institute_name,
                SUM((to_number(substr(csession.c_session_end_hour, 1, 2)) * 60 + to_number(substr(csession.c_session_end_hour, 4,
                2))) -(to_number(substr(csession.c_session_start_hour, 1, 2)) * 60 + to_number(substr(csession.c_session_start_hour
                , 4, 2)))) AS time
            FROM
                tbl_attendance   att
                INNER JOIN tbl_student      std ON att.f_student = std.id
                INNER JOIN (
                    SELECT
                        CAST("P_TYPE" AS VARCHAR2(50)) personeltype,
                        "PERSONNEL_NO",
                        national_code,
                        first_name,
                        last_name,
                        f_department_id
                    FROM
                        view_active_personnel
                    UNION ALL
                    SELECT
                        CAST('personnel_registered' AS VARCHAR2(50)) personeltype,
                        "PERSONNEL_NO",
                        national_code,
                        first_name,
                        last_name,
                        f_department_id
                    FROM
                        tbl_personnel_registered
                ) personnel ON std.national_code = personnel.national_code
                LEFT JOIN tbl_department   dep ON dep.id = personnel.f_department_id
                INNER JOIN tbl_session      csession ON att.f_session = csession.id
                INNER JOIN tbl_class        class ON csession.f_class_id = class.id
                LEFT JOIN tbl_personnel personelPlanner on personelPlanner.id = class.f_planner
                LEFT JOIN tbl_department plnner_dep on plnner_dep.id = personelPlanner.f_department_id
                LEFT JOIN TBL_INSTITUTE organizer_ins on class.F_INSTITUTE_ORGANIZER = organizer_ins.ID
            WHERE
                att.c_state = '2'
            GROUP BY
                std.personnel_no,
                std.emp_no,
                std.national_code,
                std.first_name
                || ' '
                   || std.last_name,
                dep.c_hoze_title,
                dep.c_omor_title,
                personnel.personeltype,
                class.c_code,
                class.c_title_class,
                csession.c_session_date,
                plnner_dep.c_hoze_title,
                personelPlanner.FIRST_NAME,
                personelPlanner.LAST_NAME,
                organizer_ins.C_TITLE_FA
        ) atten
            ]]>
        </createView>
    </changeSet>

    <changeSet author="nick (generated)" id="1611985664505-564">
        <createView viewName="VIEW_ATTENDANCE_REPORT" replaceIfExists="true">
            <![CDATA[
                SELECT atten.personalnum,
                   atten.personalnum2,
                   atten.nationalcode,
                   atten.name,
                   atten.ccparea,
                   atten.ccpaffairs,
                   atten.peopleType,
                   atten.classcode,
                   atten.classname,
                   atten.c_session_date,
                   atten.c_state,
                   atten.planner_complex,
                   atten.planner_name,
                   atten.institute_name,
                   case
                       when atten.time >= 360 then
                               FLOOR((atten.time + 120) / 60) ||
                               (CASE WHEN MOD(atten.time + 120, 60) <> 0 THEN ':' || MOD(atten.time + 120, 60) END)
                       else
                               FLOOR(atten.time / 60) || (CASE WHEN MOD(atten.time, 60) <> 0 THEN ':' || MOD(atten.time, 60) END)
                       end time
                FROM (
                     SELECT distinct std.personnel_no                                                           AS personalnum,
                                     std.emp_no                                                                 AS personalnum2,
                                     std.national_code                                                          AS nationalcode,
                                     std.first_name || ' ' || std.last_name                                     AS name,
                                     dep.c_hoze_title                                                           AS ccparea,
                                     dep.c_omor_title                                                           AS ccpaffairs,
                                     personnel.personelType                                                     AS peopleType,
                                     class.c_code                                                               AS classcode,
                                     class.c_title_class                                                        AS classname,
                                     csession.c_session_date,
                                     att.c_state                                                                as c_state,
                                     plnner_dep.c_hoze_title                                                    as planner_complex,
                                     CONCAT(CONCAT(personnelPlanner.FIRST_NAME, ' '), personnelPlanner.LAST_NAME) as planner_name,
                                     organizer_ins.C_TITLE_FA                                                   as institute_name,
                                     SUM((TO_NUMBER(SUBSTR(csession.c_session_end_hour, 1, 2)) * 60 +
                                          TO_NUMBER(SUBSTR(csession.c_session_end_hour, 4, 2))) -
                                         (TO_NUMBER(SUBSTR(csession.c_session_start_hour, 1, 2)) * 60 +
                                          TO_NUMBER(SUBSTR(csession.c_session_start_hour, 4, 2))))              AS time
                     FROM tbl_attendance att
                              INNER JOIN tbl_student std ON att.f_student = std.id
                              INNER JOIN (
                         SELECT CAST("P_TYPE" AS VARCHAR2(50)) personelType,
                                "PERSONNEL_NO",
                                national_code,
                                first_name,
                                last_name,
                                f_department_id
                         from view_active_personnel
                         union all
                         SELECT CAST('personnel_registered' AS VARCHAR2(50)) personelType,
                                "PERSONNEL_NO",
                                national_code,
                                first_name,
                                last_name,
                                f_department_id
                         FROM tbl_personnel_registered
                     ) personnel ON std.national_code = personnel.national_code
                              LEFT JOIN tbl_department dep ON dep.id = personnel.f_department_id
                              INNER JOIN tbl_session csession ON att.f_session = csession.id
                              INNER JOIN tbl_class class ON csession.f_class_id = class.id
                              LEFT JOIN tbl_personnel personnelPlanner on personnelPlanner.id = class.f_planner
                              LEFT JOIN tbl_department plnner_dep on plnner_dep.id = personnelPlanner.f_department_id
                              LEFT JOIN TBL_INSTITUTE organizer_ins on class.F_INSTITUTE_ORGANIZER = organizer_ins.ID
                     GROUP BY std.personnel_no,
                              std.emp_no,
                              std.national_code,
                              std.first_name || ' ' || std.last_name,
                              dep.c_hoze_title,
                              dep.c_omor_title,
                              personnel.personelType,
                              class.c_code,
                              class.c_title_class,
                              csession.c_session_date,
                              att.c_state,
                              plnner_dep.c_hoze_title,
                              personnelPlanner.FIRST_NAME,
                              personnelPlanner.LAST_NAME,
                              organizer_ins.C_TITLE_FA
                 ) atten
            ]]>
        </createView>
    </changeSet>
    <changeSet author="nick (generated)" id="1612082458964-574">
        <createView viewName="VIEW_EVALUATION_STATICAL_REPORT" replaceIfExists="true">
            <![CDATA[
                SELECT rowNum                                                                     as id,
                       term.C_TITLE_FA                                                            as term_TitleFa,
                       personal.C_FIRST_NAME_FA                                                   as teacher_FirstName,
                       personal.C_LAST_NAME_FA                                                    as teacher_LastName,
                       CONCAT(CONCAT(personal.C_FIRST_NAME_FA, ' '), personal.C_LAST_NAME_FA)     as teacher_FullName,
                       tclass.N_H_DURATION                                                        as tclass_n_duration,
                       tclass.F_INSTITUTE_ORGANIZER                                               as tclass_organizer,
                       tclass.C_STATUS                                                            as tclass_status,
                       tclass.F_PLANNER                                                           as tclass_planner,
                       tclass.F_SUPERVISOR                                                        as tclass_supervisor,
                       tclass.c_created_by                                                        as c_created_by,
                       tclass.d_created_date                                                      as d_created_date,
                       tclass.e_deleted                                                           as e_deleted,
                       tclass.e_enabled                                                           as e_enabled,
                       tclass.c_last_modified_by                                                  as c_last_modified_by,
                       tclass.d_last_modified_date                                                as d_last_modified_date,
                       tclass.n_version                                                           as n_version,
                       tclass.ID                                                                  as tclass_id,
                       evaluationanalysis.ID                                                      as evaluationanalysis_id,
                       unit.ID                                                                    as unit_id,
                       tclass.C_CODE                                                              as tclass_c_code,
                       tclass.F_INSTITUTE                                                         as institute_id,
                       tclass.F_TEACHER                                                           as teacher_id,
                       tclass.F_TERM                                                              as term_id,
                       tclass.C_START_DATE                                                        as tclass_c_start_date,
                       tclass.C_END_DATE                                                          as tclass_c_end_date,
                       tclass.C_EVALUATION                                                        as tclass_evaluation,
                       tclass.c_teaching_type                                                     as tclass_teaching_type,
                       SUBSTR(tclass.C_START_DATE, 1, 4)                                          as tclass_year,
                       course.C_CODE                                                              as course_c_code,
                       course.CATEGORY_ID                                                         as course_category_id,
                       course.SUBCATEGORY_ID                                                      as course_subcategory_id,
                       course.C_TITLE_FA                                                          as course_c_title_fa,
                       course.C_EVALUATION                                                        as course_c_evaluation,
                       plnner_dep.c_hoze_title                                                    as planner_complex,
                       CONCAT(CONCAT(personelPlanner.FIRST_NAME, ' '), personelPlanner.LAST_NAME) as planner_name,
                       organizer_ins.C_TITLE_FA                                                   as institute_name,
                       CASE WHEN students.counts IS NULL THEN 0 ELSE students.counts END          AS tclass_students_count,
                       evaluationanalysis.C_BEHAVIORAL_GRADE                                      as evaluationanalysis_c_behavioral_grade,
                       evaluationanalysis.B_BEHAVIORAL_PASS                                       as evaluationanalysis_c_behavioral_pass,
                       evaluationanalysis.C_EFFECTIVENESS_GRADE                                   as evaluationanalysis_c_effectiveness_grade,
                       evaluationanalysis.B_EFFECTIVENESS_PASS                                    as evaluationanalysis_c_effectiveness_pass,
                       evaluationanalysis.C_LEARNING_GRADE                                        as evaluationanalysis_c_learning_grade,
                       evaluationanalysis.B_LEARNING_PASS                                         as evaluationanalysis_c_learning_pass,
                       evaluationanalysis.C_REACTION_GRADE                                        as evaluationanalysis_c_reaction_grade,
                       evaluationanalysis.B_REACTION_PASS                                         as evaluationanalysis_c_reaction_pass,
                       evaluationanalysis.C_RESULTS_GRADE                                         as evaluationanalysis_c_results_grade,
                       evaluationanalysis.B_RESULTS_PASS                                          as evaluationanalysis_c_results_pass,
                       evaluationanalysis.C_TEACHER_GRADE                                         as evaluationanalysis_c_teacher_grade,
                       evaluationanalysis.B_TEACHER_PASS                                          as evaluationanalysis_c_teacher_pass,
                       CASE WHEN evaluationanalysis.C_REACTION_GRADE IS NULL THEN 0 ELSE 1 END    as evaluationanalysis_b_reaction_status,
                       CASE WHEN evaluationanalysis.C_BEHAVIORAL_GRADE IS NULL THEN 0 ELSE 1 END  as evaluationanalysis_b_behavioral_status,
                       CASE WHEN evaluationanalysis.C_LEARNING_GRADE IS NULL THEN 0 ELSE 1 END    as evaluationanalysis_b_learning_status,
                       CASE WHEN evaluationanalysis.C_RESULTS_GRADE IS NULL THEN 0 ELSE 1 END     as evaluationanalysis_b_results_status,
                       CASE WHEN evaluationanalysis.C_TEACHER_GRADE IS NULL THEN 0 ELSE 1 END     as evaluationanalysis_b_teacher_status,
                       CASE
                           WHEN evaluationanalysis.C_EFFECTIVENESS_GRADE IS NULL THEN 0
                           ELSE 1 END                                                             as evaluationanalysis_b_effectiveness_status

                FROM TBL_CLASS tclass
                         INNER JOIN TBL_COURSE course
                                    ON tclass.F_COURSE = course.ID
                         LEFT JOIN TBL_TARGET_SOCIETY unit
                                   ON unit.F_CLASS_ID = tclass.ID
                         LEFT JOIN (SELECT TBL_CLASS_STUDENT.CLASS_ID,
                                           count(TBL_CLASS_STUDENT.ID) as counts
                                    FROM TBL_CLASS_STUDENT
                                    GROUP BY TBL_CLASS_STUDENT.CLASS_ID) students ON students.CLASS_ID = tclass.ID
                         LEFT JOIN TBL_EVALUATION_ANALYSIS evaluationanalysis
                                   ON evaluationanalysis.F_TCLASS = tclass.ID
                         INNER JOIN TBL_TERM term ON tclass.F_TERM = term.ID
                         INNER JOIN TBL_TEACHER teacher ON tclass.F_TEACHER = teacher.ID
                         LEFT JOIN TBL_PERSONAL_INFO personal ON teacher.F_PERSONALITY = personal.ID
                         LEFT JOIN tbl_personnel personelPlanner on personelPlanner.id = tclass.f_planner
                         LEFT JOIN tbl_department plnner_dep on plnner_dep.id = personelPlanner.f_department_id
                         LEFT JOIN TBL_INSTITUTE organizer_ins on tclass.F_INSTITUTE_ORGANIZER = organizer_ins.ID
    			]]>
        </createView>
    </changeSet>
    <changeSet author="namdari (generated)" id="1612160205578-566">
        <createView viewName="VIEW_ATTENDANCE_REPORT" replaceIfExists="true">
            <![CDATA[
                SELECT atten.personalnum,
                   atten.personalnum2,
                   atten.nationalcode,
                   atten.name,
                   atten.ccparea,
                   atten.ccpaffairs,
                   atten.peopleType,
                   atten.classcode,
                   atten.classname,
                   atten.c_session_date,
                   atten.c_state,
                   atten.planner_complex,
                   atten.planner_name,
                   atten.institute_name,
                   case
                       when atten.time >= 360 then
                               FLOOR((atten.time + 120) / 60) ||
                               (CASE WHEN MOD(atten.time + 120, 60) <> 0 THEN ':' || MOD(atten.time + 120, 60) END)
                       else
                               FLOOR(atten.time / 60) || (CASE WHEN MOD(atten.time, 60) <> 0 THEN ':' || MOD(atten.time, 60) END)
                       end time
                FROM (
                     SELECT distinct std.personnel_no                                                           AS personalnum,
                                     std.emp_no                                                                 AS personalnum2,
                                     std.national_code                                                          AS nationalcode,
                                     std.first_name || ' ' || std.last_name                                     AS name,
                                     dep.c_hoze_title                                                           AS ccparea,
                                     dep.c_omor_title                                                           AS ccpaffairs,
                                     personnel.personelType                                                     AS peopleType,
                                     class.c_code                                                               AS classcode,
                                     class.c_title_class                                                        AS classname,
                                     csession.c_session_date,
                                     att.c_state                                                                as c_state,
                                     plnner_dep.c_hoze_title                                                    as planner_complex,
                                     CONCAT(CONCAT(personnelPlanner.FIRST_NAME, ' '), personnelPlanner.LAST_NAME) as planner_name,
                                     organizer_ins.C_TITLE_FA                                                   as institute_name,
                                     SUM((TO_NUMBER(SUBSTR(csession.c_session_end_hour, 1, 2)) * 60 +
                                          TO_NUMBER(SUBSTR(csession.c_session_end_hour, 4, 2))) -
                                         (TO_NUMBER(SUBSTR(csession.c_session_start_hour, 1, 2)) * 60 +
                                          TO_NUMBER(SUBSTR(csession.c_session_start_hour, 4, 2))))              AS time
                     FROM tbl_attendance att
                              INNER JOIN tbl_student std ON att.f_student = std.id
                              INNER JOIN (
                         SELECT CAST("P_TYPE" AS VARCHAR2(50)) personelType,
                                "PERSONNEL_NO",
                                national_code,
                                first_name,
                                last_name,
                                f_department_id
                         from view_active_personnel
                         union all
                         SELECT CAST('personnel_registered' AS VARCHAR2(50)) personelType,
                                "PERSONNEL_NO",
                                national_code,
                                first_name,
                                last_name,
                                f_department_id
                         FROM tbl_personnel_registered
                     ) personnel ON std.national_code = personnel.national_code
                              LEFT JOIN tbl_department dep ON dep.id = personnel.f_department_id
                              INNER JOIN tbl_session csession ON att.f_session = csession.id
                              INNER JOIN tbl_class class ON csession.f_class_id = class.id
                              LEFT JOIN tbl_personnel personnelPlanner on personnelPlanner.id = class.f_planner
                              LEFT JOIN tbl_department plnner_dep on plnner_dep.id = personnelPlanner.f_department_id
                              LEFT JOIN TBL_INSTITUTE organizer_ins on class.F_INSTITUTE_ORGANIZER = organizer_ins.ID
                     GROUP BY std.personnel_no,
                              std.emp_no,
                              std.national_code,
                              std.first_name || ' ' || std.last_name,
                              dep.c_hoze_title,
                              dep.c_omor_title,
                              personnel.personelType,
                              class.c_code,
                              class.c_title_class,
                              csession.c_session_date,
                              att.c_state,
                              plnner_dep.c_hoze_title,
                              personnelPlanner.FIRST_NAME,
                              personnelPlanner.LAST_NAME,
                              organizer_ins.C_TITLE_FA
                 ) atten
            ]]>
        </createView>
    </changeSet>


    <changeSet author="namdari (generated)" id="1612162955854-620">
        <createView viewName="VIEW_TRAINING_NEED_ASSESSMENT" replaceIfExists="true">
            <![CDATA[
             SELECT DISTINCT
    tbl_course.id,
    tbl_course.c_code,
    tbl_course.c_title_fa,
    tbl_category.c_title_fa       AS c_title_fa1,
    tbl_sub_category.c_title_fa   AS c_title_fa2
FROM
    tbl_course
    INNER JOIN tbl_skill ON tbl_skill.f_course = tbl_course.id
    INNER JOIN tbl_needs_assessment ON tbl_needs_assessment.f_skill =tbl_skill.id
    INNER JOIN tbl_category ON tbl_category.id = tbl_course.category_id
    INNER JOIN tbl_sub_category ON tbl_sub_category.id = tbl_course.subcategory_id

            ]]>
        </createView>
    </changeSet>


    <changeSet author="namdari (generated)" id="1612162955854-585">
        <createView viewName="VIEW_NEED_ASSESSMENT_IN_RANGE_TIME" replaceIfExists="true">
            <![CDATA[
        SELECT "'پست'","C_CODE","C_TITLE_FA","NAME" FROM(
SELECT
    'پست',
    tp.c_code,
    tp.c_title_fa,
--   tp.d_last_modified_date_na,
    NVL2(p.last_name,p.first_name || p.last_name, tp.c_modified_by_na) as name
FROM
    tbl_training_post tp
    left join (select * from tbl_personnel where deleted = 0) p ON tp.c_modified_by_na = p.c_username
WHERE
    tp.c_modified_by_na IS NOT NULL

UNION ALL
SELECT
    'پست انفرادی',
    tp.c_code,
    tp.c_title_fa,
--    tp.d_last_modified_date_na,
    NVL2(p.last_name,p.first_name || p.last_name, tp.c_modified_by_na) as name
FROM
    tbl_post tp
    left join (select * from tbl_personnel where deleted = 0) p ON tp.c_modified_by_na = p.c_username
WHERE
    tp.c_modified_by_na IS NOT NULL
    )
ORDER BY
    name

            ]]>
        </createView>
    </changeSet>



    <changeSet author="namdari (generated)" id="1612168049786-620">
        <createView viewName="VIEW_TRAINING_NEED_ASSESSMENT" replaceIfExists="true">
            <![CDATA[
             SELECT DISTINCT
    tbl_course.id,
    tbl_course.category_id  As c_id,
    tbl_course.c_code,
    tbl_course.c_title_fa,
    tbl_category.c_title_fa       AS c_title_fa1,
    tbl_sub_category.c_title_fa   AS c_title_fa2
FROM
    tbl_course
    INNER JOIN tbl_skill ON tbl_skill.f_course = tbl_course.id
    INNER JOIN tbl_needs_assessment ON tbl_needs_assessment.f_skill =tbl_skill.id
    INNER JOIN tbl_category ON tbl_category.id = tbl_course.category_id
    INNER JOIN tbl_sub_category ON tbl_sub_category.id = tbl_course.subcategory_id

            ]]>
        </createView>
    </changeSet>


    <changeSet author="nick (generated)" id="1611998007552-602">
        <createView viewName="VIEW_STUDENT_CLASSSTUDENT_CLASS_TERM_COURSE" replaceIfExists="true">
            <![CDATA[
                SELECT
                    1 AS is_personnel,
                    tbl_student.id                             AS student_id,
                    tbl_student.active                         AS student_active,
                    department.c_omor_title                    AS student_cpp_affairs,
                    department.c_hoze_title                    AS student_cpp_area,
                    department.c_moavenat_title                AS student_cpp_assistant,
                    tbl_student.ccp_code                       AS student_cpp_code,
                    department.c_ghesmat_title                 AS student_cpp_section,
                    tbl_student.ccp_title                      AS student_cpp_title,
                    department.c_vahed_title                   AS student_cpp_unit,
                    tbl_student.company_name                   AS student_company_name,
                    department.c_hoze_title                    AS student_complex_title,
                    tbl_student.education_level_title          AS student_education_level_title,
                    tbl_student.first_name                     AS student_first_name,
                    tbl_student.job_no                         AS student_job_no,
                    tbl_student.job_title                      AS student_job_title,
                    tbl_student.last_name                      AS student_last_name,
                    tbl_student.national_code                  AS student_national_code,
                    tbl_student.personnel_no                   AS student_personnel_no,
                    tbl_student.emp_no                         AS student_emp_no,
                    tbl_student.post_code                      AS student_post_code,
                    tbl_student.post_grade_code                AS student_post_grade_code,
                    tbl_student.post_grade_title               AS student_post_grade_title,
                    tbl_student.post_title                     AS student_post_title,
                    prs.id                                     AS personnel_id,
                    prs.active                                 AS personnel_active,
                    department.c_omor_title                    AS personnel_cpp_affairs,
                    department.c_hoze_title                    AS personnel_cpp_area,
                    department.c_moavenat_title                AS personnel_cpp_assistant,
                    prs.ccp_code                               AS personnel_cpp_code,
                    department.c_ghesmat_title                 AS personnel_cpp_section,
                    prs.ccp_title                              AS personnel_cpp_title,
                    department.c_vahed_title                   AS personnel_cpp_unit,
                    prs.company_name                           AS personnel_company_name,
                    department.c_hoze_title                    AS personnel_complex_title,
                    prs.education_level_title                  AS personnel_education_level_title,
                    prs.first_name                             AS personnel_first_name,
                    prs.job_no                                 AS personnel_job_no,
                    prs.job_title                              AS personnel_job_title,
                    prs.last_name                              AS personnel_last_name,
                    prs.national_code                          AS personnel_national_code,
                    prs.personnel_no                           AS personnel_personnel_no,
                    prs.emp_no                                 AS personnel_emp_no,
                    prs.post_code                              AS personnel_post_code,
                    prs.post_grade_code                        AS personnel_post_grade_code,
                    prs.post_grade_title                       AS personnel_post_grade_title,
                    prs.post_title                             AS personnel_post_title,
                    prs.f_post_id                              AS personnel_post_id,
                    prs.f_department_id                        AS personnel_department_id,
                    tbl_term.c_code                            AS term_code,
                    tbl_term.c_title_fa                        AS term_title_fa,
                    tbl_term.id                                AS term_id,
                    tbl_class_student.id                       AS class_student_id,
                    tbl_class_student.applicant_company_name   AS class_student_applicant_company_name,
                    tbl_class_student.failure_reason_id        AS class_student_failure_reason_id,
                    tbl_class_student.presence_type_id         AS class_student_presence_type_id,
                    tbl_class_student.score                    AS class_student_score,
                    tbl_class_student.scores_state_id          AS class_student_scores_state_id,
                    class.id                                   AS class_id,
                    class.c_status                             AS class_status,
                    class.c_code                               AS class_code,
                    class.n_d_duration                         AS class_d_duration,
                    class.c_end_date                           AS class_end_date,
                    class.n_h_duration                         AS class_h_duration,
                    class.c_start_date                         AS class_start_date,
                    class.c_title_class                        AS class_title_class,
                    class.f_institute                          AS class_institute,
                    class.n_group                              AS class_group,
                    tbl_course.id                              AS course_id,
                    tbl_course.c_code                          AS course_code,
                    tbl_course.c_title_fa                      AS course_title_fa,
                    tbl_course.n_theory_duration               AS course_theory_duration,
                    tbl_course.e_technical_type                AS course_technical_type,
                    tbl_category.c_title_fa                    AS category_title_fa,
                    tbl_category.c_code                        AS category_code,
                    tbl_category.id                            AS category_id,
                    plnner_dep.c_hoze_title                                                    as planner_complex,
                    CONCAT(CONCAT(personelPlanner.FIRST_NAME, ' '), personelPlanner.LAST_NAME) as planner_name,
                    organizer_ins.C_TITLE_FA                                                   as institute_name
                FROM
                    tbl_student
                    INNER JOIN tbl_class_student ON tbl_student.id = tbl_class_student.student_id
                    INNER JOIN view_active_personnel   prs ON tbl_student.national_code = prs.national_code
                    LEFT JOIN tbl_department          department ON department.id = prs.f_department_id
                    INNER JOIN tbl_class class ON tbl_class_student.class_id = class.id
                    INNER JOIN tbl_term ON class.f_term = tbl_term.id
                    INNER JOIN tbl_course ON class.f_course = tbl_course.id
                    INNER JOIN tbl_category ON tbl_course.category_id = tbl_category.id
                    LEFT JOIN tbl_personnel personelPlanner on personelPlanner.id = class.f_planner
                    LEFT JOIN tbl_department plnner_dep on plnner_dep.id = personelPlanner.f_department_id
                    LEFT JOIN TBL_INSTITUTE organizer_ins on class.F_INSTITUTE_ORGANIZER = organizer_ins.ID
                UNION ALL
                SELECT
                    0 AS is_personnel,
                    tbl_student.id                                   AS student_id,
                    tbl_student.active                               AS student_active,
                    department.c_omor_title                          AS student_cpp_affairs,
                    department.c_hoze_title                          AS student_cpp_area,
                    department.c_moavenat_title                      AS student_cpp_assistant,
                    tbl_student.ccp_code                             AS student_cpp_code,
                    department.c_ghesmat_title                       AS student_cpp_section,
                    tbl_student.ccp_title                            AS student_cpp_title,
                    department.c_vahed_title                         AS student_cpp_unit,
                    tbl_student.company_name                         AS student_company_name,
                    department.c_hoze_title                          AS student_complex_title,
                    tbl_student.education_level_title                AS student_education_level_title,
                    tbl_student.first_name                           AS student_first_name,
                    tbl_student.job_no                               AS student_job_no,
                    tbl_student.job_title                            AS student_job_title,
                    tbl_student.last_name                            AS student_last_name,
                    tbl_student.national_code                        AS student_national_code,
                    tbl_student.personnel_no                         AS student_personnel_no,
                    tbl_student.emp_no                               AS student_emp_no,
                    tbl_student.post_code                            AS student_post_code,
                    tbl_student.post_grade_code                      AS student_post_grade_code,
                    tbl_student.post_grade_title                     AS student_post_grade_title,
                    tbl_student.post_title                           AS student_post_title,
                    tbl_personnel_registered.id                      AS personnel_id,
                    tbl_personnel_registered.active                  AS personnel_active,
                    department.c_omor_title                          AS personnel_cpp_affairs,
                    department.c_hoze_title                          AS personnel_cpp_area,
                    department.c_moavenat_title                      AS personnel_cpp_assistant,
                    tbl_personnel_registered.ccp_code                AS personnel_cpp_code,
                    department.c_ghesmat_title                       AS personnel_cpp_section,
                    tbl_personnel_registered.ccp_title               AS personnel_cpp_title,
                    department.c_vahed_title                         AS personnel_cpp_unit,
                    tbl_personnel_registered.company_name            AS personnel_company_name,
                    department.c_hoze_title                          AS personnel_complex_title,
                    tbl_personnel_registered.education_level_title   AS personnel_education_level_title,
                    tbl_personnel_registered.first_name              AS personnel_first_name,
                    tbl_personnel_registered.job_no                  AS personnel_job_no,
                    tbl_personnel_registered.job_title               AS personnel_job_title,
                    tbl_personnel_registered.last_name               AS personnel_last_name,
                    tbl_personnel_registered.national_code           AS personnel_national_code,
                    tbl_personnel_registered.personnel_no            AS personnel_personnel_no,
                    tbl_personnel_registered.emp_no                  AS personnel_emp_no,
                    tbl_personnel_registered.post_code               AS personnel_post_code,
                    tbl_personnel_registered.post_grade_code         AS personnel_post_grade_code,
                    tbl_personnel_registered.post_grade_title        AS personnel_post_grade_title,
                    tbl_personnel_registered.post_title              AS personnel_post_title,
                    tbl_personnel_registered.f_post_id               AS personnel_post_id,
                    tbl_personnel_registered.f_department_id         AS personnel_department_id,
                    tbl_term.c_code                                  AS term_code,
                    tbl_term.c_title_fa                              AS term_title_fa,
                    tbl_term.id                                      AS term_id,
                    tbl_class_student.id                             AS class_student_id,
                    tbl_class_student.applicant_company_name         AS class_student_applicant_company_name,
                    tbl_class_student.failure_reason_id              AS class_student_failure_reason_id,
                    tbl_class_student.presence_type_id               AS class_student_presence_type_id,
                    tbl_class_student.score                          AS class_student_score,
                    tbl_class_student.scores_state_id                AS class_student_scores_state_id,
                    class.id                                         AS class_id,
                    class.c_status                                   AS class_status,
                    class.c_code                                     AS class_code,
                    class.n_d_duration                               AS class_d_duration,
                    class.c_end_date                                 AS class_end_date,
                    class.n_h_duration                               AS class_h_duration,
                    class.c_start_date                               AS class_start_date,
                    class.c_title_class                              AS class_title_class,
                    class.f_institute                                AS class_institute,
                    class.n_group                                    AS class_group,
                    tbl_course.id                                    AS course_id,
                    tbl_course.c_code                                AS course_code,
                    tbl_course.c_title_fa                            AS course_title_fa,
                    tbl_course.n_theory_duration                     AS course_theory_duration,
                    tbl_course.e_technical_type                      AS course_technical_type,
                    tbl_category.c_title_fa                          AS category_title_fa,
                    tbl_category.c_code                              AS category_code,
                    tbl_category.id                                  AS category_id,
                    plnner_dep.c_hoze_title                                                    as planner_complex,
                    CONCAT(CONCAT(personelPlanner.FIRST_NAME, ' '), personelPlanner.LAST_NAME) as planner_name,
                    organizer_ins.C_TITLE_FA                                                   as institute_name
                FROM
                    tbl_student
                    INNER JOIN tbl_class_student ON tbl_student.id = tbl_class_student.student_id
                    INNER JOIN tbl_personnel_registered ON tbl_student.national_code = tbl_personnel_registered.national_code
                    LEFT JOIN tbl_department department ON department.id = tbl_personnel_registered.f_department_id
                    INNER JOIN tbl_class class ON tbl_class_student.class_id = class.id
                    INNER JOIN tbl_term ON class.f_term = tbl_term.id
                    INNER JOIN tbl_course ON class.f_course = tbl_course.id
                    INNER JOIN tbl_category ON tbl_course.category_id = tbl_category.id
                    LEFT JOIN tbl_personnel personelPlanner on personelPlanner.id = class.f_planner
                    LEFT JOIN tbl_department plnner_dep on plnner_dep.id = personelPlanner.f_department_id
                    LEFT JOIN TBL_INSTITUTE organizer_ins on class.F_INSTITUTE_ORGANIZER = organizer_ins.ID
    			]]>
        </createView>
    </changeSet>

    <changeSet author="namdari (generated)" id="1613550966165-585">
        <createView viewName="VIEW_NEED_ASSESSMENT_IN_RANGE_TIME" replaceIfExists="true">
            <![CDATA[
        SELECT "ID","POST","C_CODE","C_TITLE_FA","NAME","UPDATETIME" FROM(
SELECT
tp.id ,
     'پست' as post ,
    tp.c_code,
    tp.c_title_fa,
    tp.d_last_modified_date_na as updateTime,
    NVL2(p.last_name,p.first_name || p.last_name, tp.c_modified_by_na) as name
FROM
    tbl_training_post tp
    left join (select * from tbl_personnel where deleted = 0) p ON tp.c_modified_by_na = p.c_username
WHERE
    tp.c_modified_by_na IS NOT NULL

UNION ALL
SELECT
tp.id ,
    'پست انفرادی'  as post,
    tp.c_code,
    tp.c_title_fa,
    tp.d_last_modified_date_na as updateTime,
    NVL2(p.last_name,p.first_name || p.last_name, tp.c_modified_by_na) as name
FROM
    tbl_post tp
    left join (select * from tbl_personnel where deleted = 0) p ON tp.c_modified_by_na = p.c_username
WHERE
    tp.c_modified_by_na IS NOT NULL
    )
ORDER BY
    name

            ]]>
        </createView>
    </changeSet>

    <changeSet author="nick (generated)" id="1614061602308-581">
        <createView viewName="VIEW_EVALUATION_STATICAL_REPORT" replaceIfExists="true">
            <![CDATA[
                SELECT rowNum                                                                     as id,
                       term.C_TITLE_FA                                                            as term_TitleFa,
                       personal.C_FIRST_NAME_FA                                                   as teacher_FirstName,
                       personal.C_LAST_NAME_FA                                                    as teacher_LastName,
                       CONCAT(CONCAT(personal.C_FIRST_NAME_FA, ' '), personal.C_LAST_NAME_FA)     as teacher_FullName,
                       tclass.N_H_DURATION                                                        as tclass_n_duration,
                       tclass.F_INSTITUTE_ORGANIZER                                               as tclass_organizer,
                       tclass.C_STATUS                                                            as tclass_status,
                       tclass.f_cancel_class_reason                                               as class_cancel_reason_id,
                       parameterValue.C_TITLE                                                     as class_cancel_reason_title,
                       tclass.F_PLANNER                                                           as tclass_planner,
                       tclass.F_SUPERVISOR                                                        as tclass_supervisor,
                       tclass.c_created_by                                                        as c_created_by,
                       tclass.d_created_date                                                      as d_created_date,
                       tclass.e_deleted                                                           as e_deleted,
                       tclass.e_enabled                                                           as e_enabled,
                       tclass.c_last_modified_by                                                  as c_last_modified_by,
                       tclass.d_last_modified_date                                                as d_last_modified_date,
                       tclass.n_version                                                           as n_version,
                       tclass.ID                                                                  as tclass_id,
                       evaluationanalysis.ID                                                      as evaluationanalysis_id,
                       unit.ID                                                                    as unit_id,
                       tclass.C_CODE                                                              as tclass_c_code,
                       tclass.F_INSTITUTE                                                         as institute_id,
                       tclass.F_TEACHER                                                           as teacher_id,
                       tclass.F_TERM                                                              as term_id,
                       tclass.C_START_DATE                                                        as tclass_c_start_date,
                       tclass.C_END_DATE                                                          as tclass_c_end_date,
                       tclass.C_EVALUATION                                                        as tclass_evaluation,
                       tclass.c_teaching_type                                                     as tclass_teaching_type,
                       SUBSTR(tclass.C_START_DATE, 1, 4)                                          as tclass_year,
                       course.C_CODE                                                              as course_c_code,
                       course.CATEGORY_ID                                                         as course_category_id,
                       course.SUBCATEGORY_ID                                                      as course_subcategory_id,
                       course.C_TITLE_FA                                                          as course_c_title_fa,
                       course.C_EVALUATION                                                        as course_c_evaluation,
                       plnner_dep.c_hoze_title                                                    as planner_complex,
                       CONCAT(CONCAT(personelPlanner.FIRST_NAME, ' '), personelPlanner.LAST_NAME) as planner_name,
                       organizer_ins.C_TITLE_FA                                                   as institute_name,
                       CASE WHEN students.counts IS NULL THEN 0 ELSE students.counts END          AS tclass_students_count,
                       evaluationanalysis.C_BEHAVIORAL_GRADE                                      as evaluationanalysis_c_behavioral_grade,
                       evaluationanalysis.B_BEHAVIORAL_PASS                                       as evaluationanalysis_c_behavioral_pass,
                       evaluationanalysis.C_EFFECTIVENESS_GRADE                                   as evaluationanalysis_c_effectiveness_grade,
                       evaluationanalysis.B_EFFECTIVENESS_PASS                                    as evaluationanalysis_c_effectiveness_pass,
                       evaluationanalysis.C_LEARNING_GRADE                                        as evaluationanalysis_c_learning_grade,
                       evaluationanalysis.B_LEARNING_PASS                                         as evaluationanalysis_c_learning_pass,
                       evaluationanalysis.C_REACTION_GRADE                                        as evaluationanalysis_c_reaction_grade,
                       evaluationanalysis.B_REACTION_PASS                                         as evaluationanalysis_c_reaction_pass,
                       evaluationanalysis.C_RESULTS_GRADE                                         as evaluationanalysis_c_results_grade,
                       evaluationanalysis.B_RESULTS_PASS                                          as evaluationanalysis_c_results_pass,
                       evaluationanalysis.C_TEACHER_GRADE                                         as evaluationanalysis_c_teacher_grade,
                       evaluationanalysis.B_TEACHER_PASS                                          as evaluationanalysis_c_teacher_pass,
                       CASE WHEN evaluationanalysis.C_REACTION_GRADE IS NULL THEN 0 ELSE 1 END    as evaluationanalysis_b_reaction_status,
                       CASE WHEN evaluationanalysis.C_BEHAVIORAL_GRADE IS NULL THEN 0 ELSE 1 END  as evaluationanalysis_b_behavioral_status,
                       CASE WHEN evaluationanalysis.C_LEARNING_GRADE IS NULL THEN 0 ELSE 1 END    as evaluationanalysis_b_learning_status,
                       CASE WHEN evaluationanalysis.C_RESULTS_GRADE IS NULL THEN 0 ELSE 1 END     as evaluationanalysis_b_results_status,
                       CASE WHEN evaluationanalysis.C_TEACHER_GRADE IS NULL THEN 0 ELSE 1 END     as evaluationanalysis_b_teacher_status,
                       CASE
                           WHEN evaluationanalysis.C_EFFECTIVENESS_GRADE IS NULL THEN 0
                           ELSE 1 END                                                             as evaluationanalysis_b_effectiveness_status

                FROM TBL_CLASS tclass
                         INNER JOIN TBL_COURSE course
                                    ON tclass.F_COURSE = course.ID
                         LEFT JOIN TBL_TARGET_SOCIETY unit
                                   ON unit.F_CLASS_ID = tclass.ID
                         LEFT JOIN (SELECT TBL_CLASS_STUDENT.CLASS_ID,
                                           count(TBL_CLASS_STUDENT.ID) as counts
                                    FROM TBL_CLASS_STUDENT
                                    GROUP BY TBL_CLASS_STUDENT.CLASS_ID) students ON students.CLASS_ID = tclass.ID
                         LEFT JOIN TBL_EVALUATION_ANALYSIS evaluationanalysis
                                   ON evaluationanalysis.F_TCLASS = tclass.ID
                         INNER JOIN TBL_TERM term ON tclass.F_TERM = term.ID
                         INNER JOIN TBL_TEACHER teacher ON tclass.F_TEACHER = teacher.ID
                         LEFT JOIN TBL_PERSONAL_INFO personal ON teacher.F_PERSONALITY = personal.ID
                         LEFT JOIN tbl_personnel personelPlanner on personelPlanner.id = tclass.f_planner
                         LEFT JOIN tbl_department plnner_dep on plnner_dep.id = personelPlanner.f_department_id
                         LEFT JOIN TBL_INSTITUTE organizer_ins on tclass.F_INSTITUTE_ORGANIZER = organizer_ins.ID
                         LEFT JOIN TBL_PARAMETER_VALUE parameterValue on tclass.f_cancel_class_reason = parameterValue.ID
    			]]>
        </createView>
    </changeSet>

    <changeSet author="zare" id="abiz-001">
        <createView viewName="VIEW_NEED_ASSESSMENT_IN_RANGE_TIME" replaceIfExists="true">
            <![CDATA[
        SELECT "ID","POST","C_CODE","C_TITLE_FA","NAME","UPDATETIME","N_VERSION" FROM(
SELECT
tp.id ,
     'پست' as post ,
    tp.c_code,
    tp.c_title_fa,
    tp.d_last_modified_date_na as updateTime,
    NVL2(p.last_name,p.first_name || p.last_name, tp.c_modified_by_na) as name,
    tp.N_VERSION
FROM
    tbl_training_post tp
    left join (select * from tbl_personnel where deleted = 0) p ON tp.c_modified_by_na = p.c_username
WHERE
    tp.c_modified_by_na IS NOT NULL

UNION ALL
SELECT
tp.id ,
    'پست انفرادی'  as post,
    tp.c_code,
    tp.c_title_fa,
    tp.d_last_modified_date_na as updateTime,
    NVL2(p.last_name,p.first_name || p.last_name, tp.c_modified_by_na) as name,
    tp.N_VERSION
FROM
    tbl_post tp
    left join (select * from tbl_personnel where deleted = 0) p ON tp.c_modified_by_na = p.c_username
WHERE
    tp.c_modified_by_na IS NOT NULL
    )
ORDER BY
    name
            ]]>
        </createView>
    </changeSet>

    <changeSet author="MShahabi" id="1799887766557-001">
        <createView viewName="VIEW_TRAINING_FILE_NA_REPORT" replaceIfExists="true">
            <![CDATA[
                SELECT
                    ROWNUM AS id,
                    nvl(passed.personnel_id, na.personnel_id) AS personnel_id,
                    nvl(passed.course_id, na.course_id) AS course_id,
                    nvl(passed.course_code, na.course_code) AS course_code,
                    nvl(passed.course_title_fa, na.course_title_fa) AS course_title_fa,
                    nvl(passed.course_theory_duration, na.course_theory_duration) AS course_theory_duration,
                    nvl(passed.course_technical_type, na.course_technical_type) AS course_technical_type,
                    0 AS reference_course,
                    na.skill_id,
                    na.skill_code,
                    na.skill_title_fa,
                    nvl2(na.na_priority_id, 1, 0) is_in_na,
                    na.na_priority_id,
                    na_priority.c_title    AS na_priority_title,
                    passed.class_id,
                    passed.class_code,
                    passed.class_start_date,
                    passed.class_end_date,
                    passed.class_student_score,
                    passed.class_student_scores_state_id,
                    score_state.c_title    AS class_student_scores_state_title,
                    institute.c_title_fa   AS class_location
                FROM
                    view_student_classstudent_class_term_course   passed
                    FULL JOIN view_personnel_course_skill_na_report         na ON na.personnel_id = passed.personnel_id
                                                                                      AND na.course_id = passed.course_id
                    LEFT JOIN tbl_institute                                 institute ON institute.id = passed.class_institute
                    LEFT JOIN tbl_parameter_value                                       na_priority ON na_priority.id = na.na_priority_id
                    LEFT JOIN tbl_parameter_value                                       score_state ON score_state.id = passed.class_student_scores_state_id
            ]]>
        </createView>
    </changeSet>

    <changeSet author="MShahabi" id="1799887766557-002">
        <createView viewName="VIEW_EQUAL_COURSE" replaceIfExists="true">
            <![CDATA[
                SELECT
                    eq.F_COURSE as reference_course,
                    c.ID as course_id,
                    c.C_CODE as course_code,
                    c.C_TITLE_FA as course_title_fa,
                    c.N_THEORY_DURATION as course_theory_duration,
                    c.E_TECHNICAL_TYPE as course_technical_type
                FROM
                    tbl_equal_course eq
                    INNER JOIN tbl_equal_and_course eac
                        ON eq.id = eac.f_equal_course_id
                    INNER JOIN tbl_course c
                        ON eac.LIST_EQUAL_AND_COURSE = c.ID
            ]]>
        </createView>
    </changeSet>

    <changeSet author="MShahabi" id="1799887766557-003">
        <createView viewName="VIEW_TRAINING_FILE_NA_REPORT_AND_EQUALS" replaceIfExists="true">
            <![CDATA[
                SELECT *
                FROM VIEW_TRAINING_FILE_NA_REPORT view_tr_f
                UNION
                SELECT
                    ROWNUM as id,
                    view_tf.PERSONNEL_ID as personnel_id,
                    nvl(view_eq.course_id, view_tf.course_id) as course_id,
                    nvl(view_eq.course_code, view_tf.course_code) as course_code,
                    nvl(view_eq.course_title_fa, view_tf.course_title_fa) as course_title_fa,
                    nvl(view_eq.course_theory_duration, view_tf.course_theory_duration) as course_theory_duration,
                    nvl(view_eq.course_technical_type, view_tf.course_technical_type) as course_technical_type,
                    view_eq.reference_course as reference_course,
                    NULL as skill_id,
                    NULL as skill_code,
                    NULL as skill_title_fa,
                    NULL as is_in_na,
                    NULL as na_priority_id,
                    NULL as na_priority_title,
                    NULL as class_id,
                    NULL as class_code,
                    NULL as class_start_date,
                    NULL as class_end_date,
                    NULL as class_student_score,
                    NULL as class_student_scores_state_id,
                    NULL as class_student_scores_state_title,
                    NULL as class_location
                FROM VIEW_TRAINING_FILE_NA_REPORT view_tf
                INNER JOIN VIEW_EQUAL_COURSE view_eq
                  ON view_tf.COURSE_ID = view_eq.reference_course
            ]]>
        </createView>
    </changeSet>

    <changeSet author="MShahabi" id="1799887766557-004">
        <createView viewName="VIEW_TRAINING_FILE_NA_REPORT_V" replaceIfExists="true">
            <![CDATA[
                SELECT
                    ROWNUM AS id,
                    nvl(passed.personnel_id,na.personnel_id) AS personnel_id,
                    nvl(passed.course_id,na.course_id) AS course_id,
                    nvl(passed.course_code,na.course_code) AS course_code,
                    nvl(passed.course_title_fa,na.course_title_fa) AS course_title_fa,
                    nvl(passed.course_theory_duration,na.course_theory_duration) AS course_theory_duration,
                    nvl(passed.course_technical_type,na.course_technical_type) AS course_technical_type,
                    0 AS reference_course,
                    na.skill_id,
                    na.skill_code,
                    na.skill_title_fa,
                    nvl2(na.na_priority_id,1,0) is_in_na,
                    na.na_priority_id,
                    na_priority.c_title AS na_priority_title,
                    passed.class_id,
                    passed.class_code,
                    passed.class_start_date,
                    passed.class_end_date,
                    passed.class_student_score,
                    passed.class_student_scores_state_id,
                    score_state.c_title AS class_student_scores_state_title,
                    institute.c_title_fa AS class_location
                FROM
                    (
                        SELECT
                            1 AS is_personnel,
                            prs.id AS personnel_id,
                            tbl_class_student.score AS class_student_score,
                            tbl_class_student.scores_state_id AS class_student_scores_state_id,
                            class.id AS class_id,
                            class.c_status AS class_status,
                            class.c_code AS class_code,
                            class.n_d_duration AS class_d_duration,
                            class.c_end_date AS class_end_date,
                            class.n_h_duration AS class_h_duration,
                            class.c_start_date AS class_start_date,
                            class.c_title_class AS class_title_class,
                            class.f_institute AS class_institute,
                            class.n_group AS class_group,
                            tbl_course.id AS course_id,
                            tbl_course.c_code AS course_code,
                            tbl_course.c_title_fa AS course_title_fa,
                            tbl_course.n_theory_duration AS course_theory_duration,
                            tbl_course.e_technical_type AS course_technical_type,
                            concat(concat(personelplanner.first_name,' '),personelplanner.last_name) AS planner_name
                        FROM
                            tbl_student
                            INNER JOIN tbl_class_student ON tbl_student.id = tbl_class_student.student_id
                            INNER JOIN view_active_personnel prs ON tbl_student.national_code = prs.national_code
                            LEFT JOIN tbl_department department ON department.id = prs.f_department_id
                            INNER JOIN tbl_class class ON tbl_class_student.class_id = class.id
                            INNER JOIN tbl_course ON class.f_course = tbl_course.id
                            LEFT JOIN tbl_personnel personelplanner ON personelplanner.id = class.f_planner
                        WHERE
                            prs.id = 740
                        UNION ALL
                        SELECT
                            0 AS is_personnel,
                            tbl_personnel_registered.id AS personnel_id,
                            tbl_class_student.score AS class_student_score,
                            tbl_class_student.scores_state_id AS class_student_scores_state_id,
                            class.id AS class_id,
                            class.c_status AS class_status,
                            class.c_code AS class_code,
                            class.n_d_duration AS class_d_duration,
                            class.c_end_date AS class_end_date,
                            class.n_h_duration AS class_h_duration,
                            class.c_start_date AS class_start_date,
                            class.c_title_class AS class_title_class,
                            class.f_institute AS class_institute,
                            class.n_group AS class_group,
                            tbl_course.id AS course_id,
                            tbl_course.c_code AS course_code,
                            tbl_course.c_title_fa AS course_title_fa,
                            tbl_course.n_theory_duration AS course_theory_duration,
                            tbl_course.e_technical_type AS course_technical_type,
                            concat(concat(personelplanner.first_name,' '),personelplanner.last_name) AS planner_name
                        FROM
                            tbl_student
                            INNER JOIN tbl_class_student ON tbl_student.id = tbl_class_student.student_id
                            INNER JOIN tbl_personnel_registered ON tbl_student.national_code = tbl_personnel_registered.national_code
                            LEFT JOIN tbl_department department ON department.id = tbl_personnel_registered.f_department_id
                            INNER JOIN tbl_class class ON tbl_class_student.class_id = class.id
                            INNER JOIN tbl_course ON class.f_course = tbl_course.id
                            LEFT JOIN tbl_personnel personelplanner ON personelplanner.id = class.f_planner
                    ) passed
                    FULL JOIN (
                        WITH result AS (
                            SELECT
                                1 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'Post'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON na.f_object = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                2 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        tbl_needs_assessment.f_object,
                                        tbl_needs_assessment.f_skill,
                                        tbl_needs_assessment.f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        tbl_needs_assessment.c_object_type = 'TrainingPost'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_training_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) tp ON na.f_object = tp.id
                                INNER JOIN tbl_post_training_post ptp ON ptp.f_training_post_id = tp.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON p.id = ptp.f_post_id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                3 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'PostGroup'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post_group
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) pg ON na.f_object = pg.id
                                INNER JOIN tbl_post_postgroup ppg ON pg.id = ppg.f_postgroup_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON ppg.f_post_id = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                4 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'PostGroup'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post_group
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) pg ON na.f_object = pg.id
                                INNER JOIN tbl_training_post_post_group tppg ON tppg.f_post_group_id = pg.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_training_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) tp ON tppg.f_training_post_id = tp.id
                                INNER JOIN tbl_post_training_post ptp ON tp.id = ptp.f_training_post_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON ptp.f_post_id = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                5 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'Job'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_job
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) j ON na.f_object = j.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_training_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) tp ON tp.f_job_id = j.id
                                INNER JOIN tbl_post_training_post ptp ON tp.id = ptp.f_training_post_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON ptp.f_post_id = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                6 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'JobGroup'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_job_group
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) jg ON na.f_object = jg.id
                                INNER JOIN tbl_job_jobgroup jjg ON jg.id = jjg.f_jobgroup_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_job
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) j ON jjg.f_job_id = j.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_training_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) tp ON tp.f_job_id = j.id
                                INNER JOIN tbl_post_training_post ptp ON tp.id = ptp.f_training_post_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON ptp.f_post_id = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                7 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'PostGrade'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post_grade
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) pg ON na.f_object = pg.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_training_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) tp ON tp.f_post_grade_id = pg.id
                                INNER JOIN tbl_post_training_post ptp ON tp.id = ptp.f_training_post_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON ptp.f_post_id = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                8 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'PostGradeGroup'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post_grade_group
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) pgg ON na.f_object = pgg.id
                                INNER JOIN tbl_post_grade_post_grade_group pgpgg ON pgg.id = pgpgg.f_post_grade_group_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post_grade
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) pg ON pgpgg.f_post_grade_id = pg.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_training_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) tp ON tp.f_post_grade_id = pg.id
                                INNER JOIN tbl_post_training_post ptp ON tp.id = ptp.f_training_post_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON ptp.f_post_id = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                        ) SELECT
                            mod(MIN(10 * priority + na_priority_id - 111),10) + 111 AS na_priority_id,
                            course_id,
                            course_code,
                            course_title_fa,
                            course_theory_duration,
                            course_technical_type,
                            skill_id,
                            skill_code,
                            skill_title_fa,
                            personnel_id,
                            personnel_post_grade_id
                          FROM
                            result r
                        GROUP BY
                            course_id,
                            course_code,
                            course_title_fa,
                            course_theory_duration,
                            course_technical_type,
                            skill_id,
                            skill_code,
                            skill_title_fa,
                            personnel_id,
                            personnel_post_grade_id
                            ) na ON na.personnel_id = passed.personnel_id AND na.course_id = passed.course_id
                    LEFT JOIN tbl_institute institute ON institute.id = passed.class_institute
                    LEFT JOIN tbl_parameter_value na_priority ON na_priority.id = na.na_priority_id
                    LEFT JOIN tbl_parameter_value score_state ON score_state.id = passed.class_student_scores_state_id
            ]]>
        </createView>
    </changeSet>

    <changeSet author="MShahabi" id="1799887766557-005">
        <createView viewName="VIEW_TRAINING_FILE_NA_REPORT_AND_EQUALS" replaceIfExists="true">
            <![CDATA[
                SELECT *
                FROM VIEW_TRAINING_FILE_NA_REPORT_V view_tr_f
                UNION
                SELECT
                    ROWNUM as id,
                    view_tf.PERSONNEL_ID as personnel_id,
                    nvl(view_eq.course_id, view_tf.course_id) as course_id,
                    nvl(view_eq.course_code, view_tf.course_code) as course_code,
                    nvl(view_eq.course_title_fa, view_tf.course_title_fa) as course_title_fa,
                    nvl(view_eq.course_theory_duration, view_tf.course_theory_duration) as course_theory_duration,
                    nvl(view_eq.course_technical_type, view_tf.course_technical_type) as course_technical_type,
                    view_eq.reference_course as reference_course,
                    NULL as skill_id,
                    NULL as skill_code,
                    NULL as skill_title_fa,
                    NULL as is_in_na,
                    NULL as na_priority_id,
                    NULL as na_priority_title,
                    NULL as class_id,
                    NULL as class_code,
                    NULL as class_start_date,
                    NULL as class_end_date,
                    NULL as class_student_score,
                    NULL as class_student_scores_state_id,
                    NULL as class_student_scores_state_title,
                    NULL as class_location
                FROM VIEW_TRAINING_FILE_NA_REPORT_V view_tf
                INNER JOIN VIEW_EQUAL_COURSE view_eq
                  ON view_tf.COURSE_ID = view_eq.reference_course
            ]]>
        </createView>
    </changeSet>

    <changeSet author="MShahabi" id="1799887766557-006">
        <createView viewName="VIEW_TRAINING_FILE_NA_REPORT_V" replaceIfExists="true">
            <![CDATA[
                SELECT
                    ROWNUM AS id,
                    nvl(passed.personnel_id,na.personnel_id) AS personnel_id,
                    nvl(passed.course_id,na.course_id) AS course_id,
                    nvl(passed.course_code,na.course_code) AS course_code,
                    nvl(passed.course_title_fa,na.course_title_fa) AS course_title_fa,
                    nvl(passed.course_theory_duration,na.course_theory_duration) AS course_theory_duration,
                    nvl(passed.course_technical_type,na.course_technical_type) AS course_technical_type,
                    0 AS reference_course,
                    na.skill_id,
                    na.skill_code,
                    na.skill_title_fa,
                    nvl2(na.na_priority_id,1,0) is_in_na,
                    na.na_priority_id,
                    na_priority.c_title AS na_priority_title,
                    passed.class_id,
                    passed.class_code,
                    passed.class_start_date,
                    passed.class_end_date,
                    passed.class_student_score,
                    passed.class_student_scores_state_id,
                    score_state.c_title AS class_student_scores_state_title,
                    institute.c_title_fa AS class_location
                FROM
                    (
                        SELECT
                            1 AS is_personnel,
                            prs.id AS personnel_id,
                            tbl_class_student.score AS class_student_score,
                            tbl_class_student.scores_state_id AS class_student_scores_state_id,
                            class.id AS class_id,
                            class.c_status AS class_status,
                            class.c_code AS class_code,
                            class.n_d_duration AS class_d_duration,
                            class.c_end_date AS class_end_date,
                            class.n_h_duration AS class_h_duration,
                            class.c_start_date AS class_start_date,
                            class.c_title_class AS class_title_class,
                            class.f_institute AS class_institute,
                            class.n_group AS class_group,
                            tbl_course.id AS course_id,
                            tbl_course.c_code AS course_code,
                            tbl_course.c_title_fa AS course_title_fa,
                            tbl_course.n_theory_duration AS course_theory_duration,
                            tbl_course.e_technical_type AS course_technical_type,
                            concat(concat(personelplanner.first_name,' '),personelplanner.last_name) AS planner_name
                        FROM
                            tbl_student
                            INNER JOIN tbl_class_student ON tbl_student.id = tbl_class_student.student_id
                            INNER JOIN view_active_personnel prs ON tbl_student.national_code = prs.national_code
                            LEFT JOIN tbl_department department ON department.id = prs.f_department_id
                            INNER JOIN tbl_class class ON tbl_class_student.class_id = class.id
                            INNER JOIN tbl_course ON class.f_course = tbl_course.id
                            LEFT JOIN tbl_personnel personelplanner ON personelplanner.id = class.f_planner
                        UNION ALL
                        SELECT
                            0 AS is_personnel,
                            tbl_personnel_registered.id AS personnel_id,
                            tbl_class_student.score AS class_student_score,
                            tbl_class_student.scores_state_id AS class_student_scores_state_id,
                            class.id AS class_id,
                            class.c_status AS class_status,
                            class.c_code AS class_code,
                            class.n_d_duration AS class_d_duration,
                            class.c_end_date AS class_end_date,
                            class.n_h_duration AS class_h_duration,
                            class.c_start_date AS class_start_date,
                            class.c_title_class AS class_title_class,
                            class.f_institute AS class_institute,
                            class.n_group AS class_group,
                            tbl_course.id AS course_id,
                            tbl_course.c_code AS course_code,
                            tbl_course.c_title_fa AS course_title_fa,
                            tbl_course.n_theory_duration AS course_theory_duration,
                            tbl_course.e_technical_type AS course_technical_type,
                            concat(concat(personelplanner.first_name,' '),personelplanner.last_name) AS planner_name
                        FROM
                            tbl_student
                            INNER JOIN tbl_class_student ON tbl_student.id = tbl_class_student.student_id
                            INNER JOIN tbl_personnel_registered ON tbl_student.national_code = tbl_personnel_registered.national_code
                            LEFT JOIN tbl_department department ON department.id = tbl_personnel_registered.f_department_id
                            INNER JOIN tbl_class class ON tbl_class_student.class_id = class.id
                            INNER JOIN tbl_course ON class.f_course = tbl_course.id
                            LEFT JOIN tbl_personnel personelplanner ON personelplanner.id = class.f_planner
                    ) passed
                    FULL JOIN (
                        WITH result AS (
                            SELECT
                                1 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'Post'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON na.f_object = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                2 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        tbl_needs_assessment.f_object,
                                        tbl_needs_assessment.f_skill,
                                        tbl_needs_assessment.f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        tbl_needs_assessment.c_object_type = 'TrainingPost'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_training_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) tp ON na.f_object = tp.id
                                INNER JOIN tbl_post_training_post ptp ON ptp.f_training_post_id = tp.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON p.id = ptp.f_post_id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                3 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'PostGroup'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post_group
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) pg ON na.f_object = pg.id
                                INNER JOIN tbl_post_postgroup ppg ON pg.id = ppg.f_postgroup_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON ppg.f_post_id = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                4 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'PostGroup'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post_group
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) pg ON na.f_object = pg.id
                                INNER JOIN tbl_training_post_post_group tppg ON tppg.f_post_group_id = pg.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_training_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) tp ON tppg.f_training_post_id = tp.id
                                INNER JOIN tbl_post_training_post ptp ON tp.id = ptp.f_training_post_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON ptp.f_post_id = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                5 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'Job'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_job
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) j ON na.f_object = j.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_training_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) tp ON tp.f_job_id = j.id
                                INNER JOIN tbl_post_training_post ptp ON tp.id = ptp.f_training_post_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON ptp.f_post_id = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                6 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'JobGroup'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_job_group
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) jg ON na.f_object = jg.id
                                INNER JOIN tbl_job_jobgroup jjg ON jg.id = jjg.f_jobgroup_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_job
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) j ON jjg.f_job_id = j.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_training_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) tp ON tp.f_job_id = j.id
                                INNER JOIN tbl_post_training_post ptp ON tp.id = ptp.f_training_post_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON ptp.f_post_id = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                7 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'PostGrade'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post_grade
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) pg ON na.f_object = pg.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_training_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) tp ON tp.f_post_grade_id = pg.id
                                INNER JOIN tbl_post_training_post ptp ON tp.id = ptp.f_training_post_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON ptp.f_post_id = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                            UNION ALL
                            SELECT
                                8 AS priority,
                                MIN(na.f_parameter_value_needs_assessment_priority) AS na_priority_id,
                                course.id AS course_id,
                                course.c_code AS course_code,
                                course.c_title_fa AS course_title_fa,
                                course.n_theory_duration AS course_theory_duration,
                                course.e_technical_type AS course_technical_type,
                                skill.id AS skill_id,
                                skill.c_code AS skill_code,
                                skill.c_title_fa AS skill_title_fa,
                                prs.id AS personnel_id,
                                p.f_post_grade_id AS personnel_post_grade_id
                            FROM
                                (
                                    SELECT
                                        f_object,
                                        f_skill,
                                        f_parameter_value_needs_assessment_priority
                                    FROM
                                        tbl_needs_assessment
                                    WHERE
                                        c_object_type = 'PostGradeGroup'
                                        AND   e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) na
                                INNER JOIN tbl_skill skill ON na.f_skill = skill.id
                                INNER JOIN tbl_course course ON skill.f_course = course.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post_grade_group
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) pgg ON na.f_object = pgg.id
                                INNER JOIN tbl_post_grade_post_grade_group pgpgg ON pgg.id = pgpgg.f_post_grade_group_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post_grade
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) pg ON pgpgg.f_post_grade_id = pg.id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_training_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) tp ON tp.f_post_grade_id = pg.id
                                INNER JOIN tbl_post_training_post ptp ON tp.id = ptp.f_training_post_id
                                INNER JOIN (
                                    SELECT
                                        *
                                    FROM
                                        tbl_post
                                    WHERE
                                        e_deleted IS NULL
                                        AND   e_enabled IS NULL
                                ) p ON ptp.f_post_id = p.id
                                INNER JOIN view_active_personnel prs ON prs.f_post_id = p.id
                            GROUP BY
                                prs.id,
                                course.id,
                                course.c_code,
                                course.c_title_fa,
                                course.n_theory_duration,
                                course.e_technical_type,
                                skill.id,
                                skill.c_code,
                                skill.c_title_fa,
                                p.f_post_grade_id
                        ) SELECT
                            mod(MIN(10 * priority + na_priority_id - 111),10) + 111 AS na_priority_id,
                            course_id,
                            course_code,
                            course_title_fa,
                            course_theory_duration,
                            course_technical_type,
                            skill_id,
                            skill_code,
                            skill_title_fa,
                            personnel_id,
                            personnel_post_grade_id
                          FROM
                            result r
                        GROUP BY
                            course_id,
                            course_code,
                            course_title_fa,
                            course_theory_duration,
                            course_technical_type,
                            skill_id,
                            skill_code,
                            skill_title_fa,
                            personnel_id,
                            personnel_post_grade_id
                            ) na ON na.personnel_id = passed.personnel_id AND na.course_id = passed.course_id
                    LEFT JOIN tbl_institute institute ON institute.id = passed.class_institute
                    LEFT JOIN tbl_parameter_value na_priority ON na_priority.id = na.na_priority_id
                    LEFT JOIN tbl_parameter_value score_state ON score_state.id = passed.class_student_scores_state_id
            ]]>
        </createView>
    </changeSet>

    <changeSet author="MShahabi" id="1799887766557-007">
        <createView viewName="VIEW_TRAINING_FILE_NA_REPORT_AND_EQUALS" replaceIfExists="true">
            <![CDATA[
                SELECT *
                FROM VIEW_TRAINING_FILE_NA_REPORT_V view_tr_f
                UNION
                SELECT
                    ROWNUM as id,
                    view_tf.PERSONNEL_ID as personnel_id,
                    nvl(view_eq.course_id, view_tf.course_id) as course_id,
                    nvl(view_eq.course_code, view_tf.course_code) as course_code,
                    nvl(view_eq.course_title_fa, view_tf.course_title_fa) as course_title_fa,
                    nvl(view_eq.course_theory_duration, view_tf.course_theory_duration) as course_theory_duration,
                    nvl(view_eq.course_technical_type, view_tf.course_technical_type) as course_technical_type,
                    view_eq.reference_course as reference_course,
                    NULL as skill_id,
                    NULL as skill_code,
                    NULL as skill_title_fa,
                    0 as is_in_na,
                    NULL as na_priority_id,
                    NULL as na_priority_title,
                    NULL as class_id,
                    NULL as class_code,
                    NULL as class_start_date,
                    NULL as class_end_date,
                    NULL as class_student_score,
                    NULL as class_student_scores_state_id,
                    NULL as class_student_scores_state_title,
                    NULL as class_location
                FROM VIEW_TRAINING_FILE_NA_REPORT_V view_tf
                INNER JOIN VIEW_EQUAL_COURSE view_eq
                  ON view_tf.COURSE_ID = view_eq.reference_course
            ]]>
        </createView>
    </changeSet>
    <changeSet author="MShahabi" id="1799887766557-008">
        <createView viewName="VIEW_EVALUATION_STATICAL_REPORT" replaceIfExists="true">
            <![CDATA[
                SELECT rowNum                                                                     as id,
                       term.C_TITLE_FA                                                            as term_TitleFa,
                       personal.C_FIRST_NAME_FA                                                   as teacher_FirstName,
                       personal.C_LAST_NAME_FA                                                    as teacher_LastName,
                       CONCAT(CONCAT(personal.C_FIRST_NAME_FA, ' '), personal.C_LAST_NAME_FA)     as teacher_FullName,
                       tclass.N_H_DURATION                                                        as tclass_n_duration,
                       tclass.F_INSTITUTE_ORGANIZER                                               as tclass_organizer,
                       tclass.C_STATUS                                                            as tclass_status,
                       tclass.f_cancel_class_reason                                               as class_cancel_reason_id,
                       parameterValue.C_TITLE                                                     as class_cancel_reason_title,
                       tclass.F_PLANNER                                                           as tclass_planner,
                       tclass.F_SUPERVISOR                                                        as tclass_supervisor,
                       tclass.c_created_by                                                        as c_created_by,
                       tclass.d_created_date                                                      as d_created_date,
                       tclass.e_deleted                                                           as e_deleted,
                       tclass.e_enabled                                                           as e_enabled,
                       tclass.c_last_modified_by                                                  as c_last_modified_by,
                       tclass.d_last_modified_date                                                as d_last_modified_date,
                       tclass.n_version                                                           as n_version,
                       tclass.ID                                                                  as tclass_id,
                       evaluationanalysis.ID                                                      as evaluationanalysis_id,
                       unit.ID                                                                    as unit_id,
                       tclass.C_CODE                                                              as tclass_c_code,
                       tclass.F_INSTITUTE                                                         as institute_id,
                       tclass.F_TEACHER                                                           as teacher_id,
                       tclass.F_TERM                                                              as term_id,
                       tclass.C_START_DATE                                                        as tclass_c_start_date,
                       tclass.C_END_DATE                                                          as tclass_c_end_date,
                       tclass.C_REASON                                                            as tclass_reason,
                       tclass.C_EVALUATION                                                        as tclass_evaluation,
                       tclass.c_teaching_type                                                     as tclass_teaching_type,
                       SUBSTR(tclass.C_START_DATE, 1, 4)                                          as tclass_year,
                       course.C_CODE                                                              as course_c_code,
                       course.CATEGORY_ID                                                         as course_category_id,
                       course.SUBCATEGORY_ID                                                      as course_subcategory_id,
                       course.C_TITLE_FA                                                          as course_c_title_fa,
                       course.C_EVALUATION                                                        as course_c_evaluation,
                       plnner_dep.c_hoze_title                                                    as planner_complex,
                       CONCAT(CONCAT(personelPlanner.FIRST_NAME, ' '), personelPlanner.LAST_NAME) as planner_name,
                       organizer_ins.C_TITLE_FA                                                   as institute_name,
                       CASE WHEN students.counts IS NULL THEN 0 ELSE students.counts END          AS tclass_students_count,
                       evaluationanalysis.C_BEHAVIORAL_GRADE                                      as evaluationanalysis_c_behavioral_grade,
                       evaluationanalysis.B_BEHAVIORAL_PASS                                       as evaluationanalysis_c_behavioral_pass,
                       evaluationanalysis.C_EFFECTIVENESS_GRADE                                   as evaluationanalysis_c_effectiveness_grade,
                       evaluationanalysis.B_EFFECTIVENESS_PASS                                    as evaluationanalysis_c_effectiveness_pass,
                       evaluationanalysis.C_LEARNING_GRADE                                        as evaluationanalysis_c_learning_grade,
                       evaluationanalysis.B_LEARNING_PASS                                         as evaluationanalysis_c_learning_pass,
                       evaluationanalysis.C_REACTION_GRADE                                        as evaluationanalysis_c_reaction_grade,
                       evaluationanalysis.B_REACTION_PASS                                         as evaluationanalysis_c_reaction_pass,
                       evaluationanalysis.C_RESULTS_GRADE                                         as evaluationanalysis_c_results_grade,
                       evaluationanalysis.B_RESULTS_PASS                                          as evaluationanalysis_c_results_pass,
                       evaluationanalysis.C_TEACHER_GRADE                                         as evaluationanalysis_c_teacher_grade,
                       evaluationanalysis.B_TEACHER_PASS                                          as evaluationanalysis_c_teacher_pass,
                       CASE WHEN evaluationanalysis.C_REACTION_GRADE IS NULL THEN 0 ELSE 1 END    as evaluationanalysis_b_reaction_status,
                       CASE WHEN evaluationanalysis.C_BEHAVIORAL_GRADE IS NULL THEN 0 ELSE 1 END  as evaluationanalysis_b_behavioral_status,
                       CASE WHEN evaluationanalysis.C_LEARNING_GRADE IS NULL THEN 0 ELSE 1 END    as evaluationanalysis_b_learning_status,
                       CASE WHEN evaluationanalysis.C_RESULTS_GRADE IS NULL THEN 0 ELSE 1 END     as evaluationanalysis_b_results_status,
                       CASE WHEN evaluationanalysis.C_TEACHER_GRADE IS NULL THEN 0 ELSE 1 END     as evaluationanalysis_b_teacher_status,
                       CASE
                           WHEN evaluationanalysis.C_EFFECTIVENESS_GRADE IS NULL THEN 0
                           ELSE 1 END                                                             as evaluationanalysis_b_effectiveness_status

                FROM TBL_CLASS tclass
                         INNER JOIN TBL_COURSE course
                                    ON tclass.F_COURSE = course.ID
                         LEFT JOIN TBL_TARGET_SOCIETY unit
                                   ON unit.F_CLASS_ID = tclass.ID
                         LEFT JOIN (SELECT TBL_CLASS_STUDENT.CLASS_ID,
                                           count(TBL_CLASS_STUDENT.ID) as counts
                                    FROM TBL_CLASS_STUDENT
                                    GROUP BY TBL_CLASS_STUDENT.CLASS_ID) students ON students.CLASS_ID = tclass.ID
                         LEFT JOIN TBL_EVALUATION_ANALYSIS evaluationanalysis
                                   ON evaluationanalysis.F_TCLASS = tclass.ID
                         INNER JOIN TBL_TERM term ON tclass.F_TERM = term.ID
                         INNER JOIN TBL_TEACHER teacher ON tclass.F_TEACHER = teacher.ID
                         LEFT JOIN TBL_PERSONAL_INFO personal ON teacher.F_PERSONALITY = personal.ID
                         LEFT JOIN tbl_personnel personelPlanner on personelPlanner.id = tclass.f_planner
                         LEFT JOIN tbl_department plnner_dep on plnner_dep.id = personelPlanner.f_department_id
                         LEFT JOIN TBL_INSTITUTE organizer_ins on tclass.F_INSTITUTE_ORGANIZER = organizer_ins.ID
                         LEFT JOIN TBL_PARAMETER_VALUE parameterValue on tclass.f_cancel_class_reason = parameterValue.ID
    			]]>
        </createView>
    </changeSet>

    <changeSet author="zare" id="abiz-2094-debug">
        <createView viewName="view_class_conflict" replaceIfExists="true">
            <![CDATA[
                 select student_1.student_Id student_Id,student.FIRST_NAME student_FIRST_NAME,student.LAST_NAME student_LAST_NAME,student.NATIONAL_CODE student_NATIONAL_CODE,terms.term_cur term_Id,se1.c_session_date session_date,c1.id class1_Id ,c1.c_code c1_code,c2.id class2_Id,c2.c_code c2_code,
                      se1.id session1_Id,se2.id session2_Id,se1.c_session_start_hour s1_start_hour, se1.c_session_end_hour s1_end_hour,se2.c_session_start_hour s2_start_hour ,se2.c_session_end_hour s2_end_hour
                      from (select term_1.id term_cur ,term_2.id term_nxt , term_3.id term_pre from (select t.id,row_number() over(ORDER BY c_code desc) as term_order from tbl_term t) term_1
                 left join (select term_2.term_order ,term_2.id from (select t.id,row_number() over(ORDER BY c_code desc) as term_order from tbl_term t) term_2) term_2 on (term_1.term_order = term_2.term_order + 1)
                 left join (select term_3.term_order ,term_3.id from (select t.id,row_number() over(ORDER BY c_code desc) as term_order from tbl_term t) term_3) term_3 on (term_1.term_order = term_3.term_order - 1)) terms
                 inner join tbl_class c1 on (c1.c_status<>4 and c1.f_term = terms.term_cur)
                 inner join tbl_class c2 on (c2.c_status<>4 and (c2.f_term = terms.term_nxt OR c2.f_term = terms.term_pre OR c2.f_term = terms.term_cur))
                 inner join tbl_session se1 on se1.F_CLASS_ID = c1.id
                 inner join tbl_session se2 on (se2.F_CLASS_ID = c2.id and se1.c_session_date = se2.c_session_date and (
                                                                         ((se1.c_session_start_hour) = (se2.c_session_start_hour) OR (se1.c_session_end_hour) = (se2.c_session_end_hour))
                                                                         OR
                                                                         ((se1.c_session_start_hour) > (se2.c_session_start_hour) and (se1.c_session_start_hour) < (se2.c_session_end_hour))))
                 inner join tbl_class_student student_1 on student_1.CLASS_ID = c1.id
                 inner join tbl_class_student student_2 on (student_2.CLASS_ID = c2.id and student_1.STUDENT_ID = student_2.STUDENT_ID)
                 inner join tbl_student student on (student_2.STUDENT_ID = student.Id)
                          ]]>
        </createView>
    </changeSet>

    <changeSet author="zare" id="abiz-2094-debug-2">
        <createView viewName="view_class_conflict" replaceIfExists="true">
            <![CDATA[
                 select student_1.student_Id student_Id,student.FIRST_NAME student_FIRST_NAME,student.LAST_NAME student_LAST_NAME,student.NATIONAL_CODE student_NATIONAL_CODE,terms.term_cur term_Id,se1.c_session_date session_date,c1.id class1_Id ,c1.c_code c1_code,c2.id class2_Id,c2.c_code c2_code,
                      se1.id session1_Id,se2.id session2_Id,se1.c_session_start_hour s1_start_hour, se1.c_session_end_hour s1_end_hour,se2.c_session_start_hour s2_start_hour ,se2.c_session_end_hour s2_end_hour
                      from (select term_1.id term_cur ,term_2.id term_nxt , term_3.id term_pre from (select t.id,row_number() over(ORDER BY c_code desc) as term_order from tbl_term t) term_1
                 left join (select term_2.term_order ,term_2.id from (select t.id,row_number() over(ORDER BY c_code desc) as term_order from tbl_term t) term_2) term_2 on (term_1.term_order = term_2.term_order + 1)
                 left join (select term_3.term_order ,term_3.id from (select t.id,row_number() over(ORDER BY c_code desc) as term_order from tbl_term t) term_3) term_3 on (term_1.term_order = term_3.term_order - 1)) terms
                 inner join tbl_class c1 on (c1.c_status<>4 and c1.f_term = terms.term_cur)
                 inner join tbl_class c2 on (c2.id <> c1.id AND c2.c_status<>4 and (c2.f_term = terms.term_nxt OR c2.f_term = terms.term_pre OR c2.f_term = terms.term_cur))
                 inner join tbl_session se1 on se1.F_CLASS_ID = c1.id
                 inner join tbl_session se2 on (se2.F_CLASS_ID = c2.id and se1.c_session_date = se2.c_session_date and (
                                                                         ((se1.c_session_start_hour) = (se2.c_session_start_hour) OR (se1.c_session_end_hour) = (se2.c_session_end_hour))
                                                                         OR
                                                                         ((se1.c_session_start_hour) > (se2.c_session_start_hour) and (se1.c_session_start_hour) < (se2.c_session_end_hour))))
                 inner join tbl_class_student student_1 on student_1.CLASS_ID = c1.id
                 inner join tbl_class_student student_2 on (student_2.CLASS_ID = c2.id and student_1.STUDENT_ID = student_2.STUDENT_ID)
                 inner join tbl_student student on (student_2.STUDENT_ID = student.Id)
                          ]]>
        </createView>
    </changeSet>


    <changeSet author="xaniar" id="1799887766557-015">
        <createView viewName="view_statistics_unit_report" replaceIfExists="true">
            <![CDATA[
               SELECT DISTINCT
    csession.c_session_date                    AS session_session_date,
    class.id                                   AS class_id,
    std.id                                     AS student_id,
    SUM(
        CASE
            WHEN att.c_state IN(
                '1', '2'
            ) THEN
                round(to_number(to_date(csession.c_session_end_hour, 'HH24:MI') - to_date(csession.c_session_start_hour, 'HH24:MI'
                )) * 24, 1)
            ELSE
                0
        END
    ) AS presence_hour,
    SUM(
        CASE
            WHEN att.c_state IN(
                '1', '2'
            ) THEN
                round(to_number(to_date(csession.c_session_end_hour, 'HH24:MI') - to_date(csession.c_session_start_hour, 'HH24:MI'
                )) * 24 * 60)
            ELSE
                0
        END
    ) AS presence_minute,
    SUM(
        CASE
            WHEN att.c_state IN(
                '3', '4'
            ) THEN
                round(to_number(to_date(csession.c_session_end_hour, 'HH24:MI') - to_date(csession.c_session_start_hour, 'HH24:MI'
                )) * 24, 1)
            ELSE
                0
        END
    ) AS absence_hour,
    SUM(
        CASE
            WHEN att.c_state IN(
                '3', '4'
            ) THEN
                round(to_number(to_date(csession.c_session_end_hour, 'HH24:MI') - to_date(csession.c_session_start_hour, 'HH24:MI'
                )) * 24 * 60)
            ELSE
                0
        END
    ) AS absence_minute,
    class.c_code                               AS class_code,
    class.c_status                             AS class_status,
    class.c_start_date                         AS class_start_date,
    class.c_end_date                           AS class_end_date,
    class.c_teaching_type                      AS class_c_teaching_type,
    substr(class.c_start_date, 1, 4) AS class_year,
    class.f_planner                            AS tclass_planner,
    class.f_supervisor                         AS tclass_supervisor,
    course.c_code                              AS course_code,
    course.c_title_fa                          AS course_title_fa,
    class.n_h_duration                         AS course_duration,
    CASE
        WHEN course.e_theo_type = 1 THEN
            'تئوري'
        WHEN course.e_theo_type = 2 THEN
            'عملي'
        WHEN course.e_theo_type = 3 THEN
            'تئوري_عملي'
        ELSE
            NULL
    END AS course_theo_type,
    category.id                                AS coursecategory,
    subcategory.id                             AS coursesubcategory,
    std.emp_no                                 AS student_emp_no,
    std.personnel_no                           AS student_personnel_no,
    std.national_code                          AS student_national_code,
    std.first_name                             AS student_first_name,
    std.last_name                              AS student_last_name,
    department.c_moavenat_title                AS student_ccp_assistant,
    department.c_omor_title                    AS student_ccp_affairs,
    department.c_ghesmat_title                 AS student_ccp_section,
    department.c_vahed_title                   AS student_ccp_unit,
    class_std.applicant_company_name           AS class_student_applicant_company_name,
    department.c_mojtame_title                    AS personnel_complex_title,
    personnel.work_place_title                 AS student_work_place_title,
    tbl_post_grade.c_title_fa                  AS student_post_grade_title,
    tbl_job.c_title_fa                         AS student_job_title,
    personal.c_first_name_fa                   AS teacher_firstname,
    personal.c_last_name_fa                    AS teacher_lastname,
    teacher.b_personnel                        AS course_teacher_status,
    teacher.id                                 AS course_teacher_id,
    institute.id                               AS institute_id,
    institute.c_title_fa                       AS institute_c_title_fa,
    term.id                                    AS term_id,
    evaluationanalysis.c_behavioral_grade      AS evaluationanalysis_c_behavioral_grade,
    evaluationanalysis.b_behavioral_pass       AS evaluationanalysis_c_behavioral_pass,
    CASE
        WHEN evaluationanalysis.c_behavioral_grade IS NULL THEN
            0
        ELSE
            1
    END AS evaluationanalysis_b_behavioral_status,
    evaluationanalysis.c_effectiveness_grade   AS evaluationanalysis_c_effectiveness_grade,
    evaluationanalysis.b_effectiveness_pass    AS evaluationanalysis_c_effectiveness_pass,
    CASE
        WHEN evaluationanalysis.c_effectiveness_grade IS NULL THEN
            0
        ELSE
            1
    END AS evaluationanalysis_b_effectiveness_status,
    evaluationanalysis.c_learning_grade        AS evaluationanalysis_c_learning_grade,
    evaluationanalysis.b_learning_pass         AS evaluationanalysis_c_learning_pass,
    CASE
        WHEN evaluationanalysis.c_learning_grade IS NULL THEN
            0
        ELSE
            1
    END AS evaluationanalysis_b_learning_status,
    evaluationanalysis.c_reaction_grade        AS evaluationanalysis_c_reaction_grade,
    evaluationanalysis.b_reaction_pass         AS evaluationanalysis_c_reaction_pass,
    CASE
        WHEN evaluationanalysis.c_reaction_grade IS NULL THEN
            0
        ELSE
            1
    END AS evaluationanalysis_b_reaction_status,
    evaluationanalysis.c_results_grade         AS evaluationanalysis_c_results_grade,
    evaluationanalysis.b_results_pass          AS evaluationanalysis_c_results_pass,
    CASE
        WHEN evaluationanalysis.c_results_grade IS NULL THEN
            0
        ELSE
            1
    END AS evaluationanalysis_b_results_status,
    evaluationanalysis.c_teacher_grade         AS evaluationanalysis_c_teacher_grade,
    evaluationanalysis.b_teacher_pass          AS evaluationanalysis_c_teacher_pass,
    CASE
        WHEN evaluationanalysis.c_teacher_grade IS NULL THEN
            0
        ELSE
            1
    END AS evaluationanalysis_b_teacher_status
FROM
    tbl_attendance            att
    INNER JOIN tbl_student               std ON att.f_student = std.id
    INNER JOIN (
        SELECT
            view_active_personnel.personnel_no,
            view_active_personnel.national_code,
            view_active_personnel.complex_title,
            view_active_personnel.work_place_title,
            view_active_personnel.post_grade_title,
            view_active_personnel.f_post_id,
            view_active_personnel.f_department_id
        FROM
            view_active_personnel
        UNION ALL
        SELECT
            tbl_personnel_registered.personnel_no,
            tbl_personnel_registered.national_code,
            tbl_personnel_registered.complex_title,
            tbl_personnel_registered.work_place_title,
            tbl_personnel_registered.post_grade_title,
            tbl_personnel_registered.f_post_id,
            tbl_personnel_registered.f_department_id
        FROM
            tbl_personnel_registered
    ) personnel ON std.national_code = personnel.national_code
    LEFT JOIN tbl_department            department ON department.id = personnel.f_department_id
    INNER JOIN tbl_session               csession ON att.f_session = csession.id
    INNER JOIN tbl_class                 class ON csession.f_class_id = class.id
    INNER JOIN tbl_institute             institute ON class.f_institute_organizer = institute.id
    INNER JOIN tbl_course                course ON class.f_course = course.id
    INNER JOIN tbl_term                  term ON class.f_term = term.id
    INNER JOIN tbl_category              category ON course.category_id = category.id
    INNER JOIN tbl_sub_category          subcategory ON course.subcategory_id = subcategory.id
    INNER JOIN tbl_teacher               teacher ON class.f_teacher = teacher.id
    LEFT JOIN tbl_personal_info         personal ON teacher.f_personality = personal.id
    INNER JOIN tbl_class_student         class_std ON class_std.student_id = std.id AND class_std.class_id = class.id
    LEFT JOIN tbl_post ON personnel.f_post_id = tbl_post.id
    LEFT JOIN tbl_job ON tbl_job.id = tbl_post.f_job_id
    LEFT JOIN tbl_post_grade ON tbl_post_grade.id = tbl_post.f_post_grade_id
    LEFT JOIN tbl_evaluation_analysis   evaluationanalysis ON evaluationanalysis.f_tclass = class.id
GROUP BY
    class.id,
    class.c_start_date,
    class.c_end_date,
    csession.c_session_date,
    std.id,
    std.emp_no,
    std.personnel_no,
    std.national_code,
    std.first_name,
    std.last_name,
    class_std.applicant_company_name,
    department.c_mojtame_title,
    personnel.work_place_title,
    tbl_post_grade.c_title_fa,
    tbl_job.c_title_fa,
    department.c_moavenat_title,
    department.c_omor_title,
    department.c_ghesmat_title,
    department.c_vahed_title,
    class.c_code,
    course.id,
    course.c_code,
    course.c_title_fa,
    class.c_teaching_type,
    class.c_status,
    institute.c_title_fa,
    institute.id,
    course.category_id,
    course.e_run_type,
    course.e_theo_type,
    course.e_level_type,
    course.e_technical_type,
    category.id,
    subcategory.id,
    teacher.id,
    teacher.b_personnel,
    personal.c_first_name_fa,
    personal.c_last_name_fa,
    term.c_title_fa,
    term.id,
    class.f_planner,
    class.f_supervisor,
    class.n_h_duration,
    evaluationanalysis.c_behavioral_grade,
    evaluationanalysis.b_behavioral_pass,
    evaluationanalysis.c_effectiveness_grade,
    evaluationanalysis.b_effectiveness_pass,
    evaluationanalysis.c_learning_grade,
    evaluationanalysis.b_learning_pass,
    evaluationanalysis.c_reaction_grade,
    evaluationanalysis.b_reaction_pass,
    evaluationanalysis.c_results_grade,
    evaluationanalysis.b_results_pass,
    evaluationanalysis.c_teacher_grade,
    evaluationanalysis.b_teacher_pass
                          ]]>
        </createView>
    </changeSet>
    <changeSet author="zare" id="abiz-2151">
    <createView viewName="VIEW_ATTENDANCE_REPORT" replaceIfExists="true">
        <![CDATA[
 SELECT atten.personalnum,
                   atten.personalnum2,
                   atten.nationalcode,
                   atten.name,
                   atten.ccparea,
                   atten.ccpaffairs,
                   atten.peopleType,
                   atten.classcode,
                   atten.classname,
                   atten.c_session_date,
                   atten.c_state,
                   atten.planner_complex,
                   atten.planner_name,
                   atten.institute_name,
                   case
                       when atten.time >= 360 then
                               FLOOR((atten.time + 120) / 60) ||
                               (CASE WHEN MOD(atten.time + 120, 60) <> 0 THEN ':' || MOD(atten.time + 120, 60) END)
                       else
                               FLOOR(atten.time / 60) || (CASE WHEN MOD(atten.time, 60) <> 0 THEN ':' || MOD(atten.time, 60) END)
                       end time
                FROM (
                     SELECT distinct std.personnel_no                                                           AS personalnum,
                                     std.emp_no                                                                 AS personalnum2,
                                     std.national_code                                                          AS nationalcode,
                                     std.first_name || ' ' || std.last_name                                     AS name,
                                     dep.c_hoze_title                                                           AS ccparea,
                                     dep.c_omor_title                                                           AS ccpaffairs,
                                     personnel.personelType                                                     AS peopleType,
                                     class.c_code                                                               AS classcode,
                                     class.c_title_class                                                        AS classname,
                                     csession.c_session_date,
                                     att.c_state                                                                as c_state,
                                     plnner_dep.c_hoze_title                                                    as planner_complex,
                                     CONCAT(CONCAT(personnelPlanner.FIRST_NAME, ' '), personnelPlanner.LAST_NAME) as planner_name,
                                     organizer_ins.C_TITLE_FA                                                   as institute_name,
                                     SUM((TO_NUMBER(SUBSTR(csession.c_session_end_hour, 1, 2)) * 60 +
                                          TO_NUMBER(SUBSTR(csession.c_session_end_hour, 4, 2))) -
                                         (TO_NUMBER(SUBSTR(csession.c_session_start_hour, 1, 2)) * 60 +
                                          TO_NUMBER(SUBSTR(csession.c_session_start_hour, 4, 2))))              AS time
                     FROM tbl_attendance att
                              INNER JOIN tbl_student std ON att.f_student = std.id
                              INNER JOIN (
                         SELECT * FROM (
                         select row_number() over(partition by un.national_code order by un.date_ desc) rw ,un.* from (
                         SELECT CAST("P_TYPE" AS VARCHAR2(50)) personelType,
                                "PERSONNEL_NO",
                                national_code,
                                first_name,
                                last_name,
                                f_department_id
                               ,nvl(employment_date,to_date('1900-01-01','yyyy-mm-dd')) as date_
                         from tbl_personnel where tbl_personnel.deleted = 0
                         union all
                         SELECT CAST('personnel_registered' AS VARCHAR2(50)) personelType,
                                "PERSONNEL_NO",
                                national_code,
                                first_name,
                                last_name,
                                f_department_id
                               ,nvl(d_last_modified_date ,to_date('1900-01-01','yyyy-mm-dd'))as date_
                         FROM tbl_personnel_registered )un) where rw = 1
                     ) personnel ON std.national_code = personnel.national_code
                              LEFT JOIN tbl_department dep ON dep.id = personnel.f_department_id
                              INNER JOIN tbl_session csession ON att.f_session = csession.id
                              INNER JOIN tbl_class class ON csession.f_class_id = class.id
                              LEFT JOIN tbl_personnel personnelPlanner on personnelPlanner.id = class.f_planner
                              LEFT JOIN tbl_department plnner_dep on plnner_dep.id = personnelPlanner.f_department_id
                              LEFT JOIN TBL_INSTITUTE organizer_ins on class.F_INSTITUTE_ORGANIZER = organizer_ins.ID
                     GROUP BY std.personnel_no,
                              std.emp_no,
                              std.national_code,
                              std.first_name || ' ' || std.last_name,
                              dep.c_hoze_title,
                              dep.c_omor_title,
                              personnel.personelType,
                              class.c_code,
                              class.c_title_class,
                              csession.c_session_date,
                              att.c_state,
                              plnner_dep.c_hoze_title,
                              personnelPlanner.FIRST_NAME,
                              personnelPlanner.LAST_NAME,
                              organizer_ins.C_TITLE_FA
                 ) atten
                  ]]>
    </createView>
    </changeSet>

    <changeSet author="zare" id="abiz-2152">
        <createView viewName="VIEW_TRAINING_OVER_TIME_REPORT" replaceIfExists="true">
            <![CDATA[
            SELECT atten.personalnum,
       atten.personalnum2,
       atten.nationalcode,
       atten.name,
       atten.ccparea,
       atten.ccpaffairs,
       atten.peopletype,
       atten.classcode,
       atten.classname,
       atten.c_session_date,
       atten.planner_complex,
       atten.planner_name,
       atten.institute_name,
       atten.cpp_assistant,
       atten.cpp_section,
       atten.cpp_unit,
       atten.cpp_complex_title,
       CASE
           WHEN atten.time >= 360 THEN
                   floor((atten.time + 120) / 60)
                   || (
                       CASE
                           WHEN mod(atten.time + 120, 60) <> 0 THEN
                                   ':'
                                   || mod(atten.time + 120, 60)
                           END
                       )
           ELSE
                   floor(atten.time / 60)
                   || (
                       CASE
                           WHEN mod(atten.time, 60) <> 0 THEN
                                   ':'
                                   || mod(atten.time, 60)
                           END
                       )
           END time
FROM (
         SELECT DISTINCT std.personnel_no                                                           AS personalnum,
                         std.emp_no                                                                 AS personalnum2,
                         std.national_code                                                          AS nationalcode,
                         std.first_name
                             || ' '
                             || std.last_name                                                       AS name,
                         dep.C_MOJTAME_TITLE                                                        AS ccparea,
                         dep.c_omor_title                                                           AS ccpaffairs,

                         dep.c_moavenat_title                                                       AS cpp_assistant,
                         dep.c_ghesmat_title                                                        AS cpp_section,
                         dep.c_vahed_title                                                          AS cpp_unit,
                         dep.C_MOJTAME_TITLE                                                        AS cpp_complex_title,


                         personnel.personeltype                                                     AS peopletype,
                         class.c_code                                                               AS classcode,
                         class.c_title_class                                                        AS classname,
                         csession.c_session_date,
                         plnner_dep.C_HOZE_TITLE                                                    as planner_complex,
                         CONCAT(CONCAT(personelPlanner.FIRST_NAME, ' '), personelPlanner.LAST_NAME) as planner_name,
                         organizer_ins.C_TITLE_FA                                                   as institute_name,
                         SUM((to_number(substr(csession.c_session_end_hour, 1, 2)) * 60 +
                              to_number(substr(csession.c_session_end_hour, 4,
                                               2))) - (to_number(substr(csession.c_session_start_hour, 1, 2)) * 60 +
                                                       to_number(substr(csession.c_session_start_hour
                                                           , 4, 2))))                               AS time
         FROM tbl_attendance att
                  INNER JOIN tbl_student std ON att.f_student = std.id
                  INNER JOIN (
             SELECT * FROM (
                         select row_number() over(partition by un.national_code order by un.date_ desc) rw ,un.* from (
                         SELECT CAST("P_TYPE" AS VARCHAR2(50)) personelType,
                                "PERSONNEL_NO",
                                national_code,
                                first_name,
                                last_name,
                                f_department_id
                               ,nvl(employment_date,to_date('1900-01-01','yyyy-mm-dd')) as date_
                         from tbl_personnel where tbl_personnel.deleted = 0
                         union all
                         SELECT CAST('personnel_registered' AS VARCHAR2(50)) personelType,
                                "PERSONNEL_NO",
                                national_code,
                                first_name,
                                last_name,
                                f_department_id
                               ,nvl(d_last_modified_date ,to_date('1900-01-01','yyyy-mm-dd'))as date_
                         FROM tbl_personnel_registered )un) where rw = 1
         ) personnel ON std.national_code = personnel.national_code
                  LEFT JOIN tbl_department dep ON dep.id = personnel.f_department_id
                  INNER JOIN tbl_session csession ON att.f_session = csession.id
                  INNER JOIN tbl_class class ON csession.f_class_id = class.id
                  LEFT JOIN tbl_personnel personelPlanner on personelPlanner.id = class.f_planner
                  LEFT JOIN tbl_department plnner_dep on plnner_dep.id = personelPlanner.f_department_id
                  LEFT JOIN TBL_INSTITUTE organizer_ins on class.F_INSTITUTE_ORGANIZER = organizer_ins.ID
         WHERE att.c_state = '2'
         GROUP BY std.personnel_no,
                  std.emp_no,
                  std.national_code,
                  std.first_name
                      || ' '
                      || std.last_name,
                  dep.C_MOJTAME_TITLE,
                  dep.c_omor_title,
                  dep.c_moavenat_title,
                  dep.c_ghesmat_title,
                  dep.c_vahed_title,
                  personnel.personeltype,
                  class.c_code,
                  class.c_title_class,
                  csession.c_session_date,
                  plnner_dep.c_hoze_title,
                  personelPlanner.FIRST_NAME,
                  personelPlanner.LAST_NAME,
                  organizer_ins.C_TITLE_FA
     ) atten
             ]]>
        </createView>
    </changeSet>

    <changeSet author="zare" id="abiz-2176">
        <createView viewName="VIEW_TRAINING_POST_REPORT" replaceIfExists="true">
            <![CDATA[
                SELECT tr_post_view.* ,dep.C_MOJTAME_TITLE ,dep.C_MOJTAME_CODE FROM (SELECT
    tp.id,
    tp.c_created_by,
    tp.d_created_date,
    tp.e_deleted,
    tp.e_enabled,
    tp.c_last_modified_by,
    tp.d_last_modified_date,
    tp.n_version,
    tp.c_code,
    tp.c_title_fa,
    tp.c_affairs,
    tp.c_area,
    tp.c_assistance,
    tp.c_cost_center_title_fa,
    tp.c_cost_center_code,
    tp.c_section,
    tp.c_unit,
    tp.f_department_id,
    tp.f_post_grade_id,
    tp.f_job_id,
    tp.d_last_modified_date_na,
    tp.c_modified_by_na,
    tp.c_people_type,
    j.c_title_fa    AS job_c_title_fa,
    j.c_code        AS job_c_code,
    pg.c_title_fa   AS post_grade_c_title_fa,
    pg.c_code       AS post_grade_c_code,
    COUNT(DISTINCT na.f_competence) AS n_competence_count
FROM
    tbl_training_post                                             tp
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_needs_assessment
        WHERE
            c_object_type = 'TrainingPost'
            AND e_deleted IS NULL
            AND e_enabled IS NULL
    ) na ON tp.id = na.f_object
    LEFT JOIN tbl_post_training_post                                        ptp ON tp.id = ptp.f_training_post_id
    LEFT JOIN (
        SELECT
            *
        FROM
            tbl_post
        WHERE
            e_deleted IS NULL
            AND e_enabled IS NULL
    ) p ON p.id = ptp.f_post_id
    LEFT JOIN tbl_job                                                       j ON j.id = tp.f_job_id
    LEFT JOIN tbl_post_grade                                                pg ON pg.id = tp.f_post_grade_id
GROUP BY
    tp.id,
    tp.c_created_by,
    tp.d_created_date,
    tp.e_deleted,
    tp.e_enabled,
    tp.c_last_modified_by,
    tp.d_last_modified_date,
    tp.n_version,
    tp.c_code,
    tp.c_title_fa,
    tp.c_affairs,
    tp.c_area,
    tp.c_assistance,
    tp.c_cost_center_title_fa,
    tp.c_cost_center_code,
    tp.c_section,
    tp.c_unit,
    tp.f_department_id,
    tp.f_post_grade_id,
    tp.f_job_id,
    tp.d_last_modified_date_na,
    tp.c_modified_by_na,
    tp.c_people_type,
    j.c_title_fa,
    j.c_code,
    pg.c_title_fa,
    pg.c_code) tr_post_view  LEFT JOIN tbl_department dep on dep.id = tr_post_view.f_department_id
            ]]>
        </createView>
    </changeSet>

    <changeSet author="MShahabi" id="1799887766557-011">
        <createView viewName="VIEW_NEED_ASSESSMENT_IN_RANGE_TIME" replaceIfExists="true">
            <![CDATA[
                SELECT "ID","POST","C_CODE","C_TITLE_FA","C_MOJTAME_TITLE","C_ASSISTANCE","C_AFFAIRS","C_SECTION","C_UNIT","NAME","UPDATETIME","N_VERSION" FROM(
                    SELECT
                    tp.id ,
                         'پست' as post ,
                        tp.c_code,
                        tp.c_title_fa,
                        tp.c_mojtame_title,
                        tp.c_assistance,
                        tp.c_affairs,
                        tp.c_section,
                        tp.c_unit,
                        tp.d_last_modified_date_na as updateTime,
                        NVL2(p.last_name,p.first_name || p.last_name, tp.c_modified_by_na) as name,
                        tp.N_VERSION
                    FROM
                        tbl_training_post tp
                        left join (select * from tbl_personnel where deleted = 0) p ON tp.c_modified_by_na = p.c_username
                    WHERE
                        tp.c_modified_by_na IS NOT NULL

                    UNION ALL
                    SELECT
                    tp.id ,
                        'پست انفرادی'  as post,
                        tp.c_code,
                        tp.c_title_fa,
                        tp.c_mojtame_title,
                        tp.c_assistance,
                        tp.c_affairs,
                        tp.c_section,
                        tp.c_unit,
                        tp.d_last_modified_date_na as updateTime,
                        NVL2(p.last_name,p.first_name || p.last_name, tp.c_modified_by_na) as name,
                        tp.N_VERSION
                    FROM
                        tbl_post tp
                        left join (select * from tbl_personnel where deleted = 0) p ON tp.c_modified_by_na = p.c_username
                    WHERE
                        tp.c_modified_by_na IS NOT NULL
                )
                ORDER BY
                    name
            ]]>
        </createView>
    </changeSet>

    <changeSet author="MShahabi" id="1799887766557-012">
        <createView viewName="VIEW_TRAINING_POST" replaceIfExists="true">
            <![CDATA[
                SELECT
                    tp.id,
                    tp.c_created_by,
                    tp.d_created_date,
                    tp.e_deleted,
                    tp.e_enabled,
                    tp.c_last_modified_by,
                    tp.d_last_modified_date,
                    tp.n_version,
                    tp.c_code,
                    tp.c_title_fa,
                    tp.c_affairs,
                    tp.c_area,
                    tp.c_mojtame_title,
                    tp.c_assistance,
                    tp.c_cost_center_title_fa,
                    tp.c_cost_center_code,
                    tp.c_section,
                    tp.c_unit,
                    tp.f_department_id,
                    tp.f_post_grade_id,
                    tp.f_job_id,
                    tp.d_last_modified_date_na,
                    tp.c_modified_by_na,
                    tp.c_people_type,
                    j.c_title_fa AS job_c_title_fa,
                    j.c_code AS job_c_code,
                    pg.c_title_fa AS post_grade_c_title_fa,
                    pg.c_code AS post_grade_c_code,
                    COUNT(DISTINCT na.f_competence) AS n_competence_count,
                    COUNT(DISTINCT prs.id) AS n_personnel_count
                FROM
                    tbl_training_post tp
                    LEFT JOIN (
                        SELECT
                            *
                        FROM
                            tbl_needs_assessment
                        WHERE
                            c_object_type = 'TrainingPost'
                            AND   e_deleted IS NULL
                            AND   e_enabled IS NULL
                    ) na ON tp.id = na.f_object
                    LEFT JOIN tbl_post_training_post ptp ON tp.id = ptp.f_training_post_id
                    LEFT JOIN (
                        SELECT
                            *
                        FROM
                            tbl_post
                        WHERE
                            e_deleted IS NULL
                            AND   e_enabled IS NULL
                    ) p ON p.id = ptp.f_post_id
                    LEFT JOIN view_active_personnel prs ON p.id = prs.f_post_id
                    LEFT JOIN tbl_job j ON j.id = tp.f_job_id
                    LEFT JOIN tbl_post_grade pg ON pg.id = tp.f_post_grade_id
                GROUP BY
                    tp.id,
                    tp.c_created_by,
                    tp.d_created_date,
                    tp.e_deleted,
                    tp.e_enabled,
                    tp.c_last_modified_by,
                    tp.d_last_modified_date,
                    tp.n_version,
                    tp.c_code,
                    tp.c_title_fa,
                    tp.c_affairs,
                    tp.c_area,
                    tp.c_mojtame_title,
                    tp.c_assistance,
                    tp.c_cost_center_title_fa,
                    tp.c_cost_center_code,
                    tp.c_section,
                    tp.c_unit,
                    tp.f_department_id,
                    tp.f_post_grade_id,
                    tp.f_job_id,
                    tp.d_last_modified_date_na,
                    tp.c_modified_by_na,
                    tp.c_people_type,
                    j.c_title_fa,
                    j.c_code,
                    pg.c_title_fa,
                    pg.c_code
            ]]>
        </createView>
    </changeSet>

    <changeSet author="MShahabi" id="1799887766557-013">
        <createView viewName="VIEW_POST" replaceIfExists="true">
            <![CDATA[
                SELECT
                    p.id,
                    p.c_created_by,
                    p.d_created_date,
                    p.e_deleted,
                    p.e_enabled,
                    p.c_last_modified_by,
                    p.d_last_modified_date,
                    p.n_version,
                    p.c_code,
                    p.c_title_fa,
                    p.c_affairs,
                    p.c_area,
                    p.c_mojtame_title,
                    p.c_assistance,
                    p.c_cost_center_title_fa,
                    p.c_cost_center_code,
                    p.c_section,
                    p.c_unit,
                    p.f_post_grade_id,
                    p.f_job_id,
                    p.d_last_modified_date_na,
                    p.c_modified_by_na,
                    p.c_people_type,
                    j.c_title_fa AS job_c_title_fa,
                    j.c_code AS job_c_code,
                    pg.c_title_fa AS post_grade_c_title_fa,
                    pg.c_code AS post_grade_c_code,
                    COUNT(DISTINCT na.f_competence) AS n_competence_count,
                    COUNT(DISTINCT prs.id) AS n_personnel_count
                FROM
                    tbl_post p
                    LEFT JOIN (
                        SELECT
                            *
                        FROM
                            tbl_needs_assessment
                        WHERE
                            c_object_type = 'Post'
                            AND   e_deleted IS NULL
                            AND   e_enabled IS NULL
                    ) na ON p.id = na.f_object
                    LEFT JOIN view_active_personnel prs ON p.id = prs.f_post_id
                    INNER JOIN tbl_job j ON j.id = p.f_job_id
                    INNER JOIN tbl_post_grade pg ON pg.id = p.f_post_grade_id
                GROUP BY
                    p.id,
                    p.c_created_by,
                    p.d_created_date,
                    p.e_deleted,
                    p.e_enabled,
                    p.c_last_modified_by,
                    p.d_last_modified_date,
                    p.n_version,
                    p.c_code,
                    p.c_title_fa,
                    p.c_affairs,
                    p.c_area,
                    p.c_mojtame_title,
                    p.c_assistance,
                    p.c_cost_center_title_fa,
                    p.c_cost_center_code,
                    p.c_section,
                    p.c_unit,
                    p.f_post_grade_id,
                    p.f_job_id,
                    p.d_last_modified_date_na,
                    p.c_modified_by_na,
                    p.c_people_type,
                    j.c_title_fa,
                    j.c_code,
                    pg.c_title_fa,
                    pg.c_code
            ]]>
        </createView>
    </changeSet>

    <changeSet author="nick (generated)" id="1620474474790-583">
        <createView viewName="VIEW_CONTINUOUS_STATUS_REPORT" replaceIfExists="true">
            <![CDATA[
                SELECT tbl_class.c_status                             AS class_status,
                       view_active_personnel.id                       AS personnel_id,
                       view_active_personnel.emp_no                   AS personnel_emp_no,
                       view_active_personnel.personnel_no             AS personnel_personnel_no,
                       view_active_personnel.national_code            AS personnel_national_code,
                       view_active_personnel.first_name               AS personnel_first_name,
                       view_active_personnel.last_name                AS personnel_last_name,
                       tbl_post.c_title_fa                            AS personnel_post_title,
                       tbl_class.id                                   AS class_id,
                       tbl_class.c_code                               AS class_code,
                       tbl_course.id                                  AS course_id,
                       tbl_course.c_code                              AS course_code,
                       tbl_course.c_title_fa                          AS course_title_fa,
                       tbl_class.c_start_date                         AS class_start_date,
                       tbl_class.c_end_date                           AS class_end_date,
                       tbl_class.n_h_duration                         AS class_h_duration,
                       substr(tbl_class.c_start_date, 1, 4)           AS class_year,
                       tbl_term.c_code                                AS term_code,
                       tbl_term.c_title_fa                            AS term_title_fa,
                       tbl_term.id                                    AS term_id,
                       department.c_hoze_title                        AS personnel_complex_title,
                       view_active_personnel.company_name             AS personnel_company_name,
                       department.c_hoze_title                        AS personnel_ccp_area,
                       department.c_moavenat_title                    AS personnel_ccp_assistant,
                       department.c_omor_title                        AS personnel_ccp_affairs,
                       department.c_vahed_title                       AS personnel_ccp_unit,
                       department.c_ghesmat_title                     AS personnel_ccp_section,
                       tbl_post_grade.c_title_fa                      AS personnel_post_grade_title,
                       tbl_post_grade.id                              AS personnel_post_grade_id,
                       CASE
                           WHEN view_personnel_course_na_report.na_priority_id IS NOT NULL THEN
                               'نیازسنجی'
                           ELSE
                               'غیر نیازسنجی'
                           END                                        AS coursetype,
                       view_personnel_course_na_report.na_priority_id AS na_priority_id
                FROM (
                         SELECT *
                         FROM tbl_class
                         WHERE c_status IN (
                                            1,
                                            2,
                                            3,
                                            4,
                                            5
                             )
                     ) tbl_class
                         INNER JOIN tbl_course ON tbl_course.id = tbl_class.f_course
                         INNER JOIN tbl_term ON tbl_term.id = tbl_class.f_term
                         INNER JOIN tbl_class_student ON tbl_class_student.class_id = tbl_class.id
                         INNER JOIN tbl_student ON tbl_student.id = tbl_class_student.student_id
                         INNER JOIN view_active_personnel ON view_active_personnel.national_code = tbl_student.national_code
                         LEFT JOIN tbl_department department ON department.id = view_active_personnel.f_department_id
                         LEFT JOIN view_personnel_course_na_report
                                   ON view_active_personnel.id = view_personnel_course_na_report.personnel_id
                                       AND tbl_course.id = view_personnel_course_na_report.course_id
                         LEFT JOIN tbl_post ON view_active_personnel.f_post_id = tbl_post.id
                         LEFT JOIN tbl_post_grade ON tbl_post.f_post_grade_id = tbl_post_grade.id
                UNION ALL

                SELECT tbl_class.c_status                     AS class_status,
                       tbl_personnel_registered.id            AS personnel_id,
                       tbl_personnel_registered.emp_no        AS personnel_emp_no,
                       tbl_personnel_registered.personnel_no  AS personnel_personnel_no,
                       tbl_personnel_registered.national_code AS personnel_national_code,
                       tbl_personnel_registered.first_name    AS personnel_first_name,
                       tbl_personnel_registered.last_name     AS personnel_last_name,
                       tbl_post.c_title_fa                    AS personnel_post_title,
                       tbl_class.id                           AS class_id,
                       tbl_class.c_code                       AS class_code,
                       tbl_course.id                          AS course_id,
                       tbl_course.c_code                      AS course_code,
                       tbl_course.c_title_fa                  AS course_title_fa,
                       tbl_class.c_start_date                 AS class_start_date,
                       tbl_class.c_end_date                   AS class_end_date,
                       tbl_class.n_h_duration                 AS class_h_duration,
                       substr(tbl_class.c_start_date, 1, 4)   AS class_year,
                       tbl_term.c_code                        AS term_code,
                       tbl_term.c_title_fa                    AS term_title_fa,
                       tbl_term.id                            AS term_id,
                       department.c_hoze_title                AS personnel_complex_title,
                       tbl_personnel_registered.company_name  AS personnel_company_name,
                       department.c_hoze_title                AS personnel_cccp_area,
                       department.c_moavenat_title            AS personnel_ccp_assistant,
                       department.c_omor_title                AS ccp_affairs,
                       department.c_vahed_title               AS ccp_unit,
                       department.c_ghesmat_title             AS personnel_ccp_section,
                       tbl_post_grade.c_title_fa              AS personnel_post_grade_title,
                       tbl_post_grade.id                      AS personnel_post_grade_id,
                       NULL                                   AS coursetype,
                       NULL                                   AS na_priority_id
                FROM (
                         SELECT *
                         FROM tbl_class
                         WHERE c_status IN (
                                            1,
                                            2,
                                            3,
                                            4,
                                            5
                             )
                     ) tbl_class
                         INNER JOIN tbl_course ON tbl_course.id = tbl_class.f_course
                         INNER JOIN tbl_term ON tbl_term.id = tbl_class.f_term
                         INNER JOIN tbl_class_student ON tbl_class_student.class_id = tbl_class.id
                         INNER JOIN tbl_student ON tbl_student.id = tbl_class_student.student_id
                         INNER JOIN tbl_personnel_registered ON tbl_personnel_registered.national_code = tbl_student.national_code
                         LEFT JOIN tbl_department department ON department.id = tbl_personnel_registered.f_department_id
                         LEFT JOIN tbl_post ON tbl_personnel_registered.f_post_id = tbl_post.id
                         LEFT JOIN tbl_post_grade ON tbl_post.f_post_grade_id = tbl_post_grade.id
            ]]>
        </createView>
    </changeSet>

    <changeSet author="nick (generated)" id="1620726268867-593">
        <createView viewName="VIEW_EVALUATION_STATICAL_REPORT" replaceIfExists="true">
            <![CDATA[
                SELECT                 rowNum                                                                     as id,
                       term.C_TITLE_FA                                                            as term_TitleFa,
                       personal.C_FIRST_NAME_FA                                                   as teacher_FirstName,
                       personal.C_LAST_NAME_FA                                                    as teacher_LastName,
                       CONCAT(CONCAT(personal.C_FIRST_NAME_FA, ' '), personal.C_LAST_NAME_FA)     as teacher_FullName,
                       tclass.N_H_DURATION                                                        as tclass_n_duration,
                       tclass.F_INSTITUTE_ORGANIZER                                               as tclass_organizer,
                       tclass.C_STATUS                                                            as tclass_status,
                       tclass.f_cancel_class_reason                                               as class_cancel_reason_id,
                       parameterValue.C_TITLE                                                     as class_cancel_reason_title,
                       tclass.F_PLANNER                                                           as tclass_planner,
                       tclass.F_SUPERVISOR                                                        as tclass_supervisor,
                       tclass.c_created_by                                                        as c_created_by,
                       tclass.d_created_date                                                      as d_created_date,
                       tclass.e_deleted                                                           as e_deleted,
                       tclass.e_enabled                                                           as e_enabled,
                       tclass.c_last_modified_by                                                  as c_last_modified_by,
                       tclass.d_last_modified_date                                                as d_last_modified_date,
                       tclass.n_version                                                           as n_version,
                       tclass.ID                                                                  as tclass_id,
                       evaluationanalysis.ID                                                      as evaluationanalysis_id,
                       unit.ID                                                                    as unit_id,
                       tclass.C_CODE                                                              as tclass_c_code,
                       tclass.F_INSTITUTE                                                         as institute_id,
                       tclass.F_TEACHER                                                           as teacher_id,
                       tclass.F_TERM                                                              as term_id,
                       tclass.C_START_DATE                                                        as tclass_c_start_date,
                       tclass.C_END_DATE                                                          as tclass_c_end_date,
                       tclass.C_REASON                                                            as tclass_reason,
                       tclass.C_EVALUATION                                                        as tclass_evaluation,
                       tclass.c_teaching_type                                                     as tclass_teaching_type,
                       SUBSTR(tclass.C_START_DATE, 1, 4)                                          as tclass_year,
                       course.C_CODE                                                              as course_c_code,
                       course.E_TECHNICAL_TYPE                                                    as course_technical_type,
                       course.E_RUN_TYPE                                                          as course_run_type,
                       course.E_THEO_TYPE                                                         as course_theo_type,
                       course.E_LEVEL_TYPE                                                        as course_level_type,
                       course.CATEGORY_ID                                                         as course_category_id,
                       course.SUBCATEGORY_ID                                                      as course_subcategory_id,
                       course.C_TITLE_FA                                                          as course_c_title_fa,
                       course.C_EVALUATION                                                        as course_c_evaluation,
                       plnner_dep.C_MOJTAME_TITLE                                                 as planner_complex,
                       CONCAT(CONCAT(personelPlanner.FIRST_NAME, ' '), personelPlanner.LAST_NAME) as planner_name,
                       organizer_ins.C_TITLE_FA                                                   as institute_name,
                       CASE WHEN students.counts IS NULL THEN 0 ELSE students.counts END          AS tclass_students_count,
                       evaluationanalysis.C_BEHAVIORAL_GRADE                                      as evaluationanalysis_c_behavioral_grade,
                       evaluationanalysis.B_BEHAVIORAL_PASS                                       as evaluationanalysis_c_behavioral_pass,
                       evaluationanalysis.C_EFFECTIVENESS_GRADE                                   as evaluationanalysis_c_effectiveness_grade,
                       evaluationanalysis.B_EFFECTIVENESS_PASS                                    as evaluationanalysis_c_effectiveness_pass,
                       evaluationanalysis.C_LEARNING_GRADE                                        as evaluationanalysis_c_learning_grade,
                       evaluationanalysis.B_LEARNING_PASS                                         as evaluationanalysis_c_learning_pass,
                       evaluationanalysis.C_REACTION_GRADE                                        as evaluationanalysis_c_reaction_grade,
                       evaluationanalysis.B_REACTION_PASS                                         as evaluationanalysis_c_reaction_pass,
                       evaluationanalysis.C_RESULTS_GRADE                                         as evaluationanalysis_c_results_grade,
                       evaluationanalysis.B_RESULTS_PASS                                          as evaluationanalysis_c_results_pass,
                       evaluationanalysis.C_TEACHER_GRADE                                         as evaluationanalysis_c_teacher_grade,
                       evaluationanalysis.B_TEACHER_PASS                                          as evaluationanalysis_c_teacher_pass,
                       CASE WHEN evaluationanalysis.C_REACTION_GRADE IS NULL THEN 0 ELSE 1 END    as evaluationanalysis_b_reaction_status,
                       CASE WHEN evaluationanalysis.C_BEHAVIORAL_GRADE IS NULL THEN 0 ELSE 1 END  as evaluationanalysis_b_behavioral_status,
                       CASE WHEN evaluationanalysis.C_LEARNING_GRADE IS NULL THEN 0 ELSE 1 END    as evaluationanalysis_b_learning_status,
                       CASE WHEN evaluationanalysis.C_RESULTS_GRADE IS NULL THEN 0 ELSE 1 END     as evaluationanalysis_b_results_status,
                       CASE WHEN evaluationanalysis.C_TEACHER_GRADE IS NULL THEN 0 ELSE 1 END     as evaluationanalysis_b_teacher_status,
                       CASE
                           WHEN evaluationanalysis.C_EFFECTIVENESS_GRADE IS NULL THEN 0
                           ELSE 1 END                                                             as evaluationanalysis_b_effectiveness_status,
                           STATISTICS_.PRESENCE,
                           STATISTICS_.ABSENCE,
                           STATISTICS_.UNKNOWN
                FROM TBL_CLASS tclass
                         INNER JOIN TBL_COURSE course
                                    ON tclass.F_COURSE = course.ID
                         LEFT JOIN TBL_TARGET_SOCIETY unit
                                   ON unit.F_CLASS_ID = tclass.ID
                         LEFT JOIN (SELECT TBL_CLASS_STUDENT.CLASS_ID,
                                           count(TBL_CLASS_STUDENT.ID) as counts
                                    FROM TBL_CLASS_STUDENT
                                    GROUP BY TBL_CLASS_STUDENT.CLASS_ID) students ON students.CLASS_ID = tclass.ID
                         LEFT JOIN TBL_EVALUATION_ANALYSIS evaluationanalysis
                                   ON evaluationanalysis.F_TCLASS = tclass.ID
                         INNER JOIN TBL_TERM term ON tclass.F_TERM = term.ID
                         INNER JOIN TBL_TEACHER teacher ON tclass.F_TEACHER = teacher.ID
                         LEFT JOIN TBL_PERSONAL_INFO personal ON teacher.F_PERSONALITY = personal.ID
                         LEFT JOIN tbl_personnel personelPlanner on personelPlanner.id = tclass.f_planner
                         LEFT JOIN tbl_department plnner_dep on plnner_dep.id = personelPlanner.f_department_id
                         LEFT JOIN TBL_INSTITUTE organizer_ins on tclass.F_INSTITUTE_ORGANIZER = organizer_ins.ID
                         LEFT JOIN TBL_PARAMETER_VALUE parameterValue on tclass.f_cancel_class_reason = parameterValue.ID
                         LEFT JOIN(
                         SELECT
                            *
                        FROM
                            (
                                SELECT
                                    att_state,
                                    f_class_id,
                                    s_hour
                                FROM
                                    (
                                        SELECT
                                            CASE
                                                WHEN ( att.c_state = 1
                                                       OR att.c_state = 2 ) THEN
                                                    'PRESENCE'
                                                WHEN ( att.c_state = 3
                                                       OR att.c_state = 4 ) THEN
                                                    'ABSENCE'
                                                ELSE
                                                    'UNKNOWN'
                                            END AS att_state,
                                            att.f_session,
                                            att.f_student,
                                            sess.f_class_id,
                                            sess.s_hour
                                        FROM
                                            tbl_attendance att
                                            INNER JOIN (
                                                SELECT
                                                    ( to_number(regexp_substr(c_session_end_hour, '[^:]+', 3, 1)) + 60 * to_number
                                                    (regexp_substr(c_session_end_hour, '[^:]+', 1, 1)) - ( to_number(regexp_substr
                                                    (c_session_start_hour, '[^:]+', 3, 1)) + 60 * to_number(regexp_substr(c_session_start_hour
                                                    , '[^:]+', 1, 1)) ) ) / 60 AS s_hour,
                                                    id,
                                                    f_class_id
                                                FROM
                                                    tbl_session
                                            ) sess ON ( att.f_session = sess.id )
                                    )
                            ) PIVOT (
                                SUM ( s_hour )
                                FOR att_state
                                IN ( 'PRESENCE' AS presence, 'ABSENCE' AS absence, 'UNKNOWN' AS unknown )
                            )
                           ) STATISTICS_ on(tclass.id = STATISTICS_.f_class_id)
            ]]>
        </createView>
    </changeSet>

    <changeSet author="MShahabi" id="1799887766557-017">
        <createView viewName="VIEW_EVALUATION_STATICAL_REPORT" replaceIfExists="true">
            <![CDATA[
                SELECT
                       rowNum                                                                     as id,
                       term.C_TITLE_FA                                                            as term_TitleFa,
                       personal.C_FIRST_NAME_FA                                                   as teacher_FirstName,
                       personal.C_LAST_NAME_FA                                                    as teacher_LastName,
                       CONCAT(CONCAT(personal.C_FIRST_NAME_FA, ' '), personal.C_LAST_NAME_FA)     as teacher_FullName,
                       tclass.N_H_DURATION                                                        as tclass_n_duration,
                       tclass.F_INSTITUTE_ORGANIZER                                               as tclass_organizer,
                       tclass.C_STATUS                                                            as tclass_status,
                       tclass.f_cancel_class_reason                                               as class_cancel_reason_id,
                       parameterValue.C_TITLE                                                     as class_cancel_reason_title,
                       tclass.F_PLANNER                                                           as tclass_planner,
                       tclass.F_SUPERVISOR                                                        as tclass_supervisor,
                       tclass.c_created_by                                                        as c_created_by,
                       tclass.d_created_date                                                      as d_created_date,
                       tclass.e_deleted                                                           as e_deleted,
                       tclass.e_enabled                                                           as e_enabled,
                       tclass.c_last_modified_by                                                  as c_last_modified_by,
                       tclass.d_last_modified_date                                                as d_last_modified_date,
                       tclass.n_version                                                           as n_version,
                       tclass.ID                                                                  as tclass_id,
                       evaluationanalysis.ID                                                      as evaluationanalysis_id,
                       unit.ID                                                                    as unit_id,
                       tclass.C_CODE                                                              as tclass_c_code,
                       tclass.F_INSTITUTE                                                         as institute_id,
                       tclass.F_TEACHER                                                           as teacher_id,
                       tclass.F_TERM                                                              as term_id,
                       tclass.C_START_DATE                                                        as tclass_c_start_date,
                       tclass.C_END_DATE                                                          as tclass_c_end_date,
                       tclass.C_REASON                                                            as tclass_reason,
                       tclass.C_EVALUATION                                                        as tclass_evaluation,
                       tclass.c_teaching_type                                                     as tclass_teaching_type,
                       SUBSTR(tclass.C_START_DATE, 1, 4)                                          as tclass_year,
                       course.C_CODE                                                              as course_c_code,
                       course.E_TECHNICAL_TYPE                                                    as course_technical_type,
                       course.E_RUN_TYPE                                                          as course_run_type,
                       course.E_THEO_TYPE                                                         as course_theo_type,
                       course.E_LEVEL_TYPE                                                        as course_level_type,
                       course.CATEGORY_ID                                                         as course_category_id,
                       course.SUBCATEGORY_ID                                                      as course_subcategory_id,
                       course.C_TITLE_FA                                                          as course_c_title_fa,
                       course.C_EVALUATION                                                        as course_c_evaluation,
                       plnner_dep.C_MOJTAME_TITLE                                                 as planner_complex,
                       plnner_dep.C_MOAVENAT_TITLE                                                as planner_assistant,
                       plnner_dep.C_OMOR_TITLE                                                    as planner_affairs,
                       plnner_dep.C_GHESMAT_TITLE                                                 as planner_section,
                       plnner_dep.C_VAHED_TITLE                                                   as planner_unit,
                       CONCAT(CONCAT(personelPlanner.FIRST_NAME, ' '), personelPlanner.LAST_NAME) as planner_name,
                       organizer_ins.C_TITLE_FA                                                   as institute_name,
                       CASE WHEN students.counts IS NULL THEN 0 ELSE students.counts END          AS tclass_students_count,
                       evaluationanalysis.C_BEHAVIORAL_GRADE                                      as evaluationanalysis_c_behavioral_grade,
                       evaluationanalysis.B_BEHAVIORAL_PASS                                       as evaluationanalysis_c_behavioral_pass,
                       evaluationanalysis.C_EFFECTIVENESS_GRADE                                   as evaluationanalysis_c_effectiveness_grade,
                       evaluationanalysis.B_EFFECTIVENESS_PASS                                    as evaluationanalysis_c_effectiveness_pass,
                       evaluationanalysis.C_LEARNING_GRADE                                        as evaluationanalysis_c_learning_grade,
                       evaluationanalysis.B_LEARNING_PASS                                         as evaluationanalysis_c_learning_pass,
                       evaluationanalysis.C_REACTION_GRADE                                        as evaluationanalysis_c_reaction_grade,
                       evaluationanalysis.B_REACTION_PASS                                         as evaluationanalysis_c_reaction_pass,
                       evaluationanalysis.C_RESULTS_GRADE                                         as evaluationanalysis_c_results_grade,
                       evaluationanalysis.B_RESULTS_PASS                                          as evaluationanalysis_c_results_pass,
                       evaluationanalysis.C_TEACHER_GRADE                                         as evaluationanalysis_c_teacher_grade,
                       evaluationanalysis.B_TEACHER_PASS                                          as evaluationanalysis_c_teacher_pass,
                       CASE WHEN evaluationanalysis.C_REACTION_GRADE IS NULL THEN 0 ELSE 1 END    as evaluationanalysis_b_reaction_status,
                       CASE WHEN evaluationanalysis.C_BEHAVIORAL_GRADE IS NULL THEN 0 ELSE 1 END  as evaluationanalysis_b_behavioral_status,
                       CASE WHEN evaluationanalysis.C_LEARNING_GRADE IS NULL THEN 0 ELSE 1 END    as evaluationanalysis_b_learning_status,
                       CASE WHEN evaluationanalysis.C_RESULTS_GRADE IS NULL THEN 0 ELSE 1 END     as evaluationanalysis_b_results_status,
                       CASE WHEN evaluationanalysis.C_TEACHER_GRADE IS NULL THEN 0 ELSE 1 END     as evaluationanalysis_b_teacher_status,
                       CASE
                           WHEN evaluationanalysis.C_EFFECTIVENESS_GRADE IS NULL THEN 0
                           ELSE 1 END                                                             as evaluationanalysis_b_effectiveness_status,
                           STATISTICS_.PRESENCE,
                           STATISTICS_.ABSENCE,
                           STATISTICS_.UNKNOWN
                FROM TBL_CLASS tclass
                         INNER JOIN TBL_COURSE course
                                    ON tclass.F_COURSE = course.ID
                         LEFT JOIN TBL_TARGET_SOCIETY unit
                                   ON unit.F_CLASS_ID = tclass.ID
                         LEFT JOIN (SELECT TBL_CLASS_STUDENT.CLASS_ID,
                                           count(TBL_CLASS_STUDENT.ID) as counts
                                    FROM TBL_CLASS_STUDENT
                                    GROUP BY TBL_CLASS_STUDENT.CLASS_ID) students ON students.CLASS_ID = tclass.ID
                         LEFT JOIN TBL_EVALUATION_ANALYSIS evaluationanalysis
                                   ON evaluationanalysis.F_TCLASS = tclass.ID
                         INNER JOIN TBL_TERM term ON tclass.F_TERM = term.ID
                         INNER JOIN TBL_TEACHER teacher ON tclass.F_TEACHER = teacher.ID
                         LEFT JOIN TBL_PERSONAL_INFO personal ON teacher.F_PERSONALITY = personal.ID
                         LEFT JOIN tbl_personnel personelPlanner on personelPlanner.id = tclass.f_planner
                         LEFT JOIN tbl_department plnner_dep on plnner_dep.id = personelPlanner.f_department_id
                         LEFT JOIN TBL_INSTITUTE organizer_ins on tclass.F_INSTITUTE_ORGANIZER = organizer_ins.ID
                         LEFT JOIN TBL_PARAMETER_VALUE parameterValue on tclass.f_cancel_class_reason = parameterValue.ID
                         LEFT JOIN(
                         SELECT
                            *
                        FROM
                            (
                                SELECT
                                    att_state,
                                    f_class_id,
                                    s_hour
                                FROM
                                    (
                                        SELECT
                                            CASE
                                                WHEN ( att.c_state = 1
                                                       OR att.c_state = 2 ) THEN
                                                    'PRESENCE'
                                                WHEN ( att.c_state = 3
                                                       OR att.c_state = 4 ) THEN
                                                    'ABSENCE'
                                                ELSE
                                                    'UNKNOWN'
                                            END AS att_state,
                                            att.f_session,
                                            att.f_student,
                                            sess.f_class_id,
                                            sess.s_hour
                                        FROM
                                            tbl_attendance att
                                            INNER JOIN (
                                                SELECT
                                                    ( to_number(regexp_substr(c_session_end_hour, '[^:]+', 3, 1)) + 60 * to_number
                                                    (regexp_substr(c_session_end_hour, '[^:]+', 1, 1)) - ( to_number(regexp_substr
                                                    (c_session_start_hour, '[^:]+', 3, 1)) + 60 * to_number(regexp_substr(c_session_start_hour
                                                    , '[^:]+', 1, 1)) ) ) / 60 AS s_hour,
                                                    id,
                                                    f_class_id
                                                FROM
                                                    tbl_session
                                            ) sess ON ( att.f_session = sess.id )
                                    )
                            ) PIVOT (
                                SUM ( s_hour )
                                FOR att_state
                                IN ( 'PRESENCE' AS presence, 'ABSENCE' AS absence, 'UNKNOWN' AS unknown )
                            )
                           ) STATISTICS_ on(tclass.id = STATISTICS_.f_class_id)
            ]]>
        </createView>
    </changeSet>

    <changeSet author="MShahabi" id="1799887766557-018">
        <createView viewName="VIEW_COURSES_EVALUATION_REPORT" replaceIfExists="true">
            <![CDATA[
                SELECT
                    ROWNUM AS id,
                    cl.c_code AS class_code,
                    cl.c_status AS class_status,
                    cl.c_start_date AS class_start_date,
                    cl.c_end_date AS class_end_date,
                    co.c_code AS course_code,
                    co.c_title_fa AS course_titlefa,
                    cat.c_title_fa AS category_titlefa,
                    sucat.c_title_fa AS sub_category_titlefa,
                    cs.status_reaction AS class_student_status_reaction,
                    ea.c_reaction_grade AS evaluation_analysis_reaction_grade,
                    ea.b_reaction_pass AS evaluation_analysis_reaction_pass,
                    ea.c_teacher_grade AS evaluation_analysis_teacher_grade,
                    ea.b_teacher_pass AS evaluation_analysis_teacher_pass
                FROM
                    tbl_class cl
                    INNER JOIN tbl_course co ON cl.f_course = co.id
                    INNER JOIN tbl_category cat ON cat.id = co.category_id
                    INNER JOIN tbl_sub_category sucat ON sucat.id = co.subcategory_id
                    INNER JOIN (
                        SELECT
                            tbl_class_student.class_id AS class_id,
                            SUM(
                                CASE
                                    WHEN tbl_class_student.evaluation_status_reaction = 2 THEN 0
                                    ELSE 1
                                END
                            ) AS status_reaction
                        FROM
                            tbl_class_student
                        GROUP BY
                            tbl_class_student.class_id
                    ) cs ON cl.id = cs.class_id
                    INNER JOIN tbl_evaluation_analysis ea ON cl.id = ea.f_tclass
            ]]>
        </createView>
    </changeSet>

</databaseChangeLog>