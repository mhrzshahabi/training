image: devops01.icico.net.ir/docker:01

stages:
  - build
  - package
  - deploy

build-dev:
  stage: build
  image: devops01.icico.net.ir/maven:3.8.3
  only:
    - dev
  script:
    - mvn -s .m2/settings.xml -P NICICO clean package
  artifacts:
    paths:
      - main/target/*.jar

package-dev:
  stage: package
  only:
    - dev
  script:
    - docker login -u $G_REG_USER -p $G_REG_PASSWD $G_REG_PUSH_URL
    - docker pull $G_REG_PULL_URL/$CI_PROJECT_NAME:dev || true
    - docker build --cache-from $G_REG_PULL_URL/$CI_PROJECT_NAME:dev -t $G_REG_PUSH_URL/$CI_PROJECT_NAME:dev .
    - docker push $G_REG_PUSH_URL/$CI_PROJECT_NAME:dev

deploy-dev:
  stage: deploy
  only:
    - dev
  script:
    - >
      sshpass -p "$G_DEV_SRV_PASSWD" ssh -o StrictHostKeyChecking=no $G_DEV_SRV_USER@$G_DEV_SRV_URL "
      docker stop $CI_PROJECT_NAME || true;
      docker rm $CI_PROJECT_NAME || true;
      docker rmi $G_REG_PULL_URL/$CI_PROJECT_NAME:dev || true;
      docker pull $G_REG_PULL_URL/$CI_PROJECT_NAME:dev;
      docker run -d \
        --net=$G_DCK_NET \
        -v /var/log/nicico:/var/log/nicico \
        -v /var/nicico:/var/nicico \
        -l traefik.backend=$CI_PROJECT_NAME \
        -l traefik.frontend.rule=PathPrefix:/training \
        -e PROFILE=Development \
        --restart=always \
        --name $CI_PROJECT_NAME \
        $G_REG_PULL_URL/$CI_PROJECT_NAME:dev
      "


build-prd:
  stage: build
  image: devops01.icico.net.ir/maven-3.6.1-jdk8:01
  only:
    - tags
  script:
    - mvn -P NICICO -s .m2/settings.xml versions:set -DnewVersion=$CI_COMMIT_TAG -DgenerateBackupPoms=false
    - mvn -P NICICO -s .m2/settings.xml clean deploy
  artifacts:
    paths:
      - main/target/*.jar

package-prd:
  stage: package
  only:
    - tags
  script:
    - docker login -u $G_REG_USER -p $G_REG_PASSWD $G_REG_PRD_PUSH_URL
    - docker build -t $G_REG_PRD_PUSH_URL/$CI_PROJECT_NAME:$CI_COMMIT_TAG .
    - docker push     $G_REG_PRD_PUSH_URL/$CI_PROJECT_NAME:$CI_COMMIT_TAG

deploy-prd:
  stage: deploy
  only:
    - tags
  script:
    - |
      sshpass -p "$G_PRD_SRV_PASSWD" ssh -o StrictHostKeyChecking=no $G_PRD_SRV_USER@$G_PRD_SRV_URL "

      echo Project = $CI_PROJECT_NAME - $CI_COMMIT_TAG
      echo ServiceID = \$(docker service ls --filter name=$CI_PROJECT_NAME -q)
      echo PRD - $G_PRD_SRV_PASSWD

      if [[ \$(docker service ls --filter name=$CI_PROJECT_NAME -q | wc -l) -eq 0 ]]; then
        echo '*** Create ***'
        docker service create \
          --network back-net \
          --network web-net \
          --mount 'type=volume,volume-driver=local,destination=/var/log/nicico/,volume-opt=type=nfs,volume-opt=device=:/var/log/nicico/,volume-opt=o=addr=apps-m01' \
          --mount 'type=volume,volume-driver=local,destination=/var/nicico/,volume-opt=type=nfs,volume-opt=device=:/var/nicico/,volume-opt=o=addr=apps-m01' \
          -l traefik.port=8080 \
          -l traefik.docker.network=web-net \
          -l traefik.backend=$CI_PROJECT_NAME \
          -l traefik.frontend.rule=PathPrefix:/training \
          -e PROFILE=Production \
          -e JVM_ARGS=-Djasypt.encryptor.password=$G_JASYPT_PASSWORD \
          --name $CI_PROJECT_NAME \
          $G_REG_PULL_URL/$CI_PROJECT_NAME:$CI_COMMIT_TAG
      else
        echo '*** Update ***'
        docker service update \
          --update-order start-first \
          --update-failure-action rollback \
          --image $G_REG_PULL_URL/$CI_PROJECT_NAME:$CI_COMMIT_TAG \
          $CI_PROJECT_NAME
      fi
      "
